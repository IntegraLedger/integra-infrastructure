{
    "version": 3,
    "deployment": {
        "manifest": {
            "time": "2025-08-23T18:59:55.576799-04:00",
            "magic": "12f16485067e417d28666248039cc5d9176b7e24c4e20455e71f58c0be1b7a0c",
            "version": "v3.190.0"
        },
        "secrets_providers": {
            "type": "service",
            "state": {
                "url": "https://api.pulumi.com",
                "owner": "dafisher2000-org",
                "project": "integra-infrastructure",
                "stack": "dev"
            }
        },
        "metadata": {},
        "resources": [
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "custom": false,
                "type": "pulumi:pulumi:Stack",
                "created": "2025-08-23T19:30:51.134776Z",
                "modified": "2025-08-23T19:30:51.134776Z",
                "sourcePosition": "project:///node_modules/@pulumi/runtime/stack.ts#37,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0",
                "custom": true,
                "id": "e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "__internal": {},
                    "enableDryRun": "false",
                    "version": "4.23.0"
                },
                "outputs": {
                    "enableDryRun": "false",
                    "version": "4.23.0"
                },
                "created": "2025-08-23T19:30:53.543323Z",
                "modified": "2025-08-23T19:30:53.543323Z"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure",
                "custom": true,
                "id": "integra-infrastructure",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-infrastructure"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-d436d833",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-infrastructure"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:38Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-infrastructure"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-d436d833",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-a60b025c",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:38Z"
                            }
                        ],
                        "name": "integra-infrastructure",
                        "resourceVersion": "35809541",
                        "uid": "9c2d29c1-5530-4f60-97ba-48ffc155f889"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-23T19:30:54.578889Z",
                "modified": "2025-08-23T19:30:54.578889Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/namespace.ts#85,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "custom": true,
                "id": "integra-apps",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-apps"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-338289ec",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-apps"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2025-08-19T16:27:37Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-apps"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-338289ec",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-c544ddee",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:37Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:linkerd.io/inject": {}
                                        }
                                    }
                                },
                                "manager": "kubectl-annotate",
                                "operation": "Update",
                                "time": "2025-08-21T00:54:16Z"
                            }
                        ],
                        "name": "integra-apps",
                        "resourceVersion": "35809545",
                        "uid": "6ed98155-fa34-46a3-80b3-e7c127f3322d"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-23T19:30:54.958519Z",
                "modified": "2025-08-23T19:30:54.958519Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/namespace.ts#85,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "custom": true,
                "id": "integra-workflow",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-workflow"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-ecf23647",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-workflow"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2025-08-19T16:27:38Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-workflow"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-ecf23647",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-9ca289e1",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:38Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:linkerd.io/inject": {}
                                        }
                                    }
                                },
                                "manager": "kubectl-annotate",
                                "operation": "Update",
                                "time": "2025-08-21T00:54:17Z"
                            }
                        ],
                        "name": "integra-workflow",
                        "resourceVersion": "35809544",
                        "uid": "e84866ae-b8f3-4707-9dce-dfbf68cb0373"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-23T19:30:54.857511Z",
                "modified": "2025-08-23T19:30:54.857511Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/namespace.ts#85,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "custom": true,
                "id": "integra-blockchain",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-blockchain"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-864cb305",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-blockchain"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2025-08-19T16:27:38Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-blockchain"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-864cb305",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-493486c4",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:38Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:linkerd.io/inject": {}
                                        }
                                    }
                                },
                                "manager": "kubectl-annotate",
                                "operation": "Update",
                                "time": "2025-08-21T00:54:16Z"
                            }
                        ],
                        "name": "integra-blockchain",
                        "resourceVersion": "35809540",
                        "uid": "908b2114-2505-4d53-bc81-c3e70136668b"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-23T19:30:54.535606Z",
                "modified": "2025-08-23T19:30:54.535606Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/namespace.ts#85,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-infrastructure-registry",
                "custom": true,
                "id": "integra-infrastructure/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJX+EFuk7lVaXQuUfW1IYffVyTsohu1TBN1GVwu0QfbHngWDfqlPERS6WMgvfRHkJ8bb6uhdOVrBosZY26zTGbdbSeP84TKbYkyW2kQ2FX1wlKvebCY/kQFJc+cWBqNj4JPDa9FiaaxradKBS67FDpYow1cXYLgRgQtS6nq/qDGA0pR6NRVLcPL/NA0APoR7Xan15h5t7W+o7XV4CjOGakiGo9fSTIqYEJsgt1X914NQ43wzB2qeSb7/G5bVYa9s2D0q7PkERI5gzYlaKYhY+wFj3y+kDOZZRR+pRP5plU81WnyexRLaQaseouinqgmYlmcyrvkhwGmQo9qpCwKij3+lLPeCk4Zaucj1oZmH6CDC07x5aV+ni4TtGzPMM2G6WVR62iDwU7sz"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-infrastructure"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-83259011",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAIanjhtPPeu6uYEjkcjPS27bvSO6gpJE1zfXiBijRrTJRmQEPm5YZUWiIkr6cGXka0TnqCeR4ebWef6GkDufpA6YvqAf1zmDhId+vHvzhPLZ2V9W9WVoLVWTQlLLruFnU5I67YTrNDyEIG8ZzlYlimR0G7diZCYzDKlRDy44igCqWESkf8KVCELd9Znktf13lPwYQzT/2YyVu1fsqC6O9QYpr2c5oyRoOMVkhwdz/RDy4KCyj5qSkwBuiIJYa/T69zOKho1L9oEF2PDHMCQtl2K4oxDxZ5hCMy0KIlsLLKhBV72FfqbF+X5tO3iTz2cFTNYohExVuW4jqzHrolPF4x2kyRA9D+/8NiIYvxkWMMZVoXyfKUNUJPRb6+qgYngCcHR8lJJkP08B"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-infrastructure"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABABoVMKr4jlPOUARh/YKIxnLGZqcoXJN/NmjSv+x7daRa8TOjUj9qgtfUOI6e5wydbtj7HXGg60+2axT5WWhTnmXYBPg134QuKkGOOjNnxYrZ6tM9AlgsQ4ZQ09Yy3lc24M8bpoNrnvSBighPrWyihZVrgYN0vq3NAM5Kgjf/JGACJ6zD+tiDgiyxT6aOe1/XipyhI49+UyzGLQrlKuSEP6JIgv8VWJcgJDZoWibYCbM3O0qZHikrWaJ65MQGt3/aOgVgdOsE6CBD2Zf/QgqIF5TJeatk/K3IjHopoFvLrn+414psZ5d0i7EEWNShKH5Vo2VAYkuE5lVE+yE+14MyblZ7nMav3R8yh9SX4Yk+iZjPsxjjUidO8++Hmb4vduyu5VWj1IZmyGWF"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T21:45:22Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-83259011",
                                "operation": "Apply",
                                "time": "2025-08-23T21:45:22Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "35858529",
                        "uid": "58a1ffd5-8894-4abc-b954-78a724040280"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:45:23.007478Z",
                "modified": "2025-08-23T21:45:23.007478Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/secret.ts#109,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service::integra-bridge-service",
                "custom": false,
                "type": "integra:service",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps"
                ],
                "created": "2025-08-23T19:30:57.568987Z",
                "modified": "2025-08-23T19:30:57.568987Z",
                "sourcePosition": "project:///index.ts#100,5"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service::integra-trust-app",
                "custom": false,
                "type": "integra:service",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps"
                ],
                "created": "2025-08-23T19:30:57.321124Z",
                "modified": "2025-08-23T19:30:57.321124Z",
                "sourcePosition": "project:///index.ts#100,5"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry",
                "custom": true,
                "id": "integra-workflow/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHN04Dd8SstFSbMpP2cueMU1V64VVDOp6PMBLt+0fR3OUi/bzwwLGjBJo8rupsRwAePxTUOL7O/oZIwP/KNLOhmmpWtYjs4PxhVRMDwH2guiY3YDN2Tx8Vln5p8SpnLAbOjW+nzj0F+FYCif2D/6D0YJ7GJqfGw8zw3v1EdZzKmsIGwSUWhCWDpl/HXX4d7UsZqGheOzTVqnDOcntSxsSx3DeHUPK5Qipoai+ZAcBzwnDMIxVwKA4Hsl2gns3yOFpfKAcr9Zm28DemWFlGJeeLfqxhx6g9mv3As9UyaiXpV3sOdZhaP6+9J8GsQy1McVX6EDkpZCjHT4peg4CL0WPLBtxucPlgptRxsjiAGzCEL2wL4zKshEW1xvAyhBH/yqUaEmDw9fsSt3"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-workflow"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-5ebf7dda",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAMMYwCwgADwlXHpIwt5QhsMMrxSz4Xag9aVkEYnab32clc1z55u8ZWC44pxUxrCxcpq5jaZBc22RWswU/x/UNlFeNyESBjTliM5ZUkEUnz4PpWOcCR90XejZUw1kJ3xO011C8WXFsOJc9M8s0OBkRODky9I0DDOxTdwWhzypIJxrA/n0J2tvsv3bO7no5zNdjXWNPbvoK45Uu61iBK76RijcKXFVhu0YLq3/iXOluCUt+/WHZfAAUddLpwdrpDXwHOVNGLNuvXucUeSinBcjxPk2BaCOwqYQ66rfzAlhdeUMd6vOVNPmFSTTA5vD5EumELMqBC2EnvmbQQe/hevXSLEHs+8SdiOMKY1SD5/UD+gqFfyOc0n9EaJvX1gL4F0Hg59/c4z3wP4N"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-workflow"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAM4t+1Qv/ETN5FYJNGtQASxIj/OWOUVHhH0biW5mAgUKR1UjAVuAfLv/Zc+0PUs/6/5kSksjTqhT0OJ+BedW8yGZ2b+SuAuZT7kl67C9WtG8MuTb0kjo+xzycZrFA/jg1NRLEJPndbDBePOGQvUjnOVrR/AcdJMzrUEMXM2BEhQcnaBPEXFIdxa08ctBoLgoTpPk/Q2Aoqb0ORnRKM6bQlEwb1uD0eVjMWzTEHtOY4EJS4LI8gec9DUvaSI3I/hfsg5Le49aLG222Hj1QW/UdVnvthMNEy4qBLHwBugTCU7z9m3FKs8MkWjq5OtLDt1hdtzZ5vPVYlknhRIWNnAx9zlqapbf1NyHC/GcJM8TGU/Tc/34ugte4LWEoMiUUhRhf2UN62A9TJRX"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T21:45:22Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-5ebf7dda",
                                "operation": "Apply",
                                "time": "2025-08-23T21:45:22Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35858524",
                        "uid": "9772cd36-c019-4fc0-8586-2d519dbb4289"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:45:22.639008Z",
                "modified": "2025-08-23T21:45:22.639008Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/secret.ts#109,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry",
                "custom": true,
                "id": "integra-apps/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAL/1Jxu1LYuBzHK2fLgHU9HsUGYNS0JH6I/4fVxUMY+n5gqZOBk+dwInLY2TA/iTXqsI7PCywvagooUOIm+PYdMNoQ2GPUMpIxgC7OYW12zhZ8KGmRT++fqW4bCP5zewg/p1+8kWSV//okVx8/BzxSW3sXCBJFZF+QmZRvJ4EyontLm+5CRGPtSG/24/MHWN6+i+zTPT0XJFqHi4NLUKMw8ouqdp1naf498sdqIe7zd7wZkQkSaIn5MrUIPrTVSaBxmNBUF9u+GodwFsQbPImemADFtHkGljojFSAC5oA7PeDBvwSPIdrmV8XoIICirxEgdwPJp3rCfcqxoSMZY15+pO/bfX5v9V6WAo2Ygy5UxxOBNmHaNYYz7jYeEy8kwCecNBscZIgkTF"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-apps"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-8b6435d2",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAA4hdPj6BG66hdqEist+UMPTJaWh0FIl90BCr9Dh+MutmNiaqZ6eRONWE11ozDxqp2ftfqNx7hfAe7wq1gAEoh/x08vs227oSuaqlVmxGPWcy6XRfF7Q1pqi5rVlc74sk4TryQB7FhqWKqCb4rgNrwS2jfaN7rF235bfdFzRFoKuwrhQmec6EMDWNuxgVcZgj6PIcvlehau0dNoSrRUTvBsSnJolyy/qU8pqehSEpkMMIVrlg0qUPrJFVoI5bkkU7jDR9O0bShGDZcaVgEXQ0xL/WwAKdKQm4g4c331OCqdsU9QOvx109TA9Dn2P1feqVs5tP5peVfSX21MZUzsn5CGjkVLA9MUkGwbJhXX8mWLDBl6UW2I+ZiaQAASCYkgDXeEHFb5zPDbA"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-apps"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHQeARFooN7J7dEtJsE4OJaeQrd3FUKV2dFzqIJ8pcxPrqFnyBb9BCWF86cRdnFvnCqNuu/sZS4Y7XmAAfCENegEIcCZ3qZy9/PFo4Gqk917gtBuk+LeNY/3jm3lbzwNCxXPzScHI9VgxcFkI8V+uzqdtOhX5pJWjMA6JJtdVjbWEBlM4G0O3JZLxjkP2NST5/NRNQ888bFi84vR8CJoJ2kWI3rAJEI9/jYzRuY585oQnfKePQ/g4WVL/GZebFrvYsecooGICKlAOPkeCEEeuxUPNW9Zie9VZ6j3dhAI/ZLx2Sh3aroQKb9rX+YAsU0hhJBlAaiNPxQr1NfKvspVFuM2BLcdS8+cyafOZy9jFembKSVAPGgMxFdS8Dup4Dfj5OPh3Fo1gYDl"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T19:32:35Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-8b6435d2",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-c12f237d",
                                "operation": "Apply",
                                "time": "2025-08-23T19:32:35Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-apps",
                        "resourceVersion": "35858382",
                        "uid": "b9ce9d29-ff03-4d27-ab5d-a41daa9fadf3"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:45:00.524502Z",
                "modified": "2025-08-23T21:45:00.524502Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/secret.ts#109,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry",
                "custom": true,
                "id": "integra-blockchain/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAN3HQcYgfjs7LuNCBTwgGHBJ2xBympWBMrqxLHmnmkAmS0JmpSuXYjjZnqL4SBeULZsLOcPn80ZNPrqR57g8F5dnbWuMMTyHIDvDGuQwHsB1EI22w7xEyexwiak2KJNWSIHyZ7zUTkKMPjHlprHi8Fi4yt/7mUxg6oAsavNhhB4AWMcIfaDEk9GtJw63IBLDOVpu2zbj6aCFlS9IzBXlihgVrnGtOFcJQcJVgk4tffzF1UUhqkPog8YChQiLlnDseKC2O2+0Dri7b5FsYQosWeoAX7Jv34N6zsTlSAP4NoeqSAzjVgT7MiBAi1IDybJiZRR6M5AELPb62uAGvPA8tHsfLE4hWAAWx82cIq9XUObDHX/sHk9FsiBVaBDyG4E41X0vvK7aqMhf"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-blockchain"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-3ebbc27b",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAOeTviYmI9KWIFUuI9GYBopkwJr/d4HTu5T7nC9npoPgXoDA3NOyr3lhb7rA3u4TPIZfj+eH+G5Z5sTASZHWgzo63eL9ctMFliYgbF0q445ILC0mmQGLhr0zrf5cFd/20f9Wz1/RYW3QL4pThi6jtvH4oiQM+Dk8OukZDMoL6zLI+wfpd1+QrCXv2SwLDkVpvAGDovghpJj/pMKdkCDbke6rtaoc2r2EjcYWXK/+wOWQAJrVzGRHIR807vsOnRFBOQgXrE9MU/pmnj4Uyw5F1azm/MTk/935PLg5CQYtA8L9ZSLiLNYEiCD/ZssyKJy0zR94RBQ/mjSZPyZY/I3BS+bhWS5p+IE+3Sku5057MswZRual2gUqJmNuXwrRCKQT+f5IWQNLSCFD"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-blockchain"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABADg8nefYSKjNR9U8TbsxM3IhN7qr06eMyr6vojQcs8OL73RmuupDiCh7OqPmIb5E3NTJwQnN3dLVsD9FIbeb5Yuqshk2So8lTD99+jC/MIheaIHQk3qrofeD7XC5HKgRxmhrNz8lrubwk32CYPVmLtXAcYzaTBv0qXyyt+ZebFGs2AJ5AOHOvXOk+RJOmPYGdKFoZHt5xi1QwInAOYZHXcJKeGzCC8XJUU8OSeuGhFqmuL7orxv0+nVe6Ce/bz19R3ZIaI8+5vFWIRehpHCGr3G7to8kJMXsAHm+NQIUObniIYLTKyBQ+EjhUpqIuYbKHwj8HErP8ftlI835mCmTsuS4XkfSK9HRmxCej+bJ2PFEdvMopXRrVwCwK+BKR8U1BXl4h0+0cdm6"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T21:45:23Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-3ebbc27b",
                                "operation": "Apply",
                                "time": "2025-08-23T21:45:23Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35858535",
                        "uid": "1b3aa2f4-5c88-4a08-99bd-4d83f9b455ef"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:45:23.465331Z",
                "modified": "2025-08-23T21:45:23.465331Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/secret.ts#109,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service$kubernetes:core/v1:Service::integra-bridge-service-service",
                "custom": true,
                "id": "integra-apps/integra-bridge-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app": "integra-bridge-service"
                        },
                        "name": "integra-bridge-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-bridge-service"
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-49c04ddf",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app": "integra-bridge-service"
                            },
                            "name": "integra-bridge-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-bridge-service"
                            }
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T19:32:36Z",
                        "labels": {
                            "app": "integra-bridge-service"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-49c04ddf",
                                "operation": "Apply",
                                "time": "2025-08-23T19:32:36Z"
                            }
                        ],
                        "name": "integra-bridge-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35810222",
                        "uid": "54b240fa-1fe4-49ed-ae89-42cf3852a7bf"
                    },
                    "spec": {
                        "clusterIP": "10.245.31.27",
                        "clusterIPs": [
                            "10.245.31.27"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-bridge-service"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service::integra-bridge-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T19:32:47.059528Z",
                "modified": "2025-08-23T19:32:47.059528Z",
                "sourcePosition": "project:///index.ts#175,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service$kubernetes:core/v1:Service::integra-trust-app-service",
                "custom": true,
                "id": "integra-apps/integra-trust-app",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app": "integra-trust-app"
                        },
                        "name": "integra-trust-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-trust-app"
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f821b053",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app": "integra-trust-app"
                            },
                            "name": "integra-trust-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-trust-app"
                            }
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"integra-trust-app\",\"namespace\":\"integra-apps\"},\"spec\":{\"ports\":[{\"port\":3000,\"targetPort\":3000}],\"selector\":{\"app\":\"integra-trust-app\"}}}\n"
                        },
                        "creationTimestamp": "2025-08-23T19:33:37Z",
                        "labels": {
                            "app": "integra-trust-app"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f821b053",
                                "operation": "Apply",
                                "time": "2025-08-23T21:45:25Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "kubectl-client-side-apply",
                                "operation": "Update",
                                "time": "2025-08-23T19:33:37Z"
                            }
                        ],
                        "name": "integra-trust-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35858549",
                        "uid": "01823db5-f17f-43b9-9153-1ccf6ce95817"
                    },
                    "spec": {
                        "clusterIP": "10.245.69.127",
                        "clusterIPs": [
                            "10.245.69.127"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-trust-app"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service::integra-trust-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T21:45:35.656102Z",
                "modified": "2025-08-23T21:45:35.656102Z",
                "sourcePosition": "project:///index.ts#175,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-trust-app-env",
                "custom": true,
                "id": "integra-apps/integra-trust-app-env",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "name": "integra-trust-app-env",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-trust-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-trust-app-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-42d4bc2e",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "name": "integra-trust-app-env",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-trust-app"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-trust-app-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T21:47:06Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-42d4bc2e",
                                "operation": "Apply",
                                "time": "2025-08-23T21:47:06Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T21:47:06Z"
                            }
                        ],
                        "name": "integra-trust-app-env",
                        "namespace": "integra-apps",
                        "resourceVersion": "35859194",
                        "uid": "9e4532aa-718c-41d1-a2b1-77223719aa35"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-trust-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-trust-app-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T21:47:06Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T21:47:06Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T21:47:06Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service::integra-trust-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T21:47:06.203747Z",
                "modified": "2025-08-23T21:47:06.203747Z",
                "sourcePosition": "project:///index.ts#106,29"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-bridge-service-env",
                "custom": true,
                "id": "integra-apps/integra-bridge-service-env",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "name": "integra-bridge-service-env",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-bridge-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-bridge-service-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-82e0f685",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "name": "integra-bridge-service-env",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-bridge-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-bridge-service-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T21:47:06Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-82e0f685",
                                "operation": "Apply",
                                "time": "2025-08-23T21:47:06Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T21:47:06Z"
                            }
                        ],
                        "name": "integra-bridge-service-env",
                        "namespace": "integra-apps",
                        "resourceVersion": "35859191",
                        "uid": "ac087681-b3bd-44b5-8a2c-fbf59bbd2f18"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-bridge-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-bridge-service-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T21:47:06Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T21:47:06Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T21:47:06Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service::integra-bridge-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T21:47:06.139993Z",
                "modified": "2025-08-23T21:47:06.139993Z",
                "sourcePosition": "project:///index.ts#106,29"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "custom": false,
                "type": "kubernetes:helm.sh/v3:Chart",
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "created": "2025-08-23T21:12:42.779129888Z",
                "modified": "2025-08-23T21:12:42.779129888Z",
                "sourcePosition": "project:///node_modules/@pulumi/helm/v3/helm.ts#159,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-monitoring",
                "custom": true,
                "id": "integra-monitoring",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-monitoring"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c80b7bc4",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-monitoring"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:37Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-monitoring"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-34f3b804",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-c80b7bc4",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-a8493af4",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:37Z"
                            }
                        ],
                        "name": "integra-monitoring",
                        "resourceVersion": "35846633",
                        "uid": "341339b6-c797-4b37-aeb4-7c83304fb7a9"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:43.301887097Z",
                "modified": "2025-08-23T21:12:43.301887097Z",
                "sourcePosition": "project:///index.ts#23,21"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Service::apisix-gateway",
                "custom": true,
                "id": "apisix/apisix-gateway",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "name": "apisix-gateway",
                        "namespace": "apisix"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-4b211660",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "name": "apisix-gateway",
                            "namespace": "apisix"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubernetes.digitalocean.com/load-balancer-id": "f054d378-ac89-4c35-aa27-bf7f842e4a71",
                            "meta.helm.sh/release-name": "apisix",
                            "meta.helm.sh/release-namespace": "apisix",
                            "service.beta.kubernetes.io/do-loadbalancer-floating-ip": "138.197.49.23",
                            "service.beta.kubernetes.io/do-loadbalancer-type": "REGIONAL"
                        },
                        "creationTimestamp": "2025-08-21T03:05:46Z",
                        "finalizers": [
                            "service.kubernetes.io/load-balancer-cleanup"
                        ],
                        "labels": {
                            "app.kubernetes.io/instance": "apisix",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "apisix",
                            "app.kubernetes.io/service": "apisix-gateway",
                            "app.kubernetes.io/version": "3.13.0",
                            "helm.sh/chart": "apisix-2.11.5"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/service": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:externalTrafficPolicy": {},
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {}
                                    }
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-21T03:05:46Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:allocateLoadBalancerNodePorts": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-21T03:29:04Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:kubernetes.digitalocean.com/load-balancer-id": {},
                                            "f:service.beta.kubernetes.io/do-loadbalancer-type": {}
                                        }
                                    }
                                },
                                "manager": "digitalocean-cloud-controller-manager",
                                "operation": "Update",
                                "time": "2025-08-21T03:29:05Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:service.beta.kubernetes.io/do-loadbalancer-floating-ip": {}
                                        }
                                    }
                                },
                                "manager": "kubectl-annotate",
                                "operation": "Update",
                                "time": "2025-08-21T03:31:07Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:finalizers": {
                                            ".": {},
                                            "v:\"service.kubernetes.io/load-balancer-cleanup\"": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:loadBalancer": {
                                            "f:ingress": {}
                                        }
                                    }
                                },
                                "manager": "digitalocean-cloud-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-21T03:31:08Z"
                            }
                        ],
                        "name": "apisix-gateway",
                        "namespace": "apisix",
                        "resourceVersion": "34423084",
                        "uid": "eb687f1a-5a99-4ba6-931e-ac7e5d48a16d"
                    },
                    "spec": {
                        "allocateLoadBalancerNodePorts": true,
                        "clusterIP": "10.245.62.65",
                        "clusterIPs": [
                            "10.245.62.65"
                        ],
                        "externalTrafficPolicy": "Cluster",
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "apisix-gateway",
                                "nodePort": 31405,
                                "port": 80,
                                "protocol": "TCP",
                                "targetPort": 9080
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "apisix",
                            "app.kubernetes.io/name": "apisix"
                        },
                        "sessionAffinity": "None",
                        "type": "LoadBalancer"
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "209.38.62.72",
                                    "ipMode": "VIP"
                                },
                                {
                                    "ip": "2604:a880:800:14:0:1:a088:6000",
                                    "ipMode": "VIP"
                                }
                            ]
                        }
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "external": true,
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "modified": "2025-08-23T21:44:45.637624Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/service.ts#81,16"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-fa46aefa",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-viewer-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-0899a180",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-8bc9d16b",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-fa46aefa",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                        "resourceVersion": "35846660",
                        "uid": "ef6738f9-85ef-458c-87b0-7c9e5a73bf9e"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:45.733998051Z",
                "modified": "2025-08-23T21:12:45.733998051Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-viewer-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-cb0fe2e4",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-471437bc",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-cb0fe2e4",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-cd97b247",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-role",
                        "resourceVersion": "35846639",
                        "uid": "34cd26f5-e115-421d-947b-ac1a6b446d6f"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:44.187743982Z",
                "modified": "2025-08-23T21:12:44.187743982Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-3b5859a9",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-editor-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-2caf9a53",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-3b5859a9",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-920b756b",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                        "resourceVersion": "35846658",
                        "uid": "e58b67f8-eadc-4301-8586-6b085598cc24"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:45.597715523Z",
                "modified": "2025-08-23T21:12:45.597715523Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                "custom": true,
                "id": "infisical-opera-manager-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-manager-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-manager-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-de08fabb",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-manager-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-manager-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "infisical-opera-controller-manager",
                                "namespace": "integra-infrastructure"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:42Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-80f27518",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-de08fabb",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-9daba15c",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:42Z"
                            }
                        ],
                        "name": "infisical-opera-manager-rolebinding",
                        "resourceVersion": "35846691",
                        "uid": "67fad9b5-7969-439f-8c28-1ac36809e0a6"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-manager-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:49.050589261Z",
                "modified": "2025-08-23T21:12:49.050589261Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-admin-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-admin-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-admin-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-ab5cf028",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-admin-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalsecret-admin-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-0adfb262",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-32244252",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-ab5cf028",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-admin-rolebinding",
                        "resourceVersion": "35846652",
                        "uid": "1379f9f4-0000-446b-acf9-473d2837afe6"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-admin-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:45.041223963Z",
                "modified": "2025-08-23T21:12:45.041223963Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-editor-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-editor-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-editor-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-10920a3d",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-editor-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalsecret-editor-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-10920a3d",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-36f759fb",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-b2aa4d44",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-editor-rolebinding",
                        "resourceVersion": "35846667",
                        "uid": "d510a95d-8420-4862-9250-7b83600606d1"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-editor-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:46.308709681Z",
                "modified": "2025-08-23T21:12:46.308709681Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-admin-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-admin-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-b68da407",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-admin-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-6cb751ae",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-b68da407",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-fe0bbf41",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-admin-role",
                        "resourceVersion": "35846666",
                        "uid": "e0a95cc4-39c6-41b5-8ecf-40a975c71c89"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:46.143085864Z",
                "modified": "2025-08-23T21:12:46.143085864Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                "custom": true,
                "id": "infisical-opera-metrics-auth-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-metrics-auth-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-metrics-auth-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-24957eea",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-metrics-auth-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-metrics-auth-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "infisical-opera-controller-manager",
                                "namespace": "integra-infrastructure"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:24Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-24957eea",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-513f46a4",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-d8f97c3c",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:24Z"
                            }
                        ],
                        "name": "infisical-opera-metrics-auth-rolebinding",
                        "resourceVersion": "35846640",
                        "uid": "6bf870bb-9a02-4432-ac9e-501aa85926bc"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-metrics-auth-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:44.315628093Z",
                "modified": "2025-08-23T21:12:44.315628093Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-admin-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-63509d3a",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-63509d3a",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-d39455de",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-fdc46cdd",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-admin-role",
                        "resourceVersion": "35846638",
                        "uid": "b8d422a9-2fe3-43ed-a9ae-f20fde2ea629"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:44.051776251Z",
                "modified": "2025-08-23T21:12:44.051776251Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-admin-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-fa7f5420",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-8b829fc8",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-c2ae7842",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-fa7f5420",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-role",
                        "resourceVersion": "35846647",
                        "uid": "db0c1a50-db52-4a23-9640-75134ee2bed9"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:44.617995218Z",
                "modified": "2025-08-23T21:12:44.617995218Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-viewer-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a9ac1a23",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-a685d350",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-a9ac1a23",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-f9d492a9",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-role",
                        "resourceVersion": "35846710",
                        "uid": "22f236e4-d370-43ac-b44d-cf79360b6a27"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:50.680406437Z",
                "modified": "2025-08-23T21:12:50.680406437Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                "custom": true,
                "id": "infisical-opera-metrics-auth-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-metrics-auth-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-6c3123ea",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-metrics-auth-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-1426f1c5",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-6c3123ea",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-8361c284",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-metrics-auth-role",
                        "resourceVersion": "35846690",
                        "uid": "62c8db87-6b96-45a3-af0f-943327b3d77b"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:48.902111841Z",
                "modified": "2025-08-23T21:12:48.902111841Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-controller-manager",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-controller-manager",
                        "namespace": "integra-infrastructure"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-cc78479c",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:44Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-b4a94282",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-cc78479c",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-1e99171c",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:44Z"
                            }
                        ],
                        "name": "infisical-opera-controller-manager",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "35846700",
                        "uid": "5fd09ab8-a7de-4c6e-9c3b-80c0f3144f00"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:49.88519533Z",
                "modified": "2025-08-23T21:12:49.88519533Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                "custom": true,
                "id": "infisical-opera-metrics-reader",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-metrics-reader"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-3a1f05ba",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-metrics-reader"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:40Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-3a1f05ba",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-6beca0e5",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-cdf7cabf",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:40Z"
                            }
                        ],
                        "name": "infisical-opera-metrics-reader",
                        "resourceVersion": "35846665",
                        "uid": "b5b2bffa-197e-43be-975f-3a5ce3b0b7df"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:46.008610847Z",
                "modified": "2025-08-23T21:12:46.008610847Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                "custom": true,
                "id": "clustergenerators.secrets.infisical.com",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "clustergenerators.secrets.infisical.com"
                    },
                    "spec": {
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "ClusterGenerator",
                            "listKind": "ClusterGeneratorList",
                            "plural": "clustergenerators",
                            "singular": "clustergenerator"
                        },
                        "scope": "Cluster",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ClusterGenerator represents a cluster-wide generator",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "generator": {
                                                        "description": "Generator the spec for this generator, must match the kind.",
                                                        "properties": {
                                                            "passwordSpec": {
                                                                "description": "PasswordSpec controls the behavior of the password generator.",
                                                                "properties": {
                                                                    "allowRepeat": {
                                                                        "default": false,
                                                                        "description": "set allowRepeat to true to allow repeating characters.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "digits": {
                                                                        "description": "digits specifies the number of digits in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                        "type": "integer"
                                                                    },
                                                                    "length": {
                                                                        "default": 24,
                                                                        "description": "Length of the password to be generated.\nDefaults to 24",
                                                                        "type": "integer"
                                                                    },
                                                                    "noUpper": {
                                                                        "default": false,
                                                                        "description": "Set noUpper to disable uppercase characters",
                                                                        "type": "boolean"
                                                                    },
                                                                    "symbolCharacters": {
                                                                        "description": "symbolCharacters specifies the special characters that should be used\nin the generated password.",
                                                                        "type": "string"
                                                                    },
                                                                    "symbols": {
                                                                        "description": "symbols specifies the number of symbol characters in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "uuidSpec": {
                                                                "description": "UUIDSpec controls the behavior of the uuid generator.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "kind": {
                                                        "description": "Kind the kind of this generator.",
                                                        "enum": [
                                                            "Password",
                                                            "UUID"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "kind"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9b6034c3",
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.18.0"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "clustergenerators.secrets.infisical.com"
                        },
                        "spec": {
                            "group": "secrets.infisical.com",
                            "names": {
                                "kind": "ClusterGenerator",
                                "listKind": "ClusterGeneratorList",
                                "plural": "clustergenerators",
                                "singular": "clustergenerator"
                            },
                            "scope": "Cluster",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ClusterGenerator represents a cluster-wide generator",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "properties": {
                                                        "generator": {
                                                            "description": "Generator the spec for this generator, must match the kind.",
                                                            "properties": {
                                                                "passwordSpec": {
                                                                    "description": "PasswordSpec controls the behavior of the password generator.",
                                                                    "properties": {
                                                                        "allowRepeat": {
                                                                            "default": false,
                                                                            "description": "set allowRepeat to true to allow repeating characters.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "digits": {
                                                                            "description": "digits specifies the number of digits in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                            "type": "integer"
                                                                        },
                                                                        "length": {
                                                                            "default": 24,
                                                                            "description": "Length of the password to be generated.\nDefaults to 24",
                                                                            "type": "integer"
                                                                        },
                                                                        "noUpper": {
                                                                            "default": false,
                                                                            "description": "Set noUpper to disable uppercase characters",
                                                                            "type": "boolean"
                                                                        },
                                                                        "symbolCharacters": {
                                                                            "description": "symbolCharacters specifies the special characters that should be used\nin the generated password.",
                                                                            "type": "string"
                                                                        },
                                                                        "symbols": {
                                                                            "description": "symbols specifies the number of symbol characters in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "uuidSpec": {
                                                                    "description": "UUIDSpec controls the behavior of the uuid generator.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "kind": {
                                                            "description": "Kind the kind of this generator.",
                                                            "enum": [
                                                                "Password",
                                                                "UUID"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "kind"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0",
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-44981711",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-496c7fc2",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-9b6034c3",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "clustergenerators.secrets.infisical.com",
                        "resourceVersion": "35846715",
                        "uid": "b7674f3a-f312-4b67-98d4-49b4220ee741"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "ClusterGenerator",
                            "listKind": "ClusterGeneratorList",
                            "plural": "clustergenerators",
                            "singular": "clustergenerator"
                        },
                        "scope": "Cluster",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ClusterGenerator represents a cluster-wide generator",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "generator": {
                                                        "description": "Generator the spec for this generator, must match the kind.",
                                                        "properties": {
                                                            "passwordSpec": {
                                                                "description": "PasswordSpec controls the behavior of the password generator.",
                                                                "properties": {
                                                                    "allowRepeat": {
                                                                        "default": false,
                                                                        "description": "set allowRepeat to true to allow repeating characters.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "digits": {
                                                                        "description": "digits specifies the number of digits in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                        "type": "integer"
                                                                    },
                                                                    "length": {
                                                                        "default": 24,
                                                                        "description": "Length of the password to be generated.\nDefaults to 24",
                                                                        "type": "integer"
                                                                    },
                                                                    "noUpper": {
                                                                        "default": false,
                                                                        "description": "Set noUpper to disable uppercase characters",
                                                                        "type": "boolean"
                                                                    },
                                                                    "symbolCharacters": {
                                                                        "description": "symbolCharacters specifies the special characters that should be used\nin the generated password.",
                                                                        "type": "string"
                                                                    },
                                                                    "symbols": {
                                                                        "description": "symbols specifies the number of symbol characters in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "uuidSpec": {
                                                                "description": "UUIDSpec controls the behavior of the uuid generator.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "kind": {
                                                        "description": "Kind the kind of this generator.",
                                                        "enum": [
                                                            "Password",
                                                            "UUID"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "kind"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "ClusterGenerator",
                            "listKind": "ClusterGeneratorList",
                            "plural": "clustergenerators",
                            "singular": "clustergenerator"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:51.048099821Z",
                "modified": "2025-08-23T21:12:51.048099821Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-editor-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a0e48f71",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-7567a5f1",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-8faa753e",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-a0e48f71",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-editor-role",
                        "resourceVersion": "35846651",
                        "uid": "7f29538c-b14f-4d0e-bbb2-14ea9864fb3e"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:44.846223383Z",
                "modified": "2025-08-23T21:12:44.846223383Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-editor-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-editor-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-7bf2ae75",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-editor-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-0ec28aaa",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-2c83bbb4",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-7bf2ae75",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-editor-role",
                        "resourceVersion": "35846704",
                        "uid": "3590c8a0-eaae-4aac-9a8a-89fe14102da1"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:50.363731027Z",
                "modified": "2025-08-23T21:12:50.363731027Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "control-plane": "controller-manager",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-controller-manager-metrics-service",
                        "namespace": "integra-infrastructure"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "https",
                                "port": 8443,
                                "protocol": "TCP",
                                "targetPort": 8443
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/name": "secrets-operator",
                            "control-plane": "controller-manager"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2234080f",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "control-plane": "controller-manager",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-controller-manager-metrics-service",
                            "namespace": "integra-infrastructure"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "https",
                                    "port": 8443,
                                    "protocol": "TCP",
                                    "targetPort": 8443
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/name": "secrets-operator",
                                "control-plane": "controller-manager"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:44Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "control-plane": "controller-manager",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:control-plane": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":8443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-2234080f",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:control-plane": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":8443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-baf32ee5",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:control-plane": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":8443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-48565fb9",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:44Z"
                            }
                        ],
                        "name": "infisical-opera-controller-manager-metrics-service",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "35846693",
                        "uid": "c1eb1dfd-e2b0-4d0a-9fdc-e05590f0169d"
                    },
                    "spec": {
                        "clusterIP": "10.245.88.211",
                        "clusterIPs": [
                            "10.245.88.211"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "https",
                                "port": 8443,
                                "protocol": "TCP",
                                "targetPort": 8443
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/name": "secrets-operator",
                            "control-plane": "controller-manager"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:59.35181312Z",
                "modified": "2025-08-23T21:12:59.35181312Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-editor-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c70a65ee",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-5b77a9ea",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-bcda1317",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-c70a65ee",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-role",
                        "resourceVersion": "35846663",
                        "uid": "32e355ff-ac3c-4451-97c7-65c19589adda"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:45.862013937Z",
                "modified": "2025-08-23T21:12:45.862013937Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-leader-election-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-leader-election-rolebinding",
                        "namespace": "integra-infrastructure"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "infisical-opera-leader-election-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-960f1cce",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-leader-election-rolebinding",
                            "namespace": "integra-infrastructure"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "infisical-opera-leader-election-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "infisical-opera-controller-manager",
                                "namespace": "integra-infrastructure"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:40Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-960f1cce",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-cf492077",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-5bd2ca76",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:40Z"
                            }
                        ],
                        "name": "infisical-opera-leader-election-rolebinding",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "35846699",
                        "uid": "0d8454e0-4760-42a9-8b74-7ea5c2011bb1"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "infisical-opera-leader-election-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:49.885244047Z",
                "modified": "2025-08-23T21:12:49.885244047Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-viewer-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-viewer-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-viewer-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-e440312e",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-viewer-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalsecret-viewer-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-7fa91800",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-e440312e",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-fee45d7a",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-viewer-rolebinding",
                        "resourceVersion": "35846686",
                        "uid": "4144f9d1-5898-4c2f-93a9-74325da3595d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-viewer-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:48.72230588Z",
                "modified": "2025-08-23T21:12:48.72230588Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-viewer-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-viewer-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-fa20bc42",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-viewer-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-4923fc6f",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-8b82cafc",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-fa20bc42",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-viewer-role",
                        "resourceVersion": "35846643",
                        "uid": "506aec23-f822-48d4-b9c2-0980ffdf529c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:44.442319388Z",
                "modified": "2025-08-23T21:12:44.442319388Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-editor-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c8f1fb11",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-editor-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-55e285a8",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-b0ced57f",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-c8f1fb11",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                        "resourceVersion": "35846654",
                        "uid": "d89b6d84-bc29-44b4-872b-ce69b5be6831"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:45.177952131Z",
                "modified": "2025-08-23T21:12:45.177952131Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-253aba6d",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-viewer-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-253aba6d",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-49134d77",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-8bf12105",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                        "resourceVersion": "35846655",
                        "uid": "ab5e50b8-a499-4a50-8bf3-b4a19327dd5c"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:45.312785725Z",
                "modified": "2025-08-23T21:12:45.312785725Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-leader-election-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-leader-election-role",
                        "namespace": "integra-infrastructure"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "coordination.k8s.io"
                            ],
                            "resources": [
                                "leases"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-0a605b2e",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-leader-election-role",
                            "namespace": "integra-infrastructure"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:41Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-0a605b2e",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-fcb7ef62",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-856f507f",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:41Z"
                            }
                        ],
                        "name": "infisical-opera-leader-election-role",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "35846702",
                        "uid": "f12e1dd0-6e3f-473f-a65c-4908966814b0"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "coordination.k8s.io"
                            ],
                            "resources": [
                                "leases"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:50.063354369Z",
                "modified": "2025-08-23T21:12:50.063354369Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f57d997f",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-admin-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-88bd3122",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-f16effc3",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-f57d997f",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                        "resourceVersion": "35846656",
                        "uid": "fabc8564-8e55-4f6b-99d4-748f51c4488b"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:45.457458136Z",
                "modified": "2025-08-23T21:12:45.457458136Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                "custom": true,
                "id": "infisical-opera-manager-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-manager-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "secrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts/token"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "statefulsets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "clustergenerators",
                                "infisicaldynamicsecrets",
                                "infisicalpushsecrets",
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/finalizers",
                                "infisicalpushsecrets/finalizers",
                                "infisicalsecrets/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status",
                                "infisicalpushsecrets/status",
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-fe556f4f",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-manager-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "secrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "clustergenerators",
                                    "infisicaldynamicsecrets",
                                    "infisicalpushsecrets",
                                    "infisicalsecrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/finalizers",
                                    "infisicalpushsecrets/finalizers",
                                    "infisicalsecrets/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/status",
                                    "infisicalpushsecrets/status",
                                    "infisicalsecrets/status"
                                ],
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:43Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-458128d6",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-fe556f4f",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-c1a2cb07",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:43Z"
                            }
                        ],
                        "name": "infisical-opera-manager-role",
                        "resourceVersion": "35846692",
                        "uid": "bf1fcc11-943d-4c9a-b003-ecadea32738c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "secrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts/token"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "statefulsets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "clustergenerators",
                                "infisicaldynamicsecrets",
                                "infisicalpushsecrets",
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/finalizers",
                                "infisicalpushsecrets/finalizers",
                                "infisicalsecrets/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status",
                                "infisicalpushsecrets/status",
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:49.181350516Z",
                "modified": "2025-08-23T21:12:49.181350516Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-admin-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-b0dcb76e",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-admin-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-645398ae",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-9dfe7cc6",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-b0dcb76e",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                        "resourceVersion": "35846709",
                        "uid": "b66631a2-2dee-4441-b211-62768a196a9d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:50.548966059Z",
                "modified": "2025-08-23T21:12:50.548966059Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                "custom": true,
                "id": "infisicalpushsecrets.secrets.infisical.com",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisicalpushsecrets.secrets.infisical.com"
                    },
                    "spec": {
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalPushSecret",
                            "listKind": "InfisicalPushSecretList",
                            "plural": "infisicalpushsecrets",
                            "singular": "infisicalpushsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalPushSecret is the Schema for the infisicalpushsecrets API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalPushSecretSpec defines the desired state of InfisicalPushSecret",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deletionPolicy": {
                                                        "type": "string"
                                                    },
                                                    "destination": {
                                                        "properties": {
                                                            "environmentSlug": {
                                                                "type": "string"
                                                            },
                                                            "projectId": {
                                                                "type": "string"
                                                            },
                                                            "secretsPath": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "environmentSlug",
                                                            "projectId",
                                                            "secretsPath"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "description": "Infisical host to pull secrets from",
                                                        "type": "string"
                                                    },
                                                    "push": {
                                                        "properties": {
                                                            "generators": {
                                                                "items": {
                                                                    "properties": {
                                                                        "destinationSecretName": {
                                                                            "type": "string"
                                                                        },
                                                                        "generatorRef": {
                                                                            "properties": {
                                                                                "kind": {
                                                                                    "allOf": [
                                                                                        {
                                                                                            "enum": [
                                                                                                "Password",
                                                                                                "UUID"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "enum": [
                                                                                                "Password",
                                                                                                "UUID"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "Specify the Kind of the generator resource",
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "kind",
                                                                                "name"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "destinationSecretName",
                                                                        "generatorRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "secret": {
                                                                "properties": {
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The name space where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    },
                                                                    "template": {
                                                                        "properties": {
                                                                            "data": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "The template key values",
                                                                                "type": "object"
                                                                            },
                                                                            "includeAllSecrets": {
                                                                                "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resyncInterval": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "updatePolicy": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "destination",
                                                    "push"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalPushSecretStatus defines the observed state of InfisicalPushSecret",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedSecrets": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "description": "managed secrets is a map where the key is the ID, and the value is the secret key (string[id], string[key] )",
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "conditions",
                                                    "managedSecrets"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2cd7352b",
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.18.0"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisicalpushsecrets.secrets.infisical.com"
                        },
                        "spec": {
                            "group": "secrets.infisical.com",
                            "names": {
                                "kind": "InfisicalPushSecret",
                                "listKind": "InfisicalPushSecretList",
                                "plural": "infisicalpushsecrets",
                                "singular": "infisicalpushsecret"
                            },
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "InfisicalPushSecret is the Schema for the infisicalpushsecrets API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "InfisicalPushSecretSpec defines the desired state of InfisicalPushSecret",
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "awsIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "azureAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "resource": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountKeyFilePath": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "serviceAccountKeyFilePath"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIdTokenAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "kubernetesAuth": {
                                                                    "properties": {
                                                                        "autoCreateServiceAccountToken": {
                                                                            "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "namespace": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "namespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountTokenAudiences": {
                                                                            "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "serviceAccountRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "ldapAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef",
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "universalAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "deletionPolicy": {
                                                            "type": "string"
                                                        },
                                                        "destination": {
                                                            "properties": {
                                                                "environmentSlug": {
                                                                    "type": "string"
                                                                },
                                                                "projectId": {
                                                                    "type": "string"
                                                                },
                                                                "secretsPath": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "environmentSlug",
                                                                "projectId",
                                                                "secretsPath"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "hostAPI": {
                                                            "description": "Infisical host to pull secrets from",
                                                            "type": "string"
                                                        },
                                                        "push": {
                                                            "properties": {
                                                                "generators": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "destinationSecretName": {
                                                                                "type": "string"
                                                                            },
                                                                            "generatorRef": {
                                                                                "properties": {
                                                                                    "kind": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "enum": [
                                                                                                    "Password",
                                                                                                    "UUID"
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "enum": [
                                                                                                    "Password",
                                                                                                    "UUID"
                                                                                                ]
                                                                                            }
                                                                                        ],
                                                                                        "description": "Specify the Kind of the generator resource",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "kind",
                                                                                    "name"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "destinationSecretName",
                                                                            "generatorRef"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "secret": {
                                                                    "properties": {
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret",
                                                                            "type": "string"
                                                                        },
                                                                        "secretNamespace": {
                                                                            "description": "The name space where the Kubernetes Secret is located",
                                                                            "type": "string"
                                                                        },
                                                                        "template": {
                                                                            "properties": {
                                                                                "data": {
                                                                                    "additionalProperties": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": "The template key values",
                                                                                    "type": "object"
                                                                                },
                                                                                "includeAllSecrets": {
                                                                                    "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "secretName",
                                                                        "secretNamespace"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "resyncInterval": {
                                                            "type": "string"
                                                        },
                                                        "tls": {
                                                            "properties": {
                                                                "caRef": {
                                                                    "description": "Reference to secret containing CA cert",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The name of the secret property with the CA certificate value",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret",
                                                                            "type": "string"
                                                                        },
                                                                        "secretNamespace": {
                                                                            "description": "The namespace where the Kubernetes Secret is located",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName",
                                                                        "secretNamespace"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "updatePolicy": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "destination",
                                                        "push"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "InfisicalPushSecretStatus defines the observed state of InfisicalPushSecret",
                                                    "properties": {
                                                        "conditions": {
                                                            "items": {
                                                                "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                                "properties": {
                                                                    "lastTransitionTime": {
                                                                        "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                        "maxLength": 32768,
                                                                        "type": "string"
                                                                    },
                                                                    "observedGeneration": {
                                                                        "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                        "format": "int64",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "reason": {
                                                                        "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "description": "status of the condition, one of True, False, Unknown.",
                                                                        "enum": [
                                                                            "True",
                                                                            "False",
                                                                            "Unknown"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                        "maxLength": 316,
                                                                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastTransitionTime",
                                                                    "message",
                                                                    "reason",
                                                                    "status",
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "managedSecrets": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "description": "managed secrets is a map where the key is the ID, and the value is the secret key (string[id], string[key] )",
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "conditions",
                                                        "managedSecrets"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0",
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-2cd7352b",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-e1cc35a6",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f8de981d",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisicalpushsecrets.secrets.infisical.com",
                        "resourceVersion": "35846717",
                        "uid": "0638bbaa-b2f3-4f73-96a2-e6893d45c609"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalPushSecret",
                            "listKind": "InfisicalPushSecretList",
                            "plural": "infisicalpushsecrets",
                            "singular": "infisicalpushsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalPushSecret is the Schema for the infisicalpushsecrets API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalPushSecretSpec defines the desired state of InfisicalPushSecret",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deletionPolicy": {
                                                        "type": "string"
                                                    },
                                                    "destination": {
                                                        "properties": {
                                                            "environmentSlug": {
                                                                "type": "string"
                                                            },
                                                            "projectId": {
                                                                "type": "string"
                                                            },
                                                            "secretsPath": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "environmentSlug",
                                                            "projectId",
                                                            "secretsPath"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "description": "Infisical host to pull secrets from",
                                                        "type": "string"
                                                    },
                                                    "push": {
                                                        "properties": {
                                                            "generators": {
                                                                "items": {
                                                                    "properties": {
                                                                        "destinationSecretName": {
                                                                            "type": "string"
                                                                        },
                                                                        "generatorRef": {
                                                                            "properties": {
                                                                                "kind": {
                                                                                    "allOf": [
                                                                                        {
                                                                                            "enum": [
                                                                                                "Password",
                                                                                                "UUID"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "enum": [
                                                                                                "Password",
                                                                                                "UUID"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "Specify the Kind of the generator resource",
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "kind",
                                                                                "name"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "destinationSecretName",
                                                                        "generatorRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "secret": {
                                                                "properties": {
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The name space where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    },
                                                                    "template": {
                                                                        "properties": {
                                                                            "data": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "The template key values",
                                                                                "type": "object"
                                                                            },
                                                                            "includeAllSecrets": {
                                                                                "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resyncInterval": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "updatePolicy": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "destination",
                                                    "push"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalPushSecretStatus defines the observed state of InfisicalPushSecret",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedSecrets": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "description": "managed secrets is a map where the key is the ID, and the value is the secret key (string[id], string[key] )",
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "conditions",
                                                    "managedSecrets"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "InfisicalPushSecret",
                            "listKind": "InfisicalPushSecretList",
                            "plural": "infisicalpushsecrets",
                            "singular": "infisicalpushsecret"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:51.355145704Z",
                "modified": "2025-08-23T21:12:51.355145704Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-controller-manager",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "control-plane": "controller-manager",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-controller-manager",
                        "namespace": "integra-infrastructure"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/name": "secrets-operator",
                                "control-plane": "controller-manager"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "kubectl.kubernetes.io/default-container": "manager"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "infisical-operator",
                                    "app.kubernetes.io/name": "secrets-operator",
                                    "control-plane": "controller-manager"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--metrics-bind-address=:8443",
                                            "--leader-elect",
                                            "--health-probe-bind-address=:8081"
                                        ],
                                        "command": [
                                            "/manager"
                                        ],
                                        "env": [
                                            {
                                                "name": "KUBERNETES_CLUSTER_DOMAIN",
                                                "value": "cluster.local"
                                            }
                                        ],
                                        "image": "infisical/kubernetes-operator:v0.10.2",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": 8081
                                            },
                                            "initialDelaySeconds": 15,
                                            "periodSeconds": 20
                                        },
                                        "name": "manager",
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/readyz",
                                                "port": 8081
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 10
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "128Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "64Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true
                                        }
                                    }
                                ],
                                "securityContext": {
                                    "runAsNonRoot": true
                                },
                                "serviceAccountName": "infisical-opera-controller-manager",
                                "terminationGracePeriodSeconds": 10
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-0ed75d75",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "control-plane": "controller-manager",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "infisical-operator",
                                    "app.kubernetes.io/name": "secrets-operator",
                                    "control-plane": "controller-manager"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "kubectl.kubernetes.io/default-container": "manager"
                                    },
                                    "labels": {
                                        "app.kubernetes.io/instance": "infisical-operator",
                                        "app.kubernetes.io/name": "secrets-operator",
                                        "control-plane": "controller-manager"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--metrics-bind-address=:8443",
                                                "--leader-elect",
                                                "--health-probe-bind-address=:8081"
                                            ],
                                            "command": [
                                                "/manager"
                                            ],
                                            "env": [
                                                {
                                                    "name": "KUBERNETES_CLUSTER_DOMAIN",
                                                    "value": "cluster.local"
                                                }
                                            ],
                                            "image": "infisical/kubernetes-operator:v0.10.2",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/healthz",
                                                    "port": 8081
                                                },
                                                "initialDelaySeconds": 15,
                                                "periodSeconds": 20
                                            },
                                            "name": "manager",
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/readyz",
                                                    "port": 8081
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 10
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "128Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "64Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "drop": [
                                                        "ALL"
                                                    ]
                                                },
                                                "readOnlyRootFilesystem": true
                                            }
                                        }
                                    ],
                                    "securityContext": {
                                        "runAsNonRoot": true
                                    },
                                    "serviceAccountName": "infisical-opera-controller-manager",
                                    "terminationGracePeriodSeconds": 10
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1"
                        },
                        "creationTimestamp": "2025-08-23T13:32:05Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "control-plane": "controller-manager",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:control-plane": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:kubectl.kubernetes.io/default-container": {}
                                                },
                                                "f:labels": {
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:control-plane": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"manager\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            "k:{\"name\":\"KUBERNETES_CLUSTER_DOMAIN\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:livenessProbe": {
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:readinessProbe": {
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                "f:drop": {}
                                                            },
                                                            "f:readOnlyRootFilesystem": {}
                                                        }
                                                    }
                                                },
                                                "f:securityContext": {
                                                    "f:runAsNonRoot": {}
                                                },
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-0ed75d75",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:control-plane": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:kubectl.kubernetes.io/default-container": {}
                                                },
                                                "f:labels": {
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:control-plane": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"manager\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            "k:{\"name\":\"KUBERNETES_CLUSTER_DOMAIN\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:livenessProbe": {
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:readinessProbe": {
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                "f:drop": {}
                                                            },
                                                            "f:readOnlyRootFilesystem": {}
                                                        }
                                                    }
                                                },
                                                "f:securityContext": {
                                                    "f:runAsNonRoot": {}
                                                },
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-b3d83247",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:control-plane": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:kubectl.kubernetes.io/default-container": {}
                                                },
                                                "f:labels": {
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:control-plane": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"manager\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            "k:{\"name\":\"KUBERNETES_CLUSTER_DOMAIN\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:livenessProbe": {
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:readinessProbe": {
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                "f:drop": {}
                                                            },
                                                            "f:readOnlyRootFilesystem": {}
                                                        }
                                                    }
                                                },
                                                "f:securityContext": {
                                                    "f:runAsNonRoot": {}
                                                },
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-57519bea",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:05Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:16Z"
                            }
                        ],
                        "name": "infisical-opera-controller-manager",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "35846703",
                        "uid": "9299e434-dfd6-47f3-82dc-6b513cab40bb"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/name": "secrets-operator",
                                "control-plane": "controller-manager"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "kubectl.kubernetes.io/default-container": "manager"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "infisical-operator",
                                    "app.kubernetes.io/name": "secrets-operator",
                                    "control-plane": "controller-manager"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--metrics-bind-address=:8443",
                                            "--leader-elect",
                                            "--health-probe-bind-address=:8081"
                                        ],
                                        "command": [
                                            "/manager"
                                        ],
                                        "env": [
                                            {
                                                "name": "KUBERNETES_CLUSTER_DOMAIN",
                                                "value": "cluster.local"
                                            }
                                        ],
                                        "image": "infisical/kubernetes-operator:v0.10.2",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": 8081,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 15,
                                            "periodSeconds": 20,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "manager",
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/readyz",
                                                "port": 8081,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "128Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "64Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {
                                    "runAsNonRoot": true
                                },
                                "serviceAccount": "infisical-opera-controller-manager",
                                "serviceAccountName": "infisical-opera-controller-manager",
                                "terminationGracePeriodSeconds": 10
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:16Z",
                                "lastUpdateTime": "2025-08-23T13:32:16Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T13:32:06Z",
                                "lastUpdateTime": "2025-08-23T13:32:16Z",
                                "message": "ReplicaSet \"infisical-opera-controller-manager-b79cdcc87\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:50.234254085Z",
                "modified": "2025-08-23T21:12:50.234254085Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-infrastructure-infisical-token",
                "custom": true,
                "id": "integra-infrastructure/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAPgrwR41AdW0dZQ/1xAIJ/WSkjo4A8uHrSwPEU9VTbx7QLfNXNz9WkoFV2zX0z9IZuQev11CWufcyXctPcqIg3OkL7ObQrBuwPYIC0AX9CSHDlf0wwuO+BMxZWiRzyKFza+bMgxVsb3RuniF0VjtqhBnNVT97NDHcEUOU+Do7U4+LlwRyb12Rmvb1+CJMrplfc2MT86hIz8Lq2mB2vdqVYlgFe4MamifMjS36oMMZHgzouCv352/lodF+bY="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-infrastructure"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-b202ddc4",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABALKOIcLFxpYPcxyrjiSC8GizYAhBuWLvSilrXyeT6xmljvSIqHBkqM/wM3Yb+RofaNtO0o+rFtWv6ZH9U4vAJ7wvB2721/nTceUMS3fVqesGXJZ1OFAT21kC2bvQgyeujiAHSREYdW4u8BmjRbLcUGsC3GOLra3kNjN+noSjv7N5D9PpTHMCm5BBfprnVL+F051FV4Vjd5KF1LYugn/pp1UzD4MbYIzpvzL7VGnMreaolnaUWEPcDkK+d3M="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-infrastructure"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHc33jtUNRE3Kk+RskJrOXm1mp4kXeGwu7zS29DYcgKENs6deUH9SU4JEdCNklhmjw3UUuz7UOpUFJ1XfzZRwXQqAkgUe9hHMFN5msWMrUJm+Y13JGEER4Oy5HTGR/rhH4jgkUeDTeig9xnv5kQzn8YZJtHHDYV8gIvWRlFGiC05npehVGeUxwW8O6JqQrLUu7mJlLIBNo621TU5I0Z8Z3YbmSNQQVITtDvSv6v6qjnepPtAxD0U1poDHGV7dIZmytaNN1+ZqiuzAa3jgNXk4YViSKbqygK2/dXCMHJVJnxRDnONTduVqLqm/JXufkUFfrEvT2N2TuiM+MYQZ4Ozytjls4txeFh2k60XEbqcwBhYVmpo0qhMT0t5vEvmIGrKtfNlhstqqUpE1h1XCZKYbmZNZf+VFHq4/MzXJNgaXDzTsZFzoxtucpSygJCEkrVYWMXBmOkUdtXEpzCf"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:22Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-04685b37",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-b202ddc4",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-1ca9c8b9",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:22Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:infisicalToken": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-19T16:35:48Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "35846747",
                        "uid": "8a53107a-dbdb-41a6-aa53-52369d42bb31"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:12:55.590163405Z",
                "modified": "2025-08-23T21:12:55.590163405Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-monitoring-infisical-token",
                "custom": true,
                "id": "integra-monitoring/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAG0l7vpKM/xTCP3mn7HmhWMPuPLOjQeEb5pSp76sfrwxvSUIFhg7pPXVV7aA0HbM+lUMrZj5v2+Zz2l8krXIZ4mFwd4jIl+7b8zKRnABXzlnmDZIa6aGIaifBDZI/H8QSfXnaMSQTOxWKJGvlI+aBqv6mNoOXF9JnVpp1QNhPH+EXnTWZlYHqRcbrCWISwscbkH4kdWYdTudOi1y9XIrlFwkvHKUFztgumTIWfxIl5Jfy1w1C/4qscNZ6M0="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-monitoring"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f66ea851",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAN8nAX6gw3mZJm+FenXFWhAHcAIGe7Wp82tPFhoLKEbFRPWZ6alQqYEbjiue9Pfy2RfLx1YEgnvNLIlE4lkFpINR0eMJ/kFjMCttVX6obIZuEohzagTpHQWhDJ5vTHvnfLBN/itmzNd53AiIHtGu+My9a5C/V4IrrKsjA0mEkk7P38zxDgfUvhFBTfDXKioTaB63CQkD6GooLQkkf/AuNeHmMrqGWKWz58i/EV+nXNO+ZbppkjmQJJFWZBA="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-monitoring"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABACjm67b/cSHbWBl3g/OBmNKLuao9c+5wQCbXQ81A+SkP7iVTi3yOFomKZl0FBGJO7Ddcak78ekGif/ZXWDLs5ugNaINp5YQCCesrCjtx/qBPjykjcXJTEKehEm/tZxmfIvSA5I9uv6Bqbx/DQmeL/fYlzxEFiqAOXcCaET8NNTfp2osxw4SJSmJc5Dowt8hGXlLHCimhMolTGYekyGRe4DVsbChiuovWvPsCiiIXJPszfyOa55sgzZ83bW8J/pwfYqiRnuxRV9N4DeJQhcZU4e6dgHpMBg1Vt8zo0nh+xG6Ly0MZ1sbXWT2319RFMDcCC38p2drtcRn4cYagOfNaxoCorWXIm4sssmR0n+2l/xkz6Bko49iGaq6++WOYZ5RYcQqvXvNSRt6GwOrhyj/4Mih1fKR+oapbAiRAwxxh1s99DY0YuC9HfKp2aCgKlXXorA77xWOJG933z4Cv"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:23Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-3e4d6b7b",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-f66ea851",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-cbf3ec35",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:23Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:infisicalToken": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-19T16:35:48Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-monitoring",
                        "resourceVersion": "35846758",
                        "uid": "27c42757-3d1d-4daa-b987-84badd3c12cd"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-monitoring",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-monitoring"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:12:56.894713706Z",
                "modified": "2025-08-23T21:12:56.894713706Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token",
                "custom": true,
                "id": "integra-apps/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAEQXgn74U4/UV1WbNZap8PXPstFwjws03bwfnVEjWgLETtKPIRzg9Yr4wU1xo5gVeNo9XpqoFnbQOgzRfvSlRfZlnPrmc1CJMyT3h6WlwSgGXgjonT6s5nm47H39mDnzWVTo2hga/rF+ecV25wjdFhRyMovry5dmLijf90qy6AzudkY4paWOU/E7Znh4dDbtkd/h2vzecq6QxAOJMF6htf9E3Y2XJ05HzixognYbMx3YNGXnSSwm9g4G4cg="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-apps"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-0185554c",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAE/spWlZgqadkR9y3KKQ8pAl/4ohOlfFllyGM3Dg+u7nlyxOXcsYVLqzlz9hiyzEoUgkqZu3XQtClV6g+cNC4HjtY1se4E1cB/aBbVzpix7DdRimavV8JF9hWn8OKaWKvi2BqxwqMKksI12QPVYsWNkrgCFPwfmgXRiIEzHgpdkR3GC7F0xQdq+zYYzwi3sv75u9isnOJajNm5Fa16F2JMGT/VTF2z9BFVTWDMRu2llKG7MoYCAEWfhsqME="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-apps"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAD/jm8W2M3icmyakY6r9EvRK8yfntwvxi8i9hLXkV07XeRbdhDxkKDSGW4+Je8ReaXAkQXz9sPxxxcV1qabCXFzbCoCHypBBQQkpvWmq4cTpKGDSd8smUmlKjtrt2/iCpxTI13QkndSXRKNb1nFXLSydTnEEef1TFZxMDOHEwPYjiqFIMn+U2FfrK6sQpmixokbJWU51XCxZXvGzvSjcLJxon+GtW0XUNv/eOgagcSiftEhWb0wr2GqI9zk="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:04Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-0185554c",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-0e1bca21",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-d00d4175",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:04Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-apps",
                        "resourceVersion": "35846718",
                        "uid": "3abcfc1a-c597-4f00-ac92-6e6308b72f4f"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:12:51.375132925Z",
                "modified": "2025-08-23T21:12:51.375132925Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                "custom": true,
                "id": "integra-blockchain/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAMjdQmpBcSblsiznXbvnxIIjgVbH1wJctsPTdJnmP6dl4liVbXAT/O2Cq02PcqzW7fvxOeE7L1VTuTuLDtmfhD1QrSm880BOTVcWpvRg88Uj6oACQCbh4Q9/b2l/0kIxZxeTyk+4qNWrbEBsQUCjMHjGQRSXBGRvqvUjZK2yR8dgK3Ao8CkFvYIyODzStQzzNlus2xgzqcN/PNBmzBd9Bqk7TZvdUvjaMy0X5vwAeiBUIsbDpv8Hzf59u6Q="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-blockchain"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-db1f35e5",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABANDJD3PZMug/FRr9ttW9kdTQOsK+ZA1ObVI59nu5gfBqViHLRcqMExHs/TG03ZLjdbgFPmUPdjcfRr7oyxxnbeR5RFFd6U6WSWN04wf1scbWIfhjmjPwD4ubreo7g38HsaKiiVONKeyCEnFtLAKO/Lpy+D9i+GQ0g0MbmPNgFDz39OvUKYolXUkGAu8hHVA4vluOdxfb9YEvy0hZAwEMCzuxDw5WQpo+UNxOPTQJJjHmNIyyVJC0xIOPnAs="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-blockchain"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABADGnb0KwPD0F0NJJhCiSXg4ZT1uMfMBPLLEPLZmgIeR3c9xzj33n8vRI5rpMthv3whIPMkp6L148RYG7JGo/VBPDTkslZ+xKHUK08CdBzqNNEAUzoELt2vpO4Nv6AatLWA5VcR/AjXpuLTChYOwJXiqdYVqWt/TmpZpPgCyxdBUligQM/bDYN31QxGtGAGH6J3axjw/L6yUQc4zW5Ma+b9WV/15jlU3Y1TUZZ+CjThMYANFeiE0iI1gYmpdyYnqTwNeMHlvljeN7qnwwZ2XQrp7RoTBP4TEjsHdlG28yzae8CxHR6Ci0zyzTLoyjEQQ3bLJgVy9nNsRrWmeQG8OmPj2uLmta4hu6Dt85+ahjca5O2rAg1HGFhZzokmtfijoo+faI5CZfn3vHksw86j3ieq00P6WAgIPHlsS0xPoxjEp9eIdH3R17joQhtJ89X5KkZZdnbpeU7lPCgyMq"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:19Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-cc3e12cc",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-db1f35e5",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-6119048e",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:19Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:infisicalToken": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-19T16:35:47Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35846738",
                        "uid": "cc0a46ba-a9eb-4d38-bfe2-478759260819"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:12:54.67447185Z",
                "modified": "2025-08-23T21:12:54.67447185Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                "custom": true,
                "id": "infisicaldynamicsecrets.secrets.infisical.com",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisicaldynamicsecrets.secrets.infisical.com"
                    },
                    "spec": {
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalDynamicSecret",
                            "listKind": "InfisicalDynamicSecretList",
                            "plural": "infisicaldynamicsecrets",
                            "singular": "infisicaldynamicsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalDynamicSecret is the Schema for the infisicaldynamicsecrets API.",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalDynamicSecretSpec defines the desired state of InfisicalDynamicSecret.",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dynamicSecret": {
                                                        "properties": {
                                                            "environmentSlug": {
                                                                "type": "string"
                                                            },
                                                            "projectId": {
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "type": "string"
                                                            },
                                                            "secretsPath": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "environmentSlug",
                                                            "projectId",
                                                            "secretName",
                                                            "secretsPath"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "type": "string"
                                                    },
                                                    "leaseRevocationPolicy": {
                                                        "type": "string"
                                                    },
                                                    "leaseTTL": {
                                                        "type": "string"
                                                    },
                                                    "managedSecretReference": {
                                                        "properties": {
                                                            "creationPolicy": {
                                                                "default": "Orphan",
                                                                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            },
                                                            "secretType": {
                                                                "default": "Opaque",
                                                                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "description": "The template to transform the secret data",
                                                                "properties": {
                                                                    "data": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "The template key values",
                                                                        "type": "object"
                                                                    },
                                                                    "includeAllSecrets": {
                                                                        "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "authentication",
                                                    "dynamicSecret",
                                                    "leaseRevocationPolicy",
                                                    "leaseTTL",
                                                    "managedSecretReference"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalDynamicSecretStatus defines the observed state of InfisicalDynamicSecret.",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "dynamicSecretId": {
                                                        "type": "string"
                                                    },
                                                    "lease": {
                                                        "properties": {
                                                            "creationTimestamp": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "expiresAt": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "version": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "creationTimestamp",
                                                            "expiresAt",
                                                            "id",
                                                            "version"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxTTL": {
                                                        "description": "The MaxTTL can be null, if it's null, there's no max TTL and we should never have to renew.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "conditions"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f2937778",
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.18.0"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisicaldynamicsecrets.secrets.infisical.com"
                        },
                        "spec": {
                            "group": "secrets.infisical.com",
                            "names": {
                                "kind": "InfisicalDynamicSecret",
                                "listKind": "InfisicalDynamicSecretList",
                                "plural": "infisicaldynamicsecrets",
                                "singular": "infisicaldynamicsecret"
                            },
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "InfisicalDynamicSecret is the Schema for the infisicaldynamicsecrets API.",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "InfisicalDynamicSecretSpec defines the desired state of InfisicalDynamicSecret.",
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "awsIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "azureAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "resource": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountKeyFilePath": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "serviceAccountKeyFilePath"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIdTokenAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "kubernetesAuth": {
                                                                    "properties": {
                                                                        "autoCreateServiceAccountToken": {
                                                                            "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "namespace": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "namespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountTokenAudiences": {
                                                                            "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "serviceAccountRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "ldapAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef",
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "universalAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "dynamicSecret": {
                                                            "properties": {
                                                                "environmentSlug": {
                                                                    "type": "string"
                                                                },
                                                                "projectId": {
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "type": "string"
                                                                },
                                                                "secretsPath": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "environmentSlug",
                                                                "projectId",
                                                                "secretName",
                                                                "secretsPath"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "hostAPI": {
                                                            "type": "string"
                                                        },
                                                        "leaseRevocationPolicy": {
                                                            "type": "string"
                                                        },
                                                        "leaseTTL": {
                                                            "type": "string"
                                                        },
                                                        "managedSecretReference": {
                                                            "properties": {
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "default": "Opaque",
                                                                    "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "properties": {
                                                                "caRef": {
                                                                    "description": "Reference to secret containing CA cert",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The name of the secret property with the CA certificate value",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret",
                                                                            "type": "string"
                                                                        },
                                                                        "secretNamespace": {
                                                                            "description": "The namespace where the Kubernetes Secret is located",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName",
                                                                        "secretNamespace"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "authentication",
                                                        "dynamicSecret",
                                                        "leaseRevocationPolicy",
                                                        "leaseTTL",
                                                        "managedSecretReference"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "InfisicalDynamicSecretStatus defines the observed state of InfisicalDynamicSecret.",
                                                    "properties": {
                                                        "conditions": {
                                                            "items": {
                                                                "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                                "properties": {
                                                                    "lastTransitionTime": {
                                                                        "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                        "maxLength": 32768,
                                                                        "type": "string"
                                                                    },
                                                                    "observedGeneration": {
                                                                        "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                        "format": "int64",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "reason": {
                                                                        "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "description": "status of the condition, one of True, False, Unknown.",
                                                                        "enum": [
                                                                            "True",
                                                                            "False",
                                                                            "Unknown"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                        "maxLength": 316,
                                                                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastTransitionTime",
                                                                    "message",
                                                                    "reason",
                                                                    "status",
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "dynamicSecretId": {
                                                            "type": "string"
                                                        },
                                                        "lease": {
                                                            "properties": {
                                                                "creationTimestamp": {
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "expiresAt": {
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "version": {
                                                                    "format": "int64",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "creationTimestamp",
                                                                "expiresAt",
                                                                "id",
                                                                "version"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "maxTTL": {
                                                            "description": "The MaxTTL can be null, if it's null, there's no max TTL and we should never have to renew.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "conditions"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0",
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-19570016",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f226c0c9",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f2937778",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisicaldynamicsecrets.secrets.infisical.com",
                        "resourceVersion": "35846695",
                        "uid": "fe369c41-7cfc-4696-92ee-8babd218b475"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalDynamicSecret",
                            "listKind": "InfisicalDynamicSecretList",
                            "plural": "infisicaldynamicsecrets",
                            "singular": "infisicaldynamicsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalDynamicSecret is the Schema for the infisicaldynamicsecrets API.",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalDynamicSecretSpec defines the desired state of InfisicalDynamicSecret.",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dynamicSecret": {
                                                        "properties": {
                                                            "environmentSlug": {
                                                                "type": "string"
                                                            },
                                                            "projectId": {
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "type": "string"
                                                            },
                                                            "secretsPath": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "environmentSlug",
                                                            "projectId",
                                                            "secretName",
                                                            "secretsPath"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "type": "string"
                                                    },
                                                    "leaseRevocationPolicy": {
                                                        "type": "string"
                                                    },
                                                    "leaseTTL": {
                                                        "type": "string"
                                                    },
                                                    "managedSecretReference": {
                                                        "properties": {
                                                            "creationPolicy": {
                                                                "default": "Orphan",
                                                                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            },
                                                            "secretType": {
                                                                "default": "Opaque",
                                                                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "description": "The template to transform the secret data",
                                                                "properties": {
                                                                    "data": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "The template key values",
                                                                        "type": "object"
                                                                    },
                                                                    "includeAllSecrets": {
                                                                        "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "authentication",
                                                    "dynamicSecret",
                                                    "leaseRevocationPolicy",
                                                    "leaseTTL",
                                                    "managedSecretReference"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalDynamicSecretStatus defines the observed state of InfisicalDynamicSecret.",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "dynamicSecretId": {
                                                        "type": "string"
                                                    },
                                                    "lease": {
                                                        "properties": {
                                                            "creationTimestamp": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "expiresAt": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "version": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "creationTimestamp",
                                                            "expiresAt",
                                                            "id",
                                                            "version"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxTTL": {
                                                        "description": "The MaxTTL can be null, if it's null, there's no max TTL and we should never have to renew.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "conditions"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "InfisicalDynamicSecret",
                            "listKind": "InfisicalDynamicSecretList",
                            "plural": "infisicaldynamicsecrets",
                            "singular": "infisicaldynamicsecret"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:49.525375648Z",
                "modified": "2025-08-23T21:12:49.525375648Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                "custom": true,
                "id": "integra-blockchain/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAG9z4XYqHj6uQ6VP1UhvIDMIAqElL0QIcACF4IACNj4KL8jaMEhm9/fcmoHTN5htskSRtZLdtIZRE1k0q40Pgp+Y1blCMBjShTKIILg2qP+Vx2upJYXvLdWFtbCsslGZiW10gBJDRJk+BMO1uT1F7DDq9SpTm1DVtx4OJQd5MVDqRfeHx8sQ6w42/VyCkfWZv75jloGL1mfxrQfMP0WNd6H0OHi9Lljbx5NMyhnHli3K/5xX4+dynheY3o/2D0lpKqfv6UfncP240szlltFnIF1EniaAonStpumuKHVip3fMFhX090Bkidh1HVW+ujPnwdz0OuUx9Tq7qGFLuh4012nF97iWoXQSdoSFSof//mTg8Iq3xAkOPmPA26deVNHalTgC/y+xF5NL"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-blockchain"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-b9ee8793",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAJWz2rCkNX8G6kQlHW+PtC70zFsYumCIk76Dv0EAHA6+EAe2TN8n96uTFwKwbE+7ekbe/tc8qd8uqlMQzRGibjIz8JDvatGeW+7A010GPZ6d9Bruy/XhInVwn57vnSIdE1sZIlKzhdH67M3Hfe8lcyOUwjzzH82qpsqHXxJLcwTeRBBN+fV/HzxDc6gJu6xh3qv4YBAmu827D00cx2+Usb+ZNB7LcSMg4qjZOl79FJ8y1Y2IRfl6VS9cdOnPZfRORpPlKVmkmJEnRuvisofC9h5GfnqQWGw7VGr8ommjBpCtxyT2Uf43daUJ5a9+9gCnn0TSFSP2OYpW5j9YzEcBDiOS6hE1xkhE7TlBDsAxluuEnB/XQSZg/dymIAzICwE3Yqo1jVtWGdhK"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-blockchain"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAOCrH10tRPvNRxXtc6uWMAoe20Fu1DoTi6ec1gc8fUzXiqC6eA597HnAW09ZGAA4O95jF3Y6NhEt8NoXAzhGoOLsTgXdD4Z4kDCn+zdAQfggbEZgEezakuHyujvyKzT9piK4JfwPnI1qmDLZoTtrta7cPOcPwbC/DAXym6+UudJIW2dnS6fSKmJaKYe+F38ZMu3KxVBErlLqeFPwh/yop2NXvb3tVflwRPBEftrgK9dg/1N+Vt5gahtTIijhqxhgdaFYcjglSYprLiF4Ab4bKOQJpmjSNg5R14H8TWeAqZUUkmYThWKxcN+xvBLBc0YIVL0A4touMNbGIo8f98XLLyL61U13quUAVLqOvjYfpNDnY5ohVWW6m85lXhSJGOpQxREdv+qPqBVk"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:19Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-b9ee8793",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-e9bfe70c",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-51a27379",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:19Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35846740",
                        "uid": "4d23475f-8a67-45cd-9f8e-7f8ca9227445"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:12:54.995885267Z",
                "modified": "2025-08-23T21:12:54.995885267Z",
                "sourcePosition": "project:///index.ts#38,26"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                "custom": true,
                "id": "integra-workflow/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAEsGcYdZcqdlGiTJ/L1smIojpu7Dhp7iqerUNXuzPfnnKZsGTvmSnyJU64mK464PPM83jSD6lESMx9pEDPkNdXnZT511qxCrAdOjJGrDWxciyHdmVWu1LBRzP1rUqNbQkijIdBeXycmJ/Z58JzqegoAULwA3MEHE1o27fHJ0ZW6Nc1JWKS0zPXxoE1VvQ6YP/Fk4FROHitC93Pvly/+kqwm/YE/Hy3JR2chdJrshwzZ3rJY/E+gu63Q5P4/B5CX7u6dURO11FoBEcWXBk2LoRCQTPGxWn/OfNKBZp/9klKUM1QOIFiTbSDkBpy3uVPP2wcjIq6qhTR7p+FX+t8sBuIl7L28dmlNvFU7V5hAfyN+WoFY4SMK6nQUv1DEqOoucocY3whHiwVk2"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-workflow"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-961ba745",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAAp84nzm+5VtTjaCLT01w15/ZekJklybWH7yl1OlNdN4hgFKR9XXRdcND8uWPUoXKDwImeXhm5rGYrC4iDSScxvydBkFLfu6jqmFUugsqsQPt3SVsujqsbn/OtF8KVdMQ+0zoESugWayoGYdlHRAufYo/A+zEFK19qT34EXBTgngH2kUKg9yn/GwVHA/+I5j86yPHhAkPFy4AdCM01vqX7HBe87k7h+31eHUqVdbxmyphn5O9uCPWx8K6525eKdHcFdPpl9gcYwxjwPe4ZEzA2y/VFF3z1ikrK1D0tzHcAtEP0Tqkbp47k9PgmxZifl2bSDAZyjbctImJveAs1EC9Ib8ln09WPuHl4+sjXYKH2tCu2J2KWE6G7wCVbZIXkJyDZ5zglJErCgU"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-workflow"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJUudtzYiotMxxSZ1dMwa1hiy93nxtUvs57emhPTtQpc9/4fPE+KB8fFa9879bIdkPT8LlNu0mJ5LaSECojNfOmPgtXw3LXMtqFJ38n8hfCNmzADQZN0+FGV1m1TUZ+q2s6stGsCyiHKNzDDQHptNIprQtbKxdOI84MiGqWiHM3/kNYOt2Vg2L3m9tzGiChBuXxjygbXEt4GqW8p5IIFBHA/eCyYYVLdojoycYZvEb54bNpeFE9FfsRapaw7EeENZP1dRoBU7VT6vACn6iytLih7wWKYBAaQ4WHKJuvKRsAU5D9KnlVaKiqchs1X89K3LR5v8UJX4FvdSW4wCnRIhYdIQAkbOq7t6YWIDZis1i/QaHvuRQdJIJBlmFtK0KyuuunPltclM5LN"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:20Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-415e108c",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-961ba745",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-b1441ef0",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:20Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35846745",
                        "uid": "691f8191-8d8b-494e-b698-a0fa7480872f"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:12:55.2944533Z",
                "modified": "2025-08-23T21:12:55.2944533Z",
                "sourcePosition": "project:///index.ts#38,26"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token",
                "custom": true,
                "id": "integra-workflow/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAF1/ScglZawSrkGG8sJUVZAdvCm346ynIIiO+/TYkg3E2WmCDgl0zFl7NWhmLn5x9rAaG4n9jpTMUwIuxvW7O2CPIBBKV1pLBQlAtD9UkSzafVUaYhtyvCnVb/CYE6ytth3B+mb9sLzS90/HAZ7XZ0QQMYh+WDvMoDY1t5/VxcvwVlERNyIbnmdASwmT1yWcfQwZ7W5rQ1GuJ1WVkMTV5LnHGoHGYkHyz6Va6eJ9/OzRefV40dhbrFOfpoE="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-workflow"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-ea0a321d",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAIKUalmAQ7jpOVSV42esrlGW84TpxAK0yA9qxwGb/WZPuKmb2LHQwUo/IiqWIQMc6Zmv9rIdoe+2zcrFo6QHwKBY5+TOPLNmVHxU5Mg4bnQaiQzuhPVxAZFSFZGegGh227ewjjQczNssbD0wcIhBvbwE3Xq5EULht+admwzzIzHhArauw+/PLLU2ebS67KDGJZNMqLYDIa8i2Nut9KK79/XLCEnqTU4ndcthPqsH90e7H6GNzcsnrO6Z4o4="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-workflow"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAFh3CsVT/30cbqQT0L9BhclT89EhYGibFmUGz22x1PlTB9g+dDE1HpHCkNX4k7x++x1c18VhC6BRmUS2IGSwW3+VHjJvREO0WnZvwamFpK08Y0TXgMpwfIoYMEXl0KDa/diauEHq5kcnuB0moplfc6tIwSTt/NHRXNztlCbKYuQPA+UeiT6CkFp6uP5MS89z5/TVS0Ps5mtH+226yyJ6WQ2T9ZL8duEFcxh/vkwEVcTObx4LNjPpzg/PL8M0Jrtng/FBNhgacaolSDNhxiR87OscfG75bY09SsHHgUDwDxiQ5HMxLTfQEJwldUqr8bp7J8EJf4yF+pPDpvCr40osySKHEzk6qeGCpfXNVkg/E/DCEb1qK6YGvkpMYVqX1GIJcjmRj94/wdd2K+9H3gyZjZiryUK3fz5J5wRmIyp1GAAoiKoiS3Y4UDOFsmp8O30VADT59uapr3yKa+Q6"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:20Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-d9d4beab",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-ea0a321d",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-fce85bda",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:20Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:infisicalToken": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-19T16:35:47Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35846751",
                        "uid": "df577924-45f6-4c29-bfb2-7adf21e0b9e9"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T21:12:55.967380717Z",
                "modified": "2025-08-23T21:12:55.967380717Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                "custom": true,
                "id": "infisicalsecrets.secrets.infisical.com",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisicalsecrets.secrets.infisical.com"
                    },
                    "spec": {
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalSecret",
                            "listKind": "InfisicalSecretList",
                            "plural": "infisicalsecrets",
                            "singular": "infisicalsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalSecret is the Schema for the infisicalsecrets API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalSecretSpec defines the desired state of InfisicalSecret",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "serviceAccount": {
                                                                "properties": {
                                                                    "environmentName": {
                                                                        "type": "string"
                                                                    },
                                                                    "projectId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountSecretReference": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "environmentName",
                                                                    "projectId",
                                                                    "serviceAccountSecretReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "serviceToken": {
                                                                "properties": {
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceTokenSecretReference": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretsScope",
                                                                    "serviceTokenSecretReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "description": "Infisical host to pull secrets from",
                                                        "type": "string"
                                                    },
                                                    "instantUpdates": {
                                                        "type": "boolean"
                                                    },
                                                    "managedKubeConfigMapReferences": {
                                                        "items": {
                                                            "properties": {
                                                                "configMapName": {
                                                                    "description": "The name of the Kubernetes ConfigMap",
                                                                    "type": "string"
                                                                },
                                                                "configMapNamespace": {
                                                                    "description": "The namespace where the Kubernetes ConfigMap is located",
                                                                    "type": "string"
                                                                },
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes ConfigMap creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the config map and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the config map owner. This will result in the config map being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "configMapName",
                                                                "configMapNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedKubeSecretReferences": {
                                                        "items": {
                                                            "properties": {
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "default": "Opaque",
                                                                    "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedSecretReference": {
                                                        "properties": {
                                                            "creationPolicy": {
                                                                "default": "Orphan",
                                                                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            },
                                                            "secretType": {
                                                                "default": "Opaque",
                                                                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "description": "The template to transform the secret data",
                                                                "properties": {
                                                                    "data": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "The template key values",
                                                                        "type": "object"
                                                                    },
                                                                    "includeAllSecrets": {
                                                                        "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "resyncInterval": {
                                                        "default": 60,
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tokenSecretReference": {
                                                        "properties": {
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "resyncInterval"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalSecretStatus defines the observed state of InfisicalSecret",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "conditions"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-0a49540e",
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.18.0"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisicalsecrets.secrets.infisical.com"
                        },
                        "spec": {
                            "group": "secrets.infisical.com",
                            "names": {
                                "kind": "InfisicalSecret",
                                "listKind": "InfisicalSecretList",
                                "plural": "infisicalsecrets",
                                "singular": "infisicalsecret"
                            },
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "InfisicalSecret is the Schema for the infisicalsecrets API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "InfisicalSecretSpec defines the desired state of InfisicalSecret",
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "awsIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "azureAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "resource": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountKeyFilePath": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope",
                                                                        "serviceAccountKeyFilePath"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIdTokenAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "kubernetesAuth": {
                                                                    "properties": {
                                                                        "autoCreateServiceAccountToken": {
                                                                            "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "namespace": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "namespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountTokenAudiences": {
                                                                            "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope",
                                                                        "serviceAccountRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "ldapAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef",
                                                                        "identityId",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "serviceAccount": {
                                                                    "properties": {
                                                                        "environmentName": {
                                                                            "type": "string"
                                                                        },
                                                                        "projectId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountSecretReference": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "environmentName",
                                                                        "projectId",
                                                                        "serviceAccountSecretReference"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "serviceToken": {
                                                                    "properties": {
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceTokenSecretReference": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "secretsScope",
                                                                        "serviceTokenSecretReference"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "universalAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "hostAPI": {
                                                            "description": "Infisical host to pull secrets from",
                                                            "type": "string"
                                                        },
                                                        "instantUpdates": {
                                                            "type": "boolean"
                                                        },
                                                        "managedKubeConfigMapReferences": {
                                                            "items": {
                                                                "properties": {
                                                                    "configMapName": {
                                                                        "description": "The name of the Kubernetes ConfigMap",
                                                                        "type": "string"
                                                                    },
                                                                    "configMapNamespace": {
                                                                        "description": "The namespace where the Kubernetes ConfigMap is located",
                                                                        "type": "string"
                                                                    },
                                                                    "creationPolicy": {
                                                                        "default": "Orphan",
                                                                        "description": "The Kubernetes ConfigMap creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the config map and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the config map owner. This will result in the config map being orphaned and not deleted when the resource is deleted.",
                                                                        "type": "string"
                                                                    },
                                                                    "template": {
                                                                        "description": "The template to transform the secret data",
                                                                        "properties": {
                                                                            "data": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "The template key values",
                                                                                "type": "object"
                                                                            },
                                                                            "includeAllSecrets": {
                                                                                "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "configMapName",
                                                                    "configMapNamespace"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "managedKubeSecretReferences": {
                                                            "items": {
                                                                "properties": {
                                                                    "creationPolicy": {
                                                                        "default": "Orphan",
                                                                        "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The name space where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    },
                                                                    "secretType": {
                                                                        "default": "Opaque",
                                                                        "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                        "type": "string"
                                                                    },
                                                                    "template": {
                                                                        "description": "The template to transform the secret data",
                                                                        "properties": {
                                                                            "data": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "The template key values",
                                                                                "type": "object"
                                                                            },
                                                                            "includeAllSecrets": {
                                                                                "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "managedSecretReference": {
                                                            "properties": {
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "default": "Opaque",
                                                                    "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "resyncInterval": {
                                                            "default": 60,
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "properties": {
                                                                "caRef": {
                                                                    "description": "Reference to secret containing CA cert",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The name of the secret property with the CA certificate value",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret",
                                                                            "type": "string"
                                                                        },
                                                                        "secretNamespace": {
                                                                            "description": "The namespace where the Kubernetes Secret is located",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName",
                                                                        "secretNamespace"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tokenSecretReference": {
                                                            "properties": {
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "resyncInterval"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "InfisicalSecretStatus defines the observed state of InfisicalSecret",
                                                    "properties": {
                                                        "conditions": {
                                                            "items": {
                                                                "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                                "properties": {
                                                                    "lastTransitionTime": {
                                                                        "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                        "maxLength": 32768,
                                                                        "type": "string"
                                                                    },
                                                                    "observedGeneration": {
                                                                        "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                        "format": "int64",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "reason": {
                                                                        "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "description": "status of the condition, one of True, False, Unknown.",
                                                                        "enum": [
                                                                            "True",
                                                                            "False",
                                                                            "Unknown"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                        "maxLength": 316,
                                                                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastTransitionTime",
                                                                    "message",
                                                                    "reason",
                                                                    "status",
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "conditions"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "creationTimestamp": "2025-08-19T16:27:45Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-0a49540e",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f62a8a64",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-80099217",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:45Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T16:27:45Z"
                            }
                        ],
                        "name": "infisicalsecrets.secrets.infisical.com",
                        "resourceVersion": "35846753",
                        "uid": "9c51f5af-f64d-488e-b799-57a965615370"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalSecret",
                            "listKind": "InfisicalSecretList",
                            "plural": "infisicalsecrets",
                            "singular": "infisicalsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalSecret is the Schema for the infisicalsecrets API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalSecretSpec defines the desired state of InfisicalSecret",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "serviceAccount": {
                                                                "properties": {
                                                                    "environmentName": {
                                                                        "type": "string"
                                                                    },
                                                                    "projectId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountSecretReference": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "environmentName",
                                                                    "projectId",
                                                                    "serviceAccountSecretReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "serviceToken": {
                                                                "properties": {
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceTokenSecretReference": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretsScope",
                                                                    "serviceTokenSecretReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "description": "Infisical host to pull secrets from",
                                                        "type": "string"
                                                    },
                                                    "instantUpdates": {
                                                        "type": "boolean"
                                                    },
                                                    "managedKubeConfigMapReferences": {
                                                        "items": {
                                                            "properties": {
                                                                "configMapName": {
                                                                    "description": "The name of the Kubernetes ConfigMap",
                                                                    "type": "string"
                                                                },
                                                                "configMapNamespace": {
                                                                    "description": "The namespace where the Kubernetes ConfigMap is located",
                                                                    "type": "string"
                                                                },
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes ConfigMap creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the config map and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the config map owner. This will result in the config map being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "configMapName",
                                                                "configMapNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedKubeSecretReferences": {
                                                        "items": {
                                                            "properties": {
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "default": "Opaque",
                                                                    "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedSecretReference": {
                                                        "properties": {
                                                            "creationPolicy": {
                                                                "default": "Orphan",
                                                                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            },
                                                            "secretType": {
                                                                "default": "Opaque",
                                                                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "description": "The template to transform the secret data",
                                                                "properties": {
                                                                    "data": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "The template key values",
                                                                        "type": "object"
                                                                    },
                                                                    "includeAllSecrets": {
                                                                        "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "resyncInterval": {
                                                        "default": 60,
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tokenSecretReference": {
                                                        "properties": {
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "resyncInterval"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalSecretStatus defines the observed state of InfisicalSecret",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "conditions"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "InfisicalSecret",
                            "listKind": "InfisicalSecretList",
                            "plural": "infisicalsecrets",
                            "singular": "infisicalsecret"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T16:27:45Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:27:45Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:12:56.333436237Z",
                "modified": "2025-08-23T21:12:56.333436237Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-proof-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service"
                ],
                "created": "2025-08-23T21:39:55.556898393Z",
                "modified": "2025-08-23T21:39:55.556898393Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-orchestrator-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding"
                ],
                "created": "2025-08-23T21:39:55.667778038Z",
                "modified": "2025-08-23T21:39:55.667778038Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-gateway-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role"
                ],
                "created": "2025-08-23T21:39:55.795055335Z",
                "modified": "2025-08-23T21:39:55.795055335Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-messaging-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role"
                ],
                "created": "2025-08-23T21:39:55.918913575Z",
                "modified": "2025-08-23T21:39:55.918913575Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-indexer-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role"
                ],
                "created": "2025-08-23T21:39:56.049113282Z",
                "modified": "2025-08-23T21:39:56.049113282Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-workflow-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role"
                ],
                "created": "2025-08-23T21:39:56.178514163Z",
                "modified": "2025-08-23T21:39:56.178514163Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-arbitrum-executor",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com"
                ],
                "created": "2025-08-23T21:39:56.408980302Z",
                "modified": "2025-08-23T21:39:56.408980302Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-hogan-api",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding"
                ],
                "created": "2025-08-23T21:39:56.53299177Z",
                "modified": "2025-08-23T21:39:56.53299177Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-rpc-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role"
                ],
                "created": "2025-08-23T21:39:56.651850439Z",
                "modified": "2025-08-23T21:39:56.651850439Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-messaging-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service"
                ],
                "created": "2025-08-23T21:39:56.875934469Z",
                "modified": "2025-08-23T21:39:56.875934469Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-polygon-executor",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service"
                ],
                "created": "2025-08-23T21:39:57.000818015Z",
                "modified": "2025-08-23T21:39:57.000818015Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-avalanche-executor",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding"
                ],
                "created": "2025-08-23T21:39:57.12030427Z",
                "modified": "2025-08-23T21:39:57.12030427Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-blockchain-api",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding"
                ],
                "created": "2025-08-23T21:39:57.38727861Z",
                "modified": "2025-08-23T21:39:57.38727861Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-base-executor",
                "custom": false,
                "type": "integra:service:IntegraService",
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding"
                ],
                "created": "2025-08-23T21:39:57.656902737Z",
                "modified": "2025-08-23T21:39:57.656902737Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:apps/v1:Deployment::integra-trust-app-deployment",
                "custom": true,
                "id": "integra-apps/integra-trust-app",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {},
                        "name": "integra-trust-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-trust-app"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app": "integra-trust-app"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-trust-app:main-edf3d022-20250823213511",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2f0bf4b5",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {},
                            "name": "integra-trust-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 2,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-trust-app"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "app": "integra-trust-app"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-trust-app:main-edf3d022-20250823213511",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "app",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            },
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ],
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "4",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"integra-trust-app\",\"namespace\":\"integra-apps\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"integra-trust-app\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"integra-trust-app\"}},\"spec\":{\"containers\":[{\"image\":\"registry.digitalocean.com/integra-container-registry/integra-trust-app:main-29da6fd7-20250823192906\",\"name\":\"app\",\"ports\":[{\"containerPort\":3000}],\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"512Mi\"}}}],\"imagePullSecrets\":[{\"name\":\"integra-registry\"}]}}}}\n"
                        },
                        "creationTimestamp": "2025-08-23T19:33:37Z",
                        "generation": 4,
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"app\"}": {
                                                        ".": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:imagePullSecrets": {
                                                    ".": {},
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                },
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kubectl-client-side-apply",
                                "operation": "Update",
                                "time": "2025-08-23T19:33:37Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:template": {
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"app\"}": {
                                                        "f:image": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "kubectl-set",
                                "operation": "Update",
                                "time": "2025-08-23T21:42:07Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T21:42:18Z"
                            }
                        ],
                        "name": "integra-trust-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35857409",
                        "uid": "a67f6834-862e-4077-8c8f-b300b61383f8"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-trust-app"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app": "integra-trust-app"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-trust-app:main-edf3d022-20250823213511",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T19:34:20Z",
                                "lastUpdateTime": "2025-08-23T19:34:20Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T19:33:37Z",
                                "lastUpdateTime": "2025-08-23T21:42:18Z",
                                "message": "ReplicaSet \"integra-trust-app-5bf8977674\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 4,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "protect": true,
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::e76d3c51-0084-4762-86d7-5ec08b0c75ec",
                "created": "2025-08-23T21:50:39.836222Z",
                "modified": "2025-08-23T21:50:39.836222Z"
            }
        ]
    }
}
