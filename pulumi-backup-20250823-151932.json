{
    "version": 3,
    "deployment": {
        "manifest": {
            "time": "2025-08-23T13:27:58.864843-04:00",
            "magic": "12f16485067e417d28666248039cc5d9176b7e24c4e20455e71f58c0be1b7a0c",
            "version": "v3.190.0"
        },
        "secrets_providers": {
            "type": "service",
            "state": {
                "url": "https://api.pulumi.com",
                "owner": "dafisher2000-org",
                "project": "integra-infrastructure",
                "stack": "dev"
            }
        },
        "metadata": {},
        "resources": [
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "custom": false,
                "type": "pulumi:pulumi:Stack",
                "outputs": {
                    "clusterEndpoint": "209.38.62.72",
                    "deployedServiceNames": [
                        "integra-trust-app",
                        "integra-developer-app",
                        "integra-admin-app",
                        "integra-explorer-app",
                        "integra-docs-app",
                        "integra-bridge-service",
                        "integra-developer-service",
                        "integra-admin-service",
                        "integra-ai-help-service",
                        "integra-dev-assistant-service",
                        "integra-blockchain-api",
                        "integra-gateway-service",
                        "integra-rpc-service",
                        "integra-indexer-service",
                        "integra-proof-service",
                        "integra-hogan-api",
                        "integra-polygon-executor",
                        "integra-arbitrum-executor",
                        "integra-avalanche-executor",
                        "integra-base-executor",
                        "integra-temporal-orchestrator-service",
                        "integra-temporal-messaging-service",
                        "integra-messaging-service",
                        "integra-workflow-service",
                        "integra-ai-gateway-service"
                    ],
                    "namespacesList": [
                        "integra-apps",
                        "integra-blockchain",
                        "integra-workflow",
                        "integra-infrastructure",
                        "integra-monitoring"
                    ],
                    "serviceStatuses": [
                        {
                            "name": "integra-trust-app",
                            "ready": true,
                            "readyReplicas": 2,
                            "replicas": 2
                        },
                        {
                            "name": "integra-developer-app",
                            "ready": true,
                            "readyReplicas": 2,
                            "replicas": 2
                        },
                        {
                            "name": "integra-admin-app",
                            "ready": true,
                            "readyReplicas": 2,
                            "replicas": 2
                        },
                        {
                            "name": "integra-explorer-app",
                            "ready": true,
                            "readyReplicas": 2,
                            "replicas": 2
                        },
                        {
                            "name": "integra-docs-app",
                            "ready": true,
                            "readyReplicas": 1,
                            "replicas": 1
                        },
                        {
                            "name": "integra-bridge-service",
                            "ready": true,
                            "readyReplicas": 3,
                            "replicas": 3
                        },
                        {
                            "name": "integra-developer-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-admin-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-ai-help-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-dev-assistant-service",
                            "ready": true,
                            "readyReplicas": 1,
                            "replicas": 1
                        },
                        {
                            "name": "integra-blockchain-api",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-gateway-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-rpc-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-indexer-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-proof-service",
                            "ready": true,
                            "readyReplicas": 2,
                            "replicas": 2
                        },
                        {
                            "name": "integra-hogan-api",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-polygon-executor",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-arbitrum-executor",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-avalanche-executor",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-base-executor",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-temporal-orchestrator-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-temporal-messaging-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-messaging-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-workflow-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        },
                        {
                            "name": "integra-ai-gateway-service",
                            "ready": true,
                            "readyReplicas": 0,
                            "replicas": 0
                        }
                    ]
                },
                "created": "2025-08-19T16:27:33.168232Z",
                "modified": "2025-08-19T16:27:33.168232Z",
                "sourcePosition": "project:///node_modules/@pulumi/runtime/stack.ts#37,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "custom": false,
                "type": "kubernetes:helm.sh/v3:Chart",
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "created": "2025-08-19T16:27:35.110571Z",
                "modified": "2025-08-19T16:27:35.110571Z",
                "sourcePosition": "project:///node_modules/@pulumi/helm/v3/helm.ts#159,9"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0",
                "custom": true,
                "id": "ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "__internal": {},
                    "enableDryRun": "false",
                    "version": "4.23.0"
                },
                "outputs": {
                    "enableDryRun": "false",
                    "version": "4.23.0"
                },
                "created": "2025-08-19T16:27:35.552281Z",
                "modified": "2025-08-19T16:27:35.552281Z"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "custom": true,
                "id": "integra-blockchain",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-blockchain"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-493486c4",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-blockchain"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2025-08-19T16:27:38Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-blockchain"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-493486c4",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:38Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:linkerd.io/inject": {}
                                        }
                                    }
                                },
                                "manager": "kubectl-annotate",
                                "operation": "Update",
                                "time": "2025-08-21T00:54:16Z"
                            }
                        ],
                        "name": "integra-blockchain",
                        "resourceVersion": "34362831",
                        "uid": "908b2114-2505-4d53-bc81-c3e70136668b"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-19T16:27:38.105583Z",
                "modified": "2025-08-23T09:53:43.243736Z",
                "sourcePosition": "project:///index.ts#23,21"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-monitoring",
                "custom": true,
                "id": "integra-monitoring",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-monitoring"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a8493af4",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-monitoring"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:37Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-monitoring"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-a8493af4",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:37Z"
                            }
                        ],
                        "name": "integra-monitoring",
                        "resourceVersion": "33718984",
                        "uid": "341339b6-c797-4b37-aeb4-7c83304fb7a9"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-19T16:27:37.783767Z",
                "modified": "2025-08-19T16:27:37.783767Z",
                "sourcePosition": "project:///index.ts#23,21"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure",
                "custom": true,
                "id": "integra-infrastructure",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-infrastructure"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a60b025c",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-infrastructure"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:38Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-infrastructure"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-a60b025c",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:38Z"
                            }
                        ],
                        "name": "integra-infrastructure",
                        "resourceVersion": "33719001",
                        "uid": "9c2d29c1-5530-4f60-97ba-48ffc155f889"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-19T16:27:38.563375Z",
                "modified": "2025-08-19T16:27:38.563375Z",
                "sourcePosition": "project:///index.ts#23,21"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "custom": true,
                "id": "integra-apps",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-apps"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c544ddee",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-apps"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2025-08-19T16:27:37Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-apps"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-c544ddee",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:37Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:linkerd.io/inject": {}
                                        }
                                    }
                                },
                                "manager": "kubectl-annotate",
                                "operation": "Update",
                                "time": "2025-08-21T00:54:16Z"
                            }
                        ],
                        "name": "integra-apps",
                        "resourceVersion": "34362830",
                        "uid": "6ed98155-fa34-46a3-80b3-e7c127f3322d"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-19T16:27:37.611419Z",
                "modified": "2025-08-23T09:53:43.250276Z",
                "sourcePosition": "project:///index.ts#23,21"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "custom": true,
                "id": "integra-workflow",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "integra-workflow"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9ca289e1",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "integra-workflow"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2025-08-19T16:27:38Z",
                        "labels": {
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "integra-workflow"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-9ca289e1",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:38Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:linkerd.io/inject": {}
                                        }
                                    }
                                },
                                "manager": "kubectl-annotate",
                                "operation": "Update",
                                "time": "2025-08-21T00:54:17Z"
                            }
                        ],
                        "name": "integra-workflow",
                        "resourceVersion": "34362833",
                        "uid": "e84866ae-b8f3-4707-9dce-dfbf68cb0373"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-19T16:27:38.416273Z",
                "modified": "2025-08-23T09:53:43.245302Z",
                "sourcePosition": "project:///index.ts#23,21"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                "custom": true,
                "id": "integra-blockchain/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAMxg5GWJDa/JEoqL7p6EG46KZHSp6mw9WW/I2VQv9P2agIKouR/tl3EAU73WS82RJAER5NiVtKCQ2NyGkYe3kwNnsYMVHhxVt1C2k9QyYMLZwV/bRiUe/bJkwNo1+Sk5DlZuc810ohTEcdXyKK8+yx5e9CLjX5XkcWu6x6Is5b2aDJOFGt736dWveIoWHq+9dwZHJsaaYKOHldXjVTMhoK/AHWsLWm8uApwSym4G4bhwXT2WnoQpmC2ILt1n54DF1/SecuTMlkvaA2XaJgpJk/Sn4fDwsL96QNX/g3Er5rwQAp9ViKfoEFhXCK5PiydhTiOK4UhZ7FURXlWJx9gk7YeIPp8KdG+KjqMNu26tbDU81y/pXU7HSUQjaHv/6sf3QAVeB+7dRja4"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-blockchain"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-51a27379",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAN0HZ21AX118CpRsZ1ONFwydmCmhWOWvsra1kuGhF6X5C776RQhxaxNnJE+na4bMKW/9I7nBGdaPgTBWtfS5CPBNQduZbAF0NP7gu3RwhkpP3pomOB99gVrxeWZJNEZRvl2kMbi9CIiwbPaGs9hvTrwGz6uNeo02mFa3tLQTfVakeR3cMQnVuChKVAgdtQ18P6wq6AbMuP0ihgn+Dsg/u6njP3sXYKWWs3B7546Yz1n7vGBUCbs9W0LAG+fcQUxOZGSCPaefJfSoXizlS5dzL3KwSHIFcK9FlP+6jAnxjOZZt3VcYF7cZtF6Ez4D3pSI1Um8M+ByJ6iPdSsXphw/bcyENKs9aoz2SRg0QZocHo5BXRL0HOoOJOVXPhAeJy2nzFySVAG8KE76"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-blockchain"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAARmhuegLPIIPARsCKMh/8VO3HOqPwbz/5LInqkmMYtfQZpdLJU8CiV1TpH5DNiSN8DOvNO2fPEaxflUKKlN8kJMo5rBNaFnCCL79FDUHNrkPq7W5AGNIMYEcNzyikbhYSmzrEuE5OlyKnc5a4y5H3I90Ft9h81hzVwUamjcdaVJ3Iuuf9q0JDFs3VWRMk9v+kQGiRfKS44DD8IoSEpJbACop9GpLvraXoJZfH563mD5N8HUk4JI8yJwd4p3c/XPSfZrosJLXiQjJlrKj2SuGMrP1dluyoq9PpluhgA4e8Q1RVH9IsjVxjNskFUEIcvapT5OHjbjLW758rxzH7ydfof0b6JjMUIh8dTpPKUTWD+HY3HFY+07zzBUd1762XbwBduul0rho7Ls"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:19Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-51a27379",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:19Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "33719274",
                        "uid": "4d23475f-8a67-45cd-9f8e-7f8ca9227445"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:28:19.719887Z",
                "modified": "2025-08-19T16:28:19.719887Z",
                "sourcePosition": "project:///index.ts#38,26"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                "custom": true,
                "id": "integra-blockchain/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAOVkKcNQGpE7cUszbbYFJfBnYM+jCD45+U4xvAO7fDGpU14rQzv/BljDb6wBItCi1Ms1Q82gsVxbUkIwyMpqYxHDhuvXz46Rz/rGavCBxSJ+x8+tTHkFCcrqNpC8Vs22cUo8oCgSlg8lyHfhV+B1b6ARMuh1GxWyVeWoHX2zvDIgngrWvu174T+SUI7tEtxwT5CDxdbZc6WyjbP/5aCpHO08RvMYE/L0iuyxWCBNPcANx6PMeRBbxFqSowI="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-blockchain"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-6119048e",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAGo3kAyooG9G1tvni30odR9RBKxABUmD1eHMHZ/qeH5HGxcoZHF+g5JdjOR3Kh2t8ovpS9ze5mPvwXAgeRu5295WlDWTaJUJdNZZnNsnKQ8oQ0y9WrArDv7s6FwcwmISytFIyQ3YJM7RqNCIpPoZZupOYo7WD17SneM2OglGUnhf97VEkARTrcYPQx5gwH6ZVHbq+X5cbPBHXA5Huup8ia2Kr4NGHA/49rKTjEy8j2eSjE8+HbH+aIqGpe8="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-blockchain"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAOW5digflGvH17riFh0tZWU84O1S57806N4fIjZ9+ggwaJqFGcaidOqzf4gEOJysqVtapmLZuNJm+dHupc1vJUbcWUc8u0B2IqAyITBI8MWrmhUW3V/v3GTliK5/gJjpvsvkwgchdx/Ya6xHl58xxswOjDbIubuBmtnVL9TH3cnKQ6kM2kDbcYId3V25DpkY794xq8Z1Cr3GWuwoMkiZyV2gozMoCrXHM3AXuUbcOQL7nYR/LUsjrBEs2X1PLBy3Or9RKOL61OxKIAwbM+EfhT9zmnE31M7OvbDEIkUWoHOI3JmTvBeSmW7aNHucga+BfAbfhUJQSeYmYp9xYTedXeH5myILu4mrqER5Xj+7CzTDfv7sP2aZYSecyew4UrioII/oF9IyrJCp2zHQsYupHLhfZbwJTJVQsQEEbqYtyYgro6rhF2OHIZLOrhnGFwlaopQqeFTPAoBu+kaJ"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:19Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-6119048e",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:19Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:infisicalToken": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-19T16:35:47Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "33723800",
                        "uid": "cc0a46ba-a9eb-4d38-bfe2-478759260819"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:28:19.453682Z",
                "modified": "2025-08-23T09:53:43.245455Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-monitoring-registry-secret",
                "custom": true,
                "id": "integra-monitoring/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAAuk9G85QYsHb0rQhWUrcvuaacZZuSpkCBiSg+881FsN1qcgV5mT5yu0Zcl9+NmmF4n9z23MRaUWJGESSXDICe955PcWeh3Y06F4OEL4VNbWnSeTX9WnNBULMbQgbzkrA3hFSRsRDFqJXpJgU950hplCjbsNYfqEM0gHK5sgBYFypShGFDOVlwV0llJfBJxdjSHvjhdE1IasOKTs1U4Ga+NUu8nFcrcHGLF9GOI45oteNpeHkoPmlu3YNWCX1tjpyNTXL0dh4zFd14QKxK8ARmusb+ORGxHREVK0ebfuR0XV41kVeOF5iWqGfy8vmmEkaz7tREFJ1jTnF2bXPdkQSz6hYRvrzH7A7INCZtd06Fn+uVRP0aVNLuJWhBBFRgw+CK6ELm9NEQjJ"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-monitoring"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-db72ec44",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAMqTMEiQqi+s6bNQZXhft8097z6b6Mc0+wBlRnbRalRPSe58j2ehXuttPHqvp9BKL1u+RnYnsSoZub4hZNjCXqFRpQ9/C3ijwxQsgsfgy3X0pBerqsUfH/E1F57AKhQbfT9Xp5SMsbrkXwLSpwFfBk3yV7QHSlP0MYo8R0ma1+cR51hT4zEq+HN9JVBQ0j7rrl4uxamytNpsOhzJiMEpqNInII7xNt/vi+lax0vNsXCP7VFK4GKbxFukTNUK3HEk7xl80tssIQ+eLOyf4CCCb806OXOmwvyBx0kz24+fIfF7+x7U0cScl3+2D/uvpjJXVPAicV1rVfz6nNUhNIVTI41zTQAxEgJRNgeC8miQLczOXQgHkpbxrWylrqZC03a0smH7NXjJF1Dh"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-monitoring"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABALXAgokCC+Jguxm7IEnruO0XUJ3CEVo/xbWaTLW1RHndK287wxoeLZWBXrsCTGkKdp3ZEwMPri3ayecx9/cMiMGKj8/ke3MLkSc7JqUkf0GglT/k2y4K+fQ1wKC1ZVfx9k1f31wL+KR0V4egMT1AR9WOlt7EBJHm/a7w+MMCmOf9Xu84HBJimdhWZKtUmyCO33NmpjtAos2BYWYEIXZiG1/ZgDxb0QcPIigw8hr0buc/dZB/B7sNJHOOO94qplfcKTaCFxSGPD80DpEz4sgG8Cl9W2h5SJlIr6oov2Oh1hs6ocRzhgQVJAhd7mSW2QQV3rbhjczeFuzKq4cXiZt8S9d+ofKOAqUejMoJ5ubKfkOMcWMek0/sIvEswSqgeZyOdVUKzFqLy7Uz"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:22Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-db72ec44",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:22Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-monitoring",
                        "resourceVersion": "33719298",
                        "uid": "77d5556b-775b-45af-8d0e-23ea1b91df0b"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-monitoring",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-monitoring"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:28:22.898769Z",
                "modified": "2025-08-19T16:28:22.898769Z",
                "sourcePosition": "project:///index.ts#38,26"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                "custom": true,
                "id": "integra-workflow/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAMbVbaQag7tTQ0ZsJ6XXd0SXLoDA1vg+J+T/aC8RLiFaVqZgYUF9KvYRr7Syzn+N4hOBmWax+NWQfK81JYCv1FjHwgohqxXVHv0sXe4WLmwpSZYvEG9sSh+RnniakGh+cgGYXMgnQRx7wK93eWuqA/8mJOS7iVdMv+W/WVdma4reWrCN8dH/gDNb242tMUCU8RmY2+hOkrVdXmLtxMie74HYl4uvnXITHXsde6qz0n1ZyJFq7ENMLJQD8mbk2QX6lsmNHvH7zM2AfF5ptBbrCfSfbi5QzyjwxS1bsSkQjQSKp11+RSy2AWsa06aKvN4FesMojOXb+D0PsFEQvldmMnhyALhFpypMeQqviFjZ+BKn6V66dkYWBiPS0ii60W37XagprLwfejwn"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-workflow"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-b1441ef0",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAK8I8qMnYtQoR3S/XgPTWMTvS8wGsKupdzQiMeUvTF/6t+pG1WlQdXfARLBNOcqPq42xG/3gEAGKd2t5kj9ncmOOKPYF32U8KF8VKvsHz1QV/WO1uGLKdIc5tch3ZacnDTsQOafj0Qm4J0uPXpiRPvvIb0ExoaRDdc28beOu0SCjrB9J6nCNZxRtkGvzx/tF5eYB2/hxeEfsA03/vHPPy4H5ZpNro31+CAADmhM+JKb2vlmW8i9pp661AdhFWi/9iXQ+Yz120WxDGWUZQNkliJ/nZVXTQcmnu7LcoQeZl11ks/ElkBndVlyZXCQPIS1+elsmV0EzizIejTmI3lymif8y2AYHHuF10PQbeWYM7+Kq5l0BPmJDsFeCUm8kM9RdL72bwznQNE4A"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-workflow"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGVC0xl/lHQzCZ7HYpvyBtLGJtaaFrYgyfMPwQCfAGv3PBq68xeA+qGQvbwlmCfH80aP8jIuFYwrXbUpW47ANBMwbhvKjGSVnYNy5xC8G2mIcLG8qZxvNvK46ouKBiqBRAlTdAoYw4PYsX0+1BLPrcSY0ogM2Qog+4NlTQiWqBmyQfcqp0oc3kpF5LEF6oNfq7VL2y5bRCVs0NbQiXpCcHI297rmXNe1kxGSCVCShZ/Cbm0+kctze/0K/YZrMjdHqH0VEjF+8wVWkAecZa8FPWiYCQZADysXXBDNrySJzGVGoOHongrp1pacuxy6n7zSCIxh8Fbc3SOr3+fsSMkvt/vQLgbn9kimq0A5JYhCukQvqHygxCbPx+5wvbTx2x6kq02d57nCpPU0"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:20Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-b1441ef0",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:20Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-workflow",
                        "resourceVersion": "33719278",
                        "uid": "691f8191-8d8b-494e-b698-a0fa7480872f"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:28:20.044091Z",
                "modified": "2025-08-19T16:28:20.044091Z",
                "sourcePosition": "project:///index.ts#38,26"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-infrastructure-registry-secret",
                "custom": true,
                "id": "integra-infrastructure/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAC9DtRSwil6UCI5dnhA0HiwtFdXP0B314FBC01T1vNL6Fkj0xYJznfJ39494y1eRXqY/kFXSvjMoJWhDYRYFqrAnSKeCC+SMxJIH8ksX84WxZC9cn+9XyO7E8dzBPiSz+NDk8qLgIpA0of+ofJOTi+nt4ZzHG/LF2JrApd/PlZSrKQHWCP9Q9R4dASTJOz2FajfhFAlN2yPBzResiP08PbBpKkcXhWG9iyRNvuheJIBeBpGDPY8OTEPkCvDzAsFqYS3lon/AXLtQkLHKrp7v5qMPSuRHAnC+/+Q6FBzy4AkIbarW/Qu8Vbz2k1W3cePvfBL6JZSGUuFUJVprlH3JOBdOArlYYjxa4CN5jAz6FdzCHifwFZPyoMihyhYQ19StmS8TgksSC88t"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-infrastructure"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-8cb4008e",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAG4WJzES5km1Mkh7+lT7Tx+RV8nsFRwN4zanl+Bjm10nwMWI+g6sDuQHmutgwcwJgTzJO0H40eJHh1s5k04CTujOa4hfPCDTpK1oMAACe71OFCx7EcBZhSZsRgL1F4bgIpFklSTaMDe2Dz5RdnyPmMcbNoz7dK/y7sD58yNCFxCLPDWbLupXqLxA1V7/F3PREpv3akp/BuSuT/pI5PnjwI8F49MPq5D52l5RCNpNDvn9PreuXQI/sbAIiW1MaKkPcuy4dAd6A40HEUgcBXWoqrbUWAYzA+NocKvvI60nofzXfHmtgJDQA/ooa6zvTJeCOkATeWZt0DBQTHvHbfeWz55HzcaLXKscL5RiUfau9KQvyp1d7YIg5HGMha8jsl5HrABljtb2yPFe"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-infrastructure"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGPyBrg3TapNX08h0oKuPjPOq17kzaNdy2TNDAuLXBdDD2D3v1r/BkHJwR4uKDQxeu5v/Hy6ReEahjOAf7XtdmnNgkaQobwGViZJGKo/tPOIDN//Y90zQxwUI9EKo2Vh13LXTPDCXwQk0OkKdSSlVOlAj3mA1iPm97th2pooS8sUO1Y20aBVfn3LG6GB8TPJgTTV1wRzIm/49BCUOdJJoc59LM2d1CsSI0mDYe//exG9jXeX+iSm6WZWpgITMSfDPGeiHMrLzoGf0AL7wruZ24X7PGXL7WYhWEpXdCsB6od/LTxwIJE8U9KOqj870KxDzeE/Q8f08X9WSh7nbYod4ROSXg3qJ6XbS4VHLkh8sDg5HqFhiB4DLv0OxGaxj3a0HEUQo2NbjvNP"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:21Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-8cb4008e",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:21Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "33719288",
                        "uid": "a2e37247-4b8d-4284-9235-c2714587dd8f"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:28:21.416689Z",
                "modified": "2025-08-19T16:28:21.416689Z",
                "sourcePosition": "project:///index.ts#38,26"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token",
                "custom": true,
                "id": "integra-apps/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABALKn0pd5zvGt+3pxahiUhPpdpeqy9AXOb1BWvohE+i6E/bUxXDDhG2/llxzRpPObDJInDsHLmM/ENuoAzDB0aj4oOBHHAQOEVuoSJAhriAPrpgtY5tiG3QKysWYbA5YWV2yNf4WAlrMIuygNMamU3rqJJOXgLouUbEjoxOd8c7aPHfhRMwkT5TftmLPjT5vtrd8jNe2P/88eJyn6V/GDoLO8ST9UiFJmA2E5Te1ZBXGKrjjp9yY6pWNCsLQ="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-apps"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-d00d4175",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAE7vG7obG4ivZZgTKGLnyRl3P/mgQxuPh+g3FuvLuQytmW48WILE5M41jNwlxAY0zCJmEqxCe6mrlsm9JvO8ZXo0zi4BUPnXBxaWuMnlpFFqQlZF+5ZuOAXE6yyrNFQcg7ZqgbkZ5dPFJQpdCnp5dpwixl3KdCbDhqtaxuNyfNq+beaXH+2Hl3gGdeZ7IsmrhKZSiIpBUSAPLUk4qsb/60xXtniWyf9KDbUPuS74U8TgcrJPMr8gntUUFkI="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-apps"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABACOFR40Ainy5jjDjkm0RFsrePqnK/HIappywXtfX3uZf5vcodm/VuJUF80sol+P+8Nrgl+Qk2kLaKA1Smh0f+2rvGkLZ7OmJwUwmEyJcFkU+1U+3MpEDW4uu0c8Fzc8CDft5XGU0/E8NmQaf/Q6t2kDmJDiDlHUh1sj8rmUIA6MwXoeuUwA9rBd5mObvok4dNR1IA2veJFlLt1r+nPnHeEqmLUlDzzFb0rR7s8DrJErbOahVeB/RxUNrLFM="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:04Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-d00d4175",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:04Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-apps",
                        "resourceVersion": "35651140",
                        "uid": "3abcfc1a-c597-4f00-ac92-6e6308b72f4f"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-23T12:30:04.113004Z",
                "modified": "2025-08-23T12:30:04.113004Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token",
                "custom": true,
                "id": "integra-workflow/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAG+i57UNJyY0v7UyAdq6p98pWiEit2RNgTss+s8C9BQjv9Q3r/fNsaT/dDnr7ndXARc1jMsJGuAa/QJtaMrao/o2CYZIAyCVQo3L/0uUpdM4JWWHbCKByXHLRSlDce38Pt1/Ht3OV1GU4Jatld5f1zOouUEmEM+hNp3qcj//LdG/njsnYIeqQ2sbY/mUCj14k5K6pmAmrXV1CYstwbEdxNuC/nSwl+OasmSB4R7ffgz5QFuC3feufPlYAWc="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-workflow"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-fce85bda",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAMhk13nk2/TdjDEF53S5eA6iExGBTY/B8qP1kJt66koBVed3JeFngCb16kP8Xu5XTuvaJt4KCU101ExsUrwgYVdD+gO3GO9hmaqv79GyosJqHBa/XNhgGvPHu//4WavKnL+Upx9mEi5mebAwqtE7KZBmMV9l0oVsp49BVPbeyOZCBhuXlgFSomz1SBhyVllKE4RE6IAljiDJFOIFQEZTtzAXQlWx+owWeg+Q29NJ4+wK6WVgnm7yMEDg7qc="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-workflow"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJHxxAibJ7PwZ1aBR/Y4gDoH4VsDWeWus8L0+NZTSHZmcE+UrMli86jAb9JB+KOYIkp6jJ5AZJ0Zp3V1Wr8s723SDzWK5vof8z+F3HtH7mxQyaTWk7Vsc62/wR8rEN4HCS+iD+gMpsmkJPELTLY3hbALxk3rp5AhiVmJ5dvoLIDhf1cQlp5ugICjNevQ+voU3ix/VlLyw4OuUyS+vPnSXhhF4MDs1UEcRiU5H3+gINFRkKcsvKx3fqVYcKGfVwQWBoGLGSX//VW4I4lsg9sJA//lvz3ZfqKJXf0aCvdcMRVLrmTWtmw47wc5Y8ZDtA0IfeZg8VLkjlJR1sXWfNA5jydDMFEWWAv0TeGJB1PfdtXBk9VMQrJU5ysU5ku9K2AYGesDSOTSZfLON9ackNUdB4DD2c8tV+af+p6UPjyFYgYvoFAEddv8w/eQII5NbAZq5SxduSF4yyrX/2Tt"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:20Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-fce85bda",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:20Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:infisicalToken": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-19T16:35:47Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-workflow",
                        "resourceVersion": "33723802",
                        "uid": "df577924-45f6-4c29-bfb2-7adf21e0b9e9"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:28:20.932031Z",
                "modified": "2025-08-23T09:53:43.250431Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                "custom": true,
                "id": "integra-apps/integra-registry",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAFEC5bJqOsmE748WOk7nbQSZmvAfAnYTy6BEC3OLXRzOU3E5fAcK5Fdl7rtSKHaI5N8dkeMNjg1gKg11veGJ8EENf8oR01J+1/ZPHkLDj6D6qKE4GeQB6fKal41ombzj/NyB4MlToUhn7HzVsV8lQRTyRwmegA0ubsLJd9Zxv5Vw6I0eeBZUBLAky7b95toygpLYUuY35S6vEy9eBZNFunV0VP2KVHMWaEVUjKIRxyqJvdAt7CYdpvDx5OHDQBgBTAxXXoDMl6uE0ipfPUXzXohJ161s9uDRsREh40KhvjzYWREzuQ78kl76ljCg8HcYjEPASqR5V7DXddLWPtNVRKWM7q4kp5TGbQaQM1uJIbJoqwotSuV8cPI4nDyOIFoKMN76PvjKTSdt"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "integra-registry",
                        "namespace": "integra-apps"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-016c24e8",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAOISy9cog2zwe9CuODiskY34nvtfr86oP97HUeZ0dtlzzp2RuXSHA+VhrZFbwNYUxArJtM59IQUw6v9ei291obX5riBzouNq6FoS0IJAMfxmMfsjb//vXjVHR41XcOQCVzmG1tKpdTO2imIZfpXUImBzyz9y8zpSI8QimDzfode0RHNvRisF/XADjmu1AGnry+QuodRbKD5qLaWVShe58JAnTnwkvSzMzUoz/kyrOS2IZ5irpkrqIA9/iXQ1CtbqvJEIJRdoUsMtP9+pdMAbH9lJtAQTaM6cbnKa4Is0MylH4CQI6qh93hLLx/EQnH1RzpfXNrzjDtw9cf6GZEefkjn8v90qPgFbaE0SssSJDP9FMlyL8kJZ1x88Elrmx0zYi81CKOVGg3l/"
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "integra-registry",
                            "namespace": "integra-apps"
                        },
                        "type": "kubernetes.io/dockerconfigjson"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAENrmV4qc3YPHbuw37sm/2WODi/FiU3lPC4arEF73Ada7x2kPN9NvkyuqdWWnBJJJ+gQzKEIdPJmOmsqCC8AZ7qW/pulDnbClFvvDyAS0DOErqPH7JAlJHCuPB9Ar1MN6dJzq9hpissmoF52VF+0NjX/iSsjl0uVd0I3q7dbWPhbw7JozWhLTLLPtCnoP0s9i0FvEA71T6zwTWML+dDITNY07flBZtgMsA47posHFii7ugs63E+XXDUOcN69KYFLbYCit2u5pPuy96OLZpRQ8Brev3CW1stdk52IB8mT9EdG82QSKAPhOt8unDwEimhvWp1zHuJx9IvZ3yYc1uVARXXYupEOir2gx2WvuB8Hf1sI24xEqwqn82HqC4PaR85mFrhEFSCShfOI"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:50Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:.dockerconfigjson": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-016c24e8",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:50Z"
                            }
                        ],
                        "name": "integra-registry",
                        "namespace": "integra-apps",
                        "resourceVersion": "33719120",
                        "uid": "fe7ef075-6517-4700-853a-6304720128f2"
                    },
                    "type": "kubernetes.io/dockerconfigjson"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:27:50.571552Z",
                "modified": "2025-08-19T16:27:50.571552Z",
                "sourcePosition": "project:///index.ts#38,26"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-infrastructure-infisical-token",
                "custom": true,
                "id": "integra-infrastructure/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABANMYduwJwF8cGNVA50EIYQY98XhlLrK5e3/W3HMnDGdzxU6ph7Em0/wP3+0M4t+VvmUAdjM3TsAOIcszb3gmXFhWVM53PipzRPKaX6292sw71o2k839wjj8IbupBVmu+y4nbEp7pCzial3boHwadHdfFlM9LNfU+lqzTy3AhM5MSKm4YVGjnn3mmJQN08KUVNkDSCAOQ964Ey5u0Ppxts9LCAjqPJ9oOeTWOMCJ127vH8qXj9zRQmRFFFXo="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-infrastructure"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-1ca9c8b9",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAHsfyubov1v3w4t4m9Kyy1S/FgpnK7FDqs90bgDiqdmvVzh+yMMK2GmgkNf5fjmH6ES1cvmhJ31x+RNp9XizkkGsfGaTqoRZG/CqtXgU2ZCLxjtInSZMY/c+2mo5+Bxlr8BG6rMbVJfxTsxVcycxU27tWFbnslyxg3gxSuk1WdQc+5OGZZWswGYBIkH+uADJA2Q8w5LKW2vWGcooJ6OGvrKVUUytJeQ+3q6htpT7/NSLDIOsp/VvAfOn1Qs="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-infrastructure"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAMSvfDmwO+w0UijQYev9L+sol1lGv/FKX6QlPy3sRQD6E1y1ONzCxFc454SKte3JNXZkG+KEUjFPSBuzsk+wDR538InBaVVVslQQY2ytn9Ajs0hkQ0IPFlfxblJK5UkT3d2VggrhIUSuKiD7RNVsQqZIgS8YAVYl8QqFuRt4kFDOrF0qVNnA2ye7gTMVUYuaAIpyW4I4S6x8NRHdaVvW/u58SPu/h1D41RfDWo97kQwvr2s1bZ0wmmJJ6M5Rg6BcJNYxbD7MU1WOI0azJ7m4F0nUq5Qno6bAd3eVH1ryqiUgoClJDw2/QJVSUaej1nLB80aN/xjRyun+KnJx2d1xn6ah+epaleDMXs19nr75n8ZiTTdav3YXx8Z9OOJjwx6NU2JXs/mju0enEBbb2obijfb0dtnx95QhnNxApvSLVJ+6RFSTP2U5Ewi2ScfkXwxdNSArRzlQNfjtQB+X"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:22Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-1ca9c8b9",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:22Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:infisicalToken": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-19T16:35:48Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "33723804",
                        "uid": "8a53107a-dbdb-41a6-aa53-52369d42bb31"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-infrastructure"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:28:22.330782Z",
                "modified": "2025-08-23T09:53:43.24561Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-proof-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-proof-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-proof-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-proof-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-proof-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-proof-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-proof-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain"
                ],
                "created": "2025-08-19T16:28:25.811306Z",
                "modified": "2025-08-19T16:28:25.811306Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-monitoring-infisical-token",
                "custom": true,
                "id": "integra-monitoring/infisical-service-token",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAEYsrn7gqshXgeCx0LRbsy8bvYmVP4Xuniz2m6kXJ7W5mTJDjprjRkTSoZymqIib0P2yg0KYxOJq3IUbqmNrE9pHXvb4bq2e8agocMmF7zJO9Q5abgEcxDn5aqI/DFMO5d8X9DXTM0JKI6SrM6258mKyhUFaxSeCN/ciVFUeVRjVYeTM8f8o4qiY3AvIxtP8N7aVIvkKl7UgqBTKNZLNK003v6CP/N8LxFFhfX932iAi01WWWvMo20JBHsQ="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "name": "infisical-service-token",
                        "namespace": "integra-monitoring"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-cbf3ec35",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAAWND8mQlB5sOOydiQN/oVoAFtFu1mkH+CDp9h0aF+aDB4vQxx/58Ye6/0cyYqO3s+2Bzp3PtZEfyBiwKiAfLXSzHoL1lyq1Dsj1dMfKFJ/fhmIaS8IUl4VxsQHdvrNvxPIUf95rQfM6gDEpvcsavy8UX4fcO8wM0CgXpkKhwndYoo953t3SfsEWtdmhvVccj3gtScHZJwrpJmWufnbxfHA5FewE3C7J00NnaND+G0UKauHDO/3+5H/bh5U="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "name": "infisical-service-token",
                            "namespace": "integra-monitoring"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABABpKkjZmcs6yTQDnH1/vgSRSIluELNLHgji8z814bLt87aQVfPDl55SC8irqlRNU6+nPIB7p0SjvwTLvLs7DxZpOkfAd9YxAL6morKird8FWGj0i4O5YtG60/36uRLiY+6rHRI+tnVVVwcFq4f1UbL2Mt/lwvVc5X3fq741sReDTKyY/Kuq20RI70xam5VDhtesRcJr1K8Oawaww58DZwXDyclHZkIQlL3Zs9b/bTRkfnRzNBvAREBVBprb+qzXnhAbC4lzZLcnNcZ9Y1wCgDKClCkB8y12kfQ4qPvMDBa5fL+Q4YN4cS4iAmhSvFB49Y+o93piKUU5y05Z7hKI6t10rmFLuZ90L7dOqZsCuvXw9hQ6C0/eSCIxsvYya+czOgXyMwT8DvAmZPbSwsi67jFKwzrXZq9Sxvj2fpfN519bSsO5xRyJNgatjtbK6PXWSlCrqw29rkCL8d8ou"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:23Z",
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:serviceToken": {}
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-kubernetes-cbf3ec35",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:23Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        "f:infisicalToken": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-19T16:35:48Z"
                            }
                        ],
                        "name": "infisical-service-token",
                        "namespace": "integra-monitoring",
                        "resourceVersion": "33723807",
                        "uid": "27c42757-3d1d-4daa-b987-84badd3c12cd"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-monitoring",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-monitoring"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "stringData": [],
                    "type": []
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ],
                "created": "2025-08-19T16:28:23.304467Z",
                "modified": "2025-08-23T09:53:43.243729Z",
                "sourcePosition": "project:///index.ts#54,27"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-indexer-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-indexer-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-indexer-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-indexer-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-indexer-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-indexer-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-indexer-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token"
                ],
                "created": "2025-08-19T16:28:26.299871Z",
                "modified": "2025-08-19T16:28:26.299871Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-blockchain-api",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-blockchain-api",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-blockchain-api-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-blockchain-api-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-blockchain-api-infisical"
                    },
                    "route": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-blockchain-api",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-blockchain-api-route"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-blockchain-api",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-blockchain-api-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token"
                ],
                "created": "2025-08-19T16:28:26.843539Z",
                "modified": "2025-08-19T16:28:26.843539Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-polygon-executor",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-polygon-executor",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-polygon-executor-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-polygon-executor-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-polygon-executor-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-polygon-executor",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-polygon-executor-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain"
                ],
                "created": "2025-08-19T16:28:27.329667Z",
                "modified": "2025-08-19T16:28:27.329667Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-hogan-api",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-hogan-api",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-hogan-api-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-hogan-api-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-hogan-api-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-hogan-api",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-hogan-api-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token"
                ],
                "created": "2025-08-19T16:28:27.183167Z",
                "modified": "2025-08-19T16:28:27.183167Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-base-executor",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-base-executor",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-base-executor-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-base-executor-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-base-executor-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-base-executor",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-base-executor-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token"
                ],
                "created": "2025-08-19T16:28:26.626241Z",
                "modified": "2025-08-19T16:28:26.626241Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-gateway-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-gateway-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-gateway-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-gateway-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-gateway-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-gateway-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-gateway-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token"
                ],
                "created": "2025-08-19T16:28:26.485083Z",
                "modified": "2025-08-19T16:28:26.485083Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-rpc-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-rpc-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-rpc-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-rpc-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-rpc-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-rpc-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-rpc-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token"
                ],
                "created": "2025-08-19T16:28:26.137398Z",
                "modified": "2025-08-19T16:28:26.137398Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-arbitrum-executor",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-arbitrum-executor",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-arbitrum-executor-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-arbitrum-executor-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-arbitrum-executor-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-arbitrum-executor",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-arbitrum-executor-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token"
                ],
                "created": "2025-08-19T16:28:25.990576Z",
                "modified": "2025-08-19T16:28:25.990576Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-avalanche-executor",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-avalanche-executor",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-avalanche-executor-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-avalanche-executor-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-avalanche-executor-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-blockchain/integra-avalanche-executor",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-avalanche-executor-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-blockchain",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-blockchain-infisical-token"
                ],
                "created": "2025-08-19T16:28:27.010732Z",
                "modified": "2025-08-19T16:28:27.010732Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-developer-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-developer-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-developer-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-developer-service-infisical"
                    },
                    "route": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-developer-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-developer-service-route"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-developer-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-developer-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-23T12:30:12.260699Z",
                "modified": "2025-08-23T12:30:12.260699Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-dev-assistant-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-dev-assistant-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-dev-assistant-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-dev-assistant-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-dev-assistant-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-dev-assistant-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-dev-assistant-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-19T16:28:27.994207Z",
                "modified": "2025-08-19T16:28:27.994207Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-docs-app",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-docs-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-docs-app-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-docs-app-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-docs-app-infisical"
                    },
                    "route": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-docs-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-docs-app-route"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-docs-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-docs-app-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-19T16:28:28.309573Z",
                "modified": "2025-08-19T16:28:28.309573Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-arbitrum-executor-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-arbitrum-executor-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-arbitrum-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-arbitrum-executor",
                            "environment": "dev"
                        },
                        "name": "integra-arbitrum-executor-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-arbitrum-executor"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-arbitrum-executor-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-4ba1ab51",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-arbitrum-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-arbitrum-executor",
                                "environment": "dev"
                            },
                            "name": "integra-arbitrum-executor-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-arbitrum-executor"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-arbitrum-executor-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:29:59Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-arbitrum-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-arbitrum-executor",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-4ba1ab51",
                                "operation": "Apply",
                                "time": "2025-08-23T12:29:59Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:29:59Z"
                            }
                        ],
                        "name": "integra-arbitrum-executor-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35651090",
                        "uid": "91f6cc4d-dcba-4634-9035-d7ad057130f6"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-arbitrum-executor"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-arbitrum-executor-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:29:59Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:29:59Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 27 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:29:59Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-arbitrum-executor",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:29:59.713612Z",
                "modified": "2025-08-23T13:31:24.049969Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-admin-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-admin-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-admin-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-admin-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-admin-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-admin-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret"
                ],
                "created": "2025-08-19T16:28:27.643143Z",
                "modified": "2025-08-19T16:28:27.643143Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-hogan-api-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-hogan-api-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-hogan-api",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-hogan-api",
                            "environment": "dev"
                        },
                        "name": "integra-hogan-api-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-hogan-api"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-hogan-api-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-bb0b110a",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-hogan-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-hogan-api",
                                "environment": "dev"
                            },
                            "name": "integra-hogan-api-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-hogan-api"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-hogan-api-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:36Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-hogan-api",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-hogan-api",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-bb0b110a",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:36Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T16:36:40Z"
                            }
                        ],
                        "name": "integra-hogan-api-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "33724097",
                        "uid": "8bdf0705-cbf7-4393-a01b-40c9452aa734"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-hogan-api"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-hogan-api-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T16:36:39Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:40Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 11 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:40Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-hogan-api",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:36.828952Z",
                "modified": "2025-08-23T09:53:43.249936Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-avalanche-executor-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-avalanche-executor-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-avalanche-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-avalanche-executor",
                            "environment": "dev"
                        },
                        "name": "integra-avalanche-executor-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-avalanche-executor"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-avalanche-executor-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-5bc8f9a6",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-avalanche-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-avalanche-executor",
                                "environment": "dev"
                            },
                            "name": "integra-avalanche-executor-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-avalanche-executor"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-avalanche-executor-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:29:59Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-avalanche-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-avalanche-executor",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-5bc8f9a6",
                                "operation": "Apply",
                                "time": "2025-08-23T12:29:59Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:00Z"
                            }
                        ],
                        "name": "integra-avalanche-executor-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35651097",
                        "uid": "6d7891a1-3f0f-4eaa-91d4-4307f3af5b5d"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-avalanche-executor"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-avalanche-executor-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:29:59Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:00Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 27 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:00Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-avalanche-executor",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:29:59.919505Z",
                "modified": "2025-08-23T13:31:24.051843Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-rpc-service-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-rpc-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-rpc-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-rpc-service",
                            "environment": "dev"
                        },
                        "name": "integra-rpc-service-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-rpc-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-rpc-service-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f457bf3d",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-rpc-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-rpc-service",
                                "environment": "dev"
                            },
                            "name": "integra-rpc-service-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-rpc-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-rpc-service-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:34Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-rpc-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-rpc-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f457bf3d",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:34Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T16:36:36Z"
                            }
                        ],
                        "name": "integra-rpc-service-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "33724058",
                        "uid": "4f8026c4-3185-4b5f-9c42-af88e92c9964"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-rpc-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-rpc-service-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T16:36:35Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:36Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 32 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:36Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-rpc-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:34.610873Z",
                "modified": "2025-08-23T09:53:43.25026Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-indexer-service-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-indexer-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-indexer-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-indexer-service",
                            "environment": "dev"
                        },
                        "name": "integra-indexer-service-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-indexer-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-indexer-service-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9ee0d636",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-indexer-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-indexer-service",
                                "environment": "dev"
                            },
                            "name": "integra-indexer-service-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-indexer-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-indexer-service-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:35Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-indexer-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-indexer-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-9ee0d636",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:35Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T16:36:36Z"
                            }
                        ],
                        "name": "integra-indexer-service-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "33724066",
                        "uid": "8d571d8b-b0de-4e97-b954-3fee49536006"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-indexer-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-indexer-service-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T16:36:36Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:36Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 8 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:36Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-indexer-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:35.09002Z",
                "modified": "2025-08-23T09:53:43.247432Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-explorer-app",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-explorer-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-explorer-app-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-explorer-app-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-explorer-app-infisical"
                    },
                    "route": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-explorer-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-explorer-app-route"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-explorer-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-explorer-app-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-19T16:28:28.826475Z",
                "modified": "2025-08-19T16:28:28.826475Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-workflow-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-workflow-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-workflow-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-workflow-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-workflow-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-workflow-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-workflow-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token"
                ],
                "created": "2025-08-19T16:28:29.529199Z",
                "modified": "2025-08-19T16:28:29.529199Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-polygon-executor-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-polygon-executor-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-polygon-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-polygon-executor",
                            "environment": "dev"
                        },
                        "name": "integra-polygon-executor-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-polygon-executor"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-polygon-executor-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-4e13ea3e",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-polygon-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-polygon-executor",
                                "environment": "dev"
                            },
                            "name": "integra-polygon-executor-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-polygon-executor"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-polygon-executor-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:37Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-polygon-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-polygon-executor",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-4e13ea3e",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:37Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T16:36:40Z"
                            }
                        ],
                        "name": "integra-polygon-executor-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "33724108",
                        "uid": "8e0ae1db-8862-434e-b88e-cb969d52cba1"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-polygon-executor"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-polygon-executor-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T16:36:40Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:40Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 28 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:40Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-polygon-executor",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:37.172598Z",
                "modified": "2025-08-23T09:53:43.250939Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-trust-app",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-trust-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-trust-app-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-trust-app-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-trust-app-infisical"
                    },
                    "route": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-trust-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-trust-app-route"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-trust-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-trust-app-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-19T16:28:28.144639Z",
                "modified": "2025-08-19T16:28:28.144639Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-bridge-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-bridge-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-bridge-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-bridge-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-bridge-service-infisical"
                    },
                    "route": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-bridge-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-bridge-service-route"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-bridge-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-bridge-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-19T16:28:27.79121Z",
                "modified": "2025-08-19T16:28:27.79121Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-app",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-admin-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-admin-app-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-admin-app-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-admin-app-infisical"
                    },
                    "route": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-admin-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-admin-app-route"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-admin-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-admin-app-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-19T16:28:28.667324Z",
                "modified": "2025-08-19T16:28:28.667324Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-ai-gateway-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-ai-gateway-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-ai-gateway-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-ai-gateway-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-ai-gateway-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-ai-gateway-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-ai-gateway-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-19T16:28:28.476946Z",
                "modified": "2025-08-19T16:28:28.476946Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-proof-service-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-proof-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-proof-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-proof-service",
                            "environment": "dev"
                        },
                        "name": "integra-proof-service-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/Integra-proof-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-proof-service-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9efe08d4",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-proof-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-proof-service",
                                "environment": "dev"
                            },
                            "name": "integra-proof-service-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/Integra-proof-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-proof-service-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:34Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-proof-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-proof-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-9efe08d4",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:34Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T16:36:34Z"
                            }
                        ],
                        "name": "integra-proof-service-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "33724045",
                        "uid": "aff46ad7-6529-47f3-acc9-dc5431ec0739"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/Integra-proof-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-proof-service-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T16:36:34Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:34Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 0 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:34Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-proof-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:34.114171Z",
                "modified": "2025-08-23T09:53:43.316002Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-app",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-developer-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-developer-app-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-developer-app-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-developer-app-infisical"
                    },
                    "route": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-developer-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-developer-app-route"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-developer-app",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-developer-app-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-23T09:55:28.897455Z",
                "modified": "2025-08-23T09:55:28.897455Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-base-executor-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-base-executor-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-base-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-base-executor",
                            "environment": "dev"
                        },
                        "name": "integra-base-executor-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-base-executor"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-base-executor-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-d84c7011",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-base-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-base-executor",
                                "environment": "dev"
                            },
                            "name": "integra-base-executor-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-base-executor"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-base-executor-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:00Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-base-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-base-executor",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-d84c7011",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:00Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:00Z"
                            }
                        ],
                        "name": "integra-base-executor-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35651113",
                        "uid": "b7461619-fe8c-4190-bd23-320e5c3a2bc5"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-base-executor"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-base-executor-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:30:00Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:00Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 27 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:00Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-base-executor",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:30:00.439078Z",
                "modified": "2025-08-23T13:31:24.05178Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-ai-help-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-ai-help-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-ai-help-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-ai-help-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-ai-help-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-apps/integra-ai-help-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-ai-help-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-apps",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-apps-infisical-token"
                ],
                "created": "2025-08-19T16:28:28.983026Z",
                "modified": "2025-08-19T16:28:28.983026Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-messaging-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-temporal-messaging-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-temporal-messaging-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-temporal-messaging-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-temporal-messaging-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-temporal-messaging-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-temporal-messaging-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token"
                ],
                "created": "2025-08-19T16:28:29.362868Z",
                "modified": "2025-08-19T16:28:29.362868Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-orchestrator-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-temporal-orchestrator-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-temporal-orchestrator-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-temporal-orchestrator-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-temporal-orchestrator-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-temporal-orchestrator-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-temporal-orchestrator-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token"
                ],
                "created": "2025-08-19T16:28:29.67177Z",
                "modified": "2025-08-19T16:28:29.67177Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-messaging-service",
                "custom": false,
                "type": "integra:service:IntegraService",
                "outputs": {
                    "deployment": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-messaging-service-deployment"
                    },
                    "infisicalSecret": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-messaging-service-secrets",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-messaging-service-infisical"
                    },
                    "service": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "integra-workflow/integra-messaging-service",
                        "packageVersion": "",
                        "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-messaging-service-service"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace::integra-workflow",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-registry-secret",
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$kubernetes:core/v1:Secret::integra-workflow-infisical-token"
                ],
                "created": "2025-08-19T16:28:29.141021Z",
                "modified": "2025-08-19T16:28:29.141021Z",
                "sourcePosition": "project:///index.ts#85,19"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-gateway-service-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-gateway-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-gateway-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-gateway-service",
                            "environment": "dev"
                        },
                        "name": "integra-gateway-service-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-gateway-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-gateway-service-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-601b6ab4",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-gateway-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-gateway-service",
                                "environment": "dev"
                            },
                            "name": "integra-gateway-service-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-gateway-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-gateway-service-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:35Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-gateway-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-gateway-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-601b6ab4",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:35Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T16:36:37Z"
                            }
                        ],
                        "name": "integra-gateway-service-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "33724073",
                        "uid": "fee2944d-a706-417f-a13a-8fecdc2d8581"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-gateway-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-gateway-service-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T16:36:36Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:37Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 14 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:36:37Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-gateway-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:35.426388Z",
                "modified": "2025-08-23T09:53:43.24985Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-blockchain-api-infisical",
                "custom": true,
                "id": "integra-blockchain/integra-blockchain-api-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "environment": "dev"
                        },
                        "name": "integra-blockchain-api-secrets",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-blockchain-api"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-blockchain-api-env",
                            "secretNamespace": "integra-blockchain"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-e4a53a63",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "environment": "dev"
                            },
                            "name": "integra-blockchain-api-secrets",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-blockchain-api"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-blockchain"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-blockchain-api-env",
                                "secretNamespace": "integra-blockchain"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:29:58Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-e4a53a63",
                                "operation": "Apply",
                                "time": "2025-08-23T12:29:58Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:29:59Z"
                            }
                        ],
                        "name": "integra-blockchain-api-secrets",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35651078",
                        "uid": "2fa76b3c-66b8-4793-a7ef-4093036b8abc"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-blockchain-api"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-blockchain"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-blockchain-api-env",
                            "secretNamespace": "integra-blockchain",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:29:58Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:29:59Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 15 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:29:59Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-blockchain-api",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:29:58.661466Z",
                "modified": "2025-08-23T13:31:24.016631Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Service::apisix-gateway",
                "custom": true,
                "id": "apisix/apisix-gateway",
                "type": "kubernetes:core/v1:Service",
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-77f23dc8",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "kubernetes.digitalocean.com/load-balancer-id": "f054d378-ac89-4c35-aa27-bf7f842e4a71",
                                "meta.helm.sh/release-name": "apisix",
                                "meta.helm.sh/release-namespace": "apisix",
                                "service.beta.kubernetes.io/do-loadbalancer-floating-ip": "138.197.49.23",
                                "service.beta.kubernetes.io/do-loadbalancer-type": "REGIONAL"
                            },
                            "finalizers": [
                                "service.kubernetes.io/load-balancer-cleanup"
                            ],
                            "labels": {
                                "app.kubernetes.io/instance": "apisix",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "apisix",
                                "app.kubernetes.io/service": "apisix-gateway",
                                "app.kubernetes.io/version": "3.13.0",
                                "helm.sh/chart": "apisix-2.11.5"
                            },
                            "name": "apisix-gateway",
                            "namespace": "apisix"
                        },
                        "spec": {
                            "allocateLoadBalancerNodePorts": true,
                            "clusterIP": "10.245.62.65",
                            "clusterIPs": [
                                "10.245.62.65"
                            ],
                            "externalTrafficPolicy": "Cluster",
                            "internalTrafficPolicy": "Cluster",
                            "ipFamilies": [
                                "IPv4"
                            ],
                            "ipFamilyPolicy": "SingleStack",
                            "ports": [
                                {
                                    "name": "apisix-gateway",
                                    "nodePort": 31405,
                                    "port": 80,
                                    "protocol": "TCP",
                                    "targetPort": 9080
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "apisix",
                                "app.kubernetes.io/name": "apisix"
                            },
                            "sessionAffinity": "None",
                            "type": "LoadBalancer"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubernetes.digitalocean.com/load-balancer-id": "f054d378-ac89-4c35-aa27-bf7f842e4a71",
                            "meta.helm.sh/release-name": "apisix",
                            "meta.helm.sh/release-namespace": "apisix",
                            "service.beta.kubernetes.io/do-loadbalancer-floating-ip": "138.197.49.23",
                            "service.beta.kubernetes.io/do-loadbalancer-type": "REGIONAL"
                        },
                        "creationTimestamp": "2025-08-21T03:05:46Z",
                        "finalizers": [
                            "service.kubernetes.io/load-balancer-cleanup"
                        ],
                        "labels": {
                            "app.kubernetes.io/instance": "apisix",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "apisix",
                            "app.kubernetes.io/service": "apisix-gateway",
                            "app.kubernetes.io/version": "3.13.0",
                            "helm.sh/chart": "apisix-2.11.5"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/service": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:externalTrafficPolicy": {},
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {}
                                    }
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-21T03:05:46Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:allocateLoadBalancerNodePorts": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2025-08-21T03:29:04Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:kubernetes.digitalocean.com/load-balancer-id": {},
                                            "f:service.beta.kubernetes.io/do-loadbalancer-type": {}
                                        }
                                    }
                                },
                                "manager": "digitalocean-cloud-controller-manager",
                                "operation": "Update",
                                "time": "2025-08-21T03:29:05Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:service.beta.kubernetes.io/do-loadbalancer-floating-ip": {}
                                        }
                                    }
                                },
                                "manager": "kubectl-annotate",
                                "operation": "Update",
                                "time": "2025-08-21T03:31:07Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:finalizers": {
                                            ".": {},
                                            "v:\"service.kubernetes.io/load-balancer-cleanup\"": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:loadBalancer": {
                                            "f:ingress": {}
                                        }
                                    }
                                },
                                "manager": "digitalocean-cloud-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-21T03:31:08Z"
                            }
                        ],
                        "name": "apisix-gateway",
                        "namespace": "apisix",
                        "resourceVersion": "34423084",
                        "uid": "eb687f1a-5a99-4ba6-931e-ac7e5d48a16d"
                    },
                    "spec": {
                        "allocateLoadBalancerNodePorts": true,
                        "clusterIP": "10.245.62.65",
                        "clusterIPs": [
                            "10.245.62.65"
                        ],
                        "externalTrafficPolicy": "Cluster",
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "apisix-gateway",
                                "nodePort": 31405,
                                "port": 80,
                                "protocol": "TCP",
                                "targetPort": 9080
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "apisix",
                            "app.kubernetes.io/name": "apisix"
                        },
                        "sessionAffinity": "None",
                        "type": "LoadBalancer"
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "209.38.62.72",
                                    "ipMode": "VIP"
                                },
                                {
                                    "ip": "2604:a880:800:14:0:1:a088:6000",
                                    "ipMode": "VIP"
                                }
                            ]
                        }
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "external": true,
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "modified": "2025-08-23T17:27:27.722783Z",
                "sourcePosition": "project:///node_modules/@pulumi/core/v1/service.ts#81,16"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-developer-service-infisical",
                "custom": true,
                "id": "integra-apps/integra-developer-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-developer-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-service",
                            "environment": "dev"
                        },
                        "name": "integra-developer-service-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-developer-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-developer-service-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-dbcca202",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-developer-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-service",
                                "environment": "dev"
                            },
                            "name": "integra-developer-service-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-developer-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-developer-service-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:19Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-developer-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-dbcca202",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:19Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:19Z"
                            }
                        ],
                        "name": "integra-developer-service-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35652085",
                        "uid": "38352966-a094-4200-9462-41e607db65d9"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-developer-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-developer-service-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:30:19Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:19Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:19Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:30:19.992698Z",
                "modified": "2025-08-23T12:30:19.992698Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-dev-assistant-service-infisical",
                "custom": true,
                "id": "integra-apps/integra-dev-assistant-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-dev-assistant-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-dev-assistant-service",
                            "environment": "dev"
                        },
                        "name": "integra-dev-assistant-service-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-dev-assistant"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-dev-assistant-service-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2dd92637",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-dev-assistant-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-dev-assistant-service",
                                "environment": "dev"
                            },
                            "name": "integra-dev-assistant-service-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-dev-assistant"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-dev-assistant-service-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:37Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-dev-assistant-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-dev-assistant-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-2dd92637",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:37Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:27Z"
                            }
                        ],
                        "name": "integra-dev-assistant-service-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35677032",
                        "uid": "7d1e5cd1-f34b-4e16-9cfd-ce2264fe9b28"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-dev-assistant"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-dev-assistant-service-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:27Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:30Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:30Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-dev-assistant-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:37.978663Z",
                "modified": "2025-08-23T15:15:42.704008Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-docs-app-infisical",
                "custom": true,
                "id": "integra-apps/integra-docs-app-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-docs-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-docs-app",
                            "environment": "dev"
                        },
                        "name": "integra-docs-app-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-docs-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-docs-app-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c795f8d4",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-docs-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-docs-app",
                                "environment": "dev"
                            },
                            "name": "integra-docs-app-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-docs-app"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-docs-app-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:38Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-docs-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-docs-app",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-c795f8d4",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:38Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:26Z"
                            }
                        ],
                        "name": "integra-docs-app-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35676942",
                        "uid": "7cb23aac-f08a-4102-8c9c-e6da7859b6ae"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-docs-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-docs-app-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:26Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:31Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:31Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-docs-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:38.934735Z",
                "modified": "2025-08-23T15:15:42.694484Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-admin-service-infisical",
                "custom": true,
                "id": "integra-apps/integra-admin-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-admin-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-service",
                            "environment": "dev"
                        },
                        "name": "integra-admin-service-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-admin-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-admin-service-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-26d09b43",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-admin-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-service",
                                "environment": "dev"
                            },
                            "name": "integra-admin-service-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-admin-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-admin-service-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:17Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-admin-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-26d09b43",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:17Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:17Z"
                            }
                        ],
                        "name": "integra-admin-service-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35652032",
                        "uid": "734f734b-9274-4336-9ec8-31452954e771"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-admin-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-admin-service-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:30:17Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:17Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:17Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:30:17.704211Z",
                "modified": "2025-08-23T12:30:17.704211Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-explorer-app-infisical",
                "custom": true,
                "id": "integra-apps/integra-explorer-app-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-explorer-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-explorer-app",
                            "environment": "dev"
                        },
                        "name": "integra-explorer-app-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-explorer-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-explorer-app-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-aa206702",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-explorer-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-explorer-app",
                                "environment": "dev"
                            },
                            "name": "integra-explorer-app-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-explorer-app"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-explorer-app-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:42Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-explorer-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-explorer-app",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-aa206702",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:42Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:27Z"
                            }
                        ],
                        "name": "integra-explorer-app-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35677035",
                        "uid": "e3825674-3ff1-44d4-b0a8-b7a4ef35748d"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-explorer-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-explorer-app-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:27Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:31Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:31Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-explorer-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:42.875344Z",
                "modified": "2025-08-23T15:15:42.705263Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-workflow-service-infisical",
                "custom": true,
                "id": "integra-workflow/integra-workflow-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-workflow-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-workflow-service",
                            "environment": "dev"
                        },
                        "name": "integra-workflow-service-secrets",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-workflow-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-workflow"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-workflow-service-env",
                            "secretNamespace": "integra-workflow"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-1669ee37",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-workflow-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-workflow-service",
                                "environment": "dev"
                            },
                            "name": "integra-workflow-service-secrets",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-workflow-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-workflow"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-workflow-service-env",
                                "secretNamespace": "integra-workflow"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:01Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-workflow-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-workflow-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-1669ee37",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:01Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:01Z"
                            }
                        ],
                        "name": "integra-workflow-service-secrets",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35651122",
                        "uid": "7445e7a1-9fcb-4e28-b60b-3f4ccd90ac93"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-workflow-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-workflow"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-workflow-service-env",
                            "secretNamespace": "integra-workflow",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:30:01Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:01Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 8 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:01Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-workflow-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:30:01.095295Z",
                "modified": "2025-08-23T13:31:24.051768Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-bridge-service-infisical",
                "custom": true,
                "id": "integra-apps/integra-bridge-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-bridge-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-bridge-service",
                            "environment": "dev"
                        },
                        "name": "integra-bridge-service-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-bridge-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-bridge-service-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c47afae8",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-bridge-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-bridge-service",
                                "environment": "dev"
                            },
                            "name": "integra-bridge-service-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-bridge-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-bridge-service-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:37Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-bridge-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-bridge-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-c47afae8",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:37Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:26Z"
                            }
                        ],
                        "name": "integra-bridge-service-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35676939",
                        "uid": "699959bb-a3b1-4b65-9990-fc69140d6326"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-bridge-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-bridge-service-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:26Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:30Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:30Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-bridge-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:37.821722Z",
                "modified": "2025-08-23T15:15:42.661737Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-trust-app-infisical",
                "custom": true,
                "id": "integra-apps/integra-trust-app-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-trust-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-trust-app",
                            "environment": "dev"
                        },
                        "name": "integra-trust-app-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-trust-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-trust-app-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-fb7aade7",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-trust-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-trust-app",
                                "environment": "dev"
                            },
                            "name": "integra-trust-app-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-trust-app"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-trust-app-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:38Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-trust-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-trust-app",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-fb7aade7",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:38Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:27Z"
                            }
                        ],
                        "name": "integra-trust-app-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35677037",
                        "uid": "04591c0b-413d-45be-b4bf-5eed4c2002b0"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-trust-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-trust-app-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:27Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:30Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:30Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-trust-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:28:38.383287Z",
                "modified": "2025-08-23T15:15:42.66206Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-ai-gateway-service-infisical",
                "custom": true,
                "id": "integra-apps/integra-ai-gateway-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-ai-gateway-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-gateway-service",
                            "environment": "dev"
                        },
                        "name": "integra-ai-gateway-service-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-ai-gateway-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-ai-gateway-service-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-457c97a1",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-ai-gateway-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-gateway-service",
                                "environment": "dev"
                            },
                            "name": "integra-ai-gateway-service-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-ai-gateway-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-ai-gateway-service-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:15Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-ai-gateway-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-gateway-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-457c97a1",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:15Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:15Z"
                            }
                        ],
                        "name": "integra-ai-gateway-service-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35652010",
                        "uid": "1af0dab2-96a1-4c5f-a828-e24cadc013b7"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-ai-gateway-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-ai-gateway-service-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:30:15Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:15Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:15Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-ai-gateway-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:30:16.330335Z",
                "modified": "2025-08-23T12:30:16.330335Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-developer-app-infisical",
                "custom": true,
                "id": "integra-apps/integra-developer-app-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-developer-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-app",
                            "environment": "dev"
                        },
                        "name": "integra-developer-app-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-developer-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-developer-app-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-8ed80a60",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-developer-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-app",
                                "environment": "dev"
                            },
                            "name": "integra-developer-app-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-developer-app"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-developer-app-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T09:55:36Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-developer-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-app",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-8ed80a60",
                                "operation": "Apply",
                                "time": "2025-08-23T09:55:36Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:25Z"
                            }
                        ],
                        "name": "integra-developer-app-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35676840",
                        "uid": "69369910-9ce7-493c-899b-01b0e7614134"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-developer-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-developer-app-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:25Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:29Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:29Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T09:55:36.299068Z",
                "modified": "2025-08-23T15:15:42.703064Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-arbitrum-executor-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-arbitrum-executor",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.667Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-arbitrum-executor",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-arbitrum-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-arbitrum-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-arbitrum-executor",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-arbitrum-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-arbitrum-executor",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-arbitrum-executor",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-arbitrum-executor",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "RPC_SERVICE_URL",
                                                "value": "http://integra-rpc-service:3000"
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-arbitrum-executor-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-arbitrum-executor:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-arbitrum-executor",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2fb65f5f",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.667Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-arbitrum-executor",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-arbitrum-executor",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-arbitrum-executor",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-arbitrum-executor",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-arbitrum-executor",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-arbitrum-executor",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-arbitrum-executor",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-arbitrum-executor",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "RPC_SERVICE_URL",
                                                    "value": "http://integra-rpc-service:3000"
                                                }
                                            ],
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-arbitrum-executor-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-arbitrum-executor:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-arbitrum-executor",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "512Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "256Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.667Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-arbitrum-executor",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:56Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-arbitrum-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-arbitrum-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-arbitrum-executor\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            "k:{\"name\":\"RPC_SERVICE_URL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-2fb65f5f",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:32Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:32Z"
                            }
                        ],
                        "name": "integra-arbitrum-executor",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765103",
                        "uid": "4276aa93-8a39-496c-b104-2132e60b901d"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-arbitrum-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-arbitrum-executor",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-arbitrum-executor",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-arbitrum-executor",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "RPC_SERVICE_URL",
                                                "value": "http://integra-rpc-service:3000"
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-arbitrum-executor-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-arbitrum-executor:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-arbitrum-executor",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:42Z",
                                "lastUpdateTime": "2025-08-23T15:39:42Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:56Z",
                                "lastUpdateTime": "2025-08-23T15:39:42Z",
                                "message": "ReplicaSet \"integra-arbitrum-executor-79548889f7\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-arbitrum-executor",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-arbitrum-executor-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:42.178438Z",
                "modified": "2025-08-23T17:27:32.716548Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-hogan-api-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-hogan-api",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.658Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-hogan-api",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-hogan-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-hogan-api",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-hogan-api",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-hogan-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-hogan-api",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-hogan-api",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-hogan-api",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-hogan-api-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-hogan-api:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-hogan-api",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2e63a35e",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.658Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-hogan-api",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-hogan-api",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-hogan-api",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-hogan-api",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-hogan-api",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-hogan-api",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-hogan-api",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-hogan-api",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-hogan-api-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-hogan-api:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-hogan-api",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.658Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-hogan-api",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:55Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-hogan-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-hogan-api",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-hogan-api\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-2e63a35e",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:32Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:32Z"
                            }
                        ],
                        "name": "integra-hogan-api",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765108",
                        "uid": "2f8918e0-0579-4c7a-b1a5-b03a0cafbcb7"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-hogan-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-hogan-api",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-hogan-api",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-hogan-api",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-hogan-api-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-hogan-api:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-hogan-api",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:10Z",
                                "lastUpdateTime": "2025-08-23T15:39:10Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:55Z",
                                "lastUpdateTime": "2025-08-23T15:39:10Z",
                                "message": "ReplicaSet \"integra-hogan-api-fd7f9f6b5\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-hogan-api",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-hogan-api-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.176065Z",
                "modified": "2025-08-23T17:27:33.02258Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-rpc-service-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-rpc-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.643Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-rpc-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-rpc-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-rpc-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-rpc-service",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-rpc-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-rpc-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-rpc-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-rpc-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-rpc-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-rpc-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-rpc-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-6784a9cc",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.643Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-rpc-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-rpc-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-rpc-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-rpc-service",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 3,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-rpc-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-rpc-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-rpc-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-rpc-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-rpc-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-rpc-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-rpc-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "2",
                                                    "memory": "2Gi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "1Gi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.643Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-rpc-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:57Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-rpc-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-rpc-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-rpc-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-6784a9cc",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:33Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:33Z"
                            }
                        ],
                        "name": "integra-rpc-service",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765114",
                        "uid": "6ce43c31-3194-46e7-b1c6-c1aa4444cc5a"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-rpc-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-rpc-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-rpc-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-rpc-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-rpc-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-rpc-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-rpc-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:18Z",
                                "lastUpdateTime": "2025-08-23T15:39:18Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:57Z",
                                "lastUpdateTime": "2025-08-23T15:39:18Z",
                                "message": "ReplicaSet \"integra-rpc-service-5688cb64c4\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 3,
                        "replicas": 3,
                        "updatedReplicas": 3
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-rpc-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-rpc-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:18.59971Z",
                "modified": "2025-08-23T17:27:33.616887Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-indexer-service-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-indexer-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.648Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-indexer-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-indexer-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-indexer-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-indexer-service",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-indexer-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-indexer-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-indexer-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-indexer-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-indexer-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-indexer-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-indexer-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a945f4dc",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.648Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-indexer-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-indexer-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-indexer-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-indexer-service",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-indexer-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-indexer-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-indexer-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-indexer-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-indexer-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-indexer-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-indexer-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "2",
                                                    "memory": "2Gi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "1Gi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.648Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-indexer-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:41Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-indexer-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-indexer-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-indexer-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-a945f4dc",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:33Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:33Z"
                            }
                        ],
                        "name": "integra-indexer-service",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765117",
                        "uid": "f6771195-f29f-4fa5-8bf3-a00d21511e24"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-indexer-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-indexer-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-indexer-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-indexer-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-indexer-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-indexer-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-indexer-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:02Z",
                                "lastUpdateTime": "2025-08-23T15:39:02Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:41Z",
                                "lastUpdateTime": "2025-08-23T15:39:02Z",
                                "message": "ReplicaSet \"integra-indexer-service-797dc864d6\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-indexer-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-indexer-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:02.216725Z",
                "modified": "2025-08-23T17:27:33.826634Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-avalanche-executor-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-avalanche-executor",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.672Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-avalanche-executor",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-avalanche-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-avalanche-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-avalanche-executor",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-avalanche-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-avalanche-executor",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-avalanche-executor",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-avalanche-executor",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "RPC_SERVICE_URL",
                                                "value": "http://integra-rpc-service:3000"
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-avalanche-executor-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-avalanche-executor:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-avalanche-executor",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-bfb96d14",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.672Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-avalanche-executor",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-avalanche-executor",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-avalanche-executor",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-avalanche-executor",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-avalanche-executor",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-avalanche-executor",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-avalanche-executor",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-avalanche-executor",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "RPC_SERVICE_URL",
                                                    "value": "http://integra-rpc-service:3000"
                                                }
                                            ],
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-avalanche-executor-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-avalanche-executor:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-avalanche-executor",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "512Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "256Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.672Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-avalanche-executor",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:56Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-avalanche-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-avalanche-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-avalanche-executor\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            "k:{\"name\":\"RPC_SERVICE_URL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-bfb96d14",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:34Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:34Z"
                            }
                        ],
                        "name": "integra-avalanche-executor",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765125",
                        "uid": "da83d92d-803b-4afb-8c7e-546d78de80c3"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-avalanche-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-avalanche-executor",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-avalanche-executor",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-avalanche-executor",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "RPC_SERVICE_URL",
                                                "value": "http://integra-rpc-service:3000"
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-avalanche-executor-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-avalanche-executor:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-avalanche-executor",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:42Z",
                                "lastUpdateTime": "2025-08-23T15:39:42Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:56Z",
                                "lastUpdateTime": "2025-08-23T15:39:42Z",
                                "message": "ReplicaSet \"integra-avalanche-executor-7868675b7b\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-avalanche-executor",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-avalanche-executor-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:42.269133Z",
                "modified": "2025-08-23T17:27:34.203344Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-admin-app-infisical",
                "custom": true,
                "id": "integra-apps/integra-admin-app-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-admin-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-app",
                            "environment": "dev"
                        },
                        "name": "integra-admin-app-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-admin-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-admin-app-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-db249640",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-admin-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-app",
                                "environment": "dev"
                            },
                            "name": "integra-admin-app-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-admin-app"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-admin-app-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:18Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-admin-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-app",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-db249640",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:18Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:18Z"
                            }
                        ],
                        "name": "integra-admin-app-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35652042",
                        "uid": "f3e08957-1b92-4dbe-bb9f-290c33e14ab6"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-admin-app"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-admin-app-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:30:18Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:18Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:18Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:30:18.271262Z",
                "modified": "2025-08-23T12:30:18.271262Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-polygon-executor-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-polygon-executor",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.663Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-polygon-executor",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-polygon-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-polygon-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-polygon-executor",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-polygon-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-polygon-executor",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-polygon-executor",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-polygon-executor",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "RPC_SERVICE_URL",
                                                "value": "http://integra-rpc-service:3000"
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-polygon-executor-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-polygon-executor:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-polygon-executor",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-376795a0",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.663Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-polygon-executor",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-polygon-executor",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-polygon-executor",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-polygon-executor",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-polygon-executor",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-polygon-executor",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-polygon-executor",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-polygon-executor",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "RPC_SERVICE_URL",
                                                    "value": "http://integra-rpc-service:3000"
                                                }
                                            ],
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-polygon-executor-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-polygon-executor:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-polygon-executor",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.663Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-polygon-executor",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:41Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-polygon-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-polygon-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-polygon-executor\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            "k:{\"name\":\"RPC_SERVICE_URL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-376795a0",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:35Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:35Z"
                            }
                        ],
                        "name": "integra-polygon-executor",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765138",
                        "uid": "08eac699-726c-42d7-870c-23984f773ec0"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-polygon-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-polygon-executor",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-polygon-executor",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-polygon-executor",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "RPC_SERVICE_URL",
                                                "value": "http://integra-rpc-service:3000"
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-polygon-executor-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-polygon-executor:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-polygon-executor",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:56Z",
                                "lastUpdateTime": "2025-08-23T15:39:56Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:41Z",
                                "lastUpdateTime": "2025-08-23T15:39:56Z",
                                "message": "ReplicaSet \"integra-polygon-executor-86c8b65c57\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-polygon-executor",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-polygon-executor-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:56.807272Z",
                "modified": "2025-08-23T17:27:35.46755Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2caf9a53",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-editor-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-2caf9a53",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-rolebinding",
                        "resourceVersion": "33719055",
                        "uid": "e58b67f8-eadc-4301-8586-6b085598cc24"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:44.134929Z",
                "modified": "2025-08-19T16:27:44.134929Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-admin-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-645398ae",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-admin-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-645398ae",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-admin-rolebinding",
                        "resourceVersion": "33719046",
                        "uid": "b66631a2-2dee-4441-b211-62768a196a9d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:43.312101Z",
                "modified": "2025-08-19T16:27:43.312101Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-0899a180",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-viewer-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-0899a180",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-rolebinding",
                        "resourceVersion": "33719059",
                        "uid": "ef6738f9-85ef-458c-87b0-7c9e5a73bf9e"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:44.534789Z",
                "modified": "2025-08-19T16:27:44.534789Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-editor-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-55e285a8",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-editor-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-55e285a8",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-editor-rolebinding",
                        "resourceVersion": "33719040",
                        "uid": "d89b6d84-bc29-44b4-872b-ce69b5be6831"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:42.885622Z",
                "modified": "2025-08-19T16:27:42.885622Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-base-executor-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-base-executor",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.676Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-base-executor",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-base-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-base-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-base-executor",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-base-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-base-executor",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-base-executor",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-base-executor",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "RPC_SERVICE_URL",
                                                "value": "http://integra-rpc-service:3000"
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-base-executor-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-base-executor:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-base-executor",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a1072a09",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.676Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-base-executor",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-base-executor",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-base-executor",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-base-executor",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-base-executor",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-base-executor",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-base-executor",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-base-executor",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "RPC_SERVICE_URL",
                                                    "value": "http://integra-rpc-service:3000"
                                                }
                                            ],
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-base-executor-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-base-executor:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-base-executor",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "512Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "256Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.676Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-base-executor",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:56Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-base-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-base-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-base-executor\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            "k:{\"name\":\"RPC_SERVICE_URL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-a1072a09",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:36Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:36Z"
                            }
                        ],
                        "name": "integra-base-executor",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765148",
                        "uid": "46918b59-510c-451c-96ab-1b64feac01e1"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-base-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-base-executor",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-base-executor",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-base-executor",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "RPC_SERVICE_URL",
                                                "value": "http://integra-rpc-service:3000"
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-base-executor-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-base-executor:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-base-executor",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:51Z",
                                "lastUpdateTime": "2025-08-23T15:39:51Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:56Z",
                                "lastUpdateTime": "2025-08-23T15:39:51Z",
                                "message": "ReplicaSet \"integra-base-executor-6699b649fd\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-base-executor",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-base-executor-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:51.565426Z",
                "modified": "2025-08-23T17:27:36.62042Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-8bf12105",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-viewer-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-8bf12105",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-rolebinding",
                        "resourceVersion": "33719037",
                        "uid": "ab5e50b8-a499-4a50-8bf3-b4a19327dd5c"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:42.442034Z",
                "modified": "2025-08-19T16:27:42.442034Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-admin-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-admin-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-admin-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-admin-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-32244252",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-admin-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalsecret-admin-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-32244252",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-admin-rolebinding",
                        "resourceVersion": "33719048",
                        "uid": "1379f9f4-0000-446b-acf9-473d2837afe6"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-admin-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:43.565131Z",
                "modified": "2025-08-19T16:27:43.565131Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-proof-service-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-proof-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.653Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-proof-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-proof-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-proof-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-proof-service",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-proof-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-proof-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-proof-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-proof-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-proof-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-proof-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-proof-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f3af474b",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.653Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-proof-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-proof-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-proof-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-proof-service",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-proof-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-proof-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-proof-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-proof-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-proof-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-proof-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-proof-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.653Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-proof-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:09Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-proof-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-proof-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-proof-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-677d5abb",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:09Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-proof-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-f3af474b",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:37Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:37Z"
                            }
                        ],
                        "name": "integra-proof-service",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765160",
                        "uid": "3ce4a878-db72-496d-89ea-ce5777690799"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-proof-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-proof-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-proof-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-proof-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-proof-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-proof-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-proof-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:16:30Z",
                                "lastUpdateTime": "2025-08-23T15:16:30Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:16:09Z",
                                "lastUpdateTime": "2025-08-23T15:16:30Z",
                                "message": "ReplicaSet \"integra-proof-service-5f85554c5c\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-proof-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-proof-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T17:27:37.57574Z",
                "modified": "2025-08-23T17:27:37.57574Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-viewer-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-viewer-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-viewer-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-viewer-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-7fa91800",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-viewer-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalsecret-viewer-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-7fa91800",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-viewer-rolebinding",
                        "resourceVersion": "33719036",
                        "uid": "4144f9d1-5898-4c2f-93a9-74325da3595d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-viewer-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:42.270084Z",
                "modified": "2025-08-19T16:27:42.270084Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-viewer-role",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-viewer-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a685d350",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-viewer-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-a685d350",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-viewer-role",
                        "resourceVersion": "33719054",
                        "uid": "22f236e4-d370-43ac-b44d-cf79360b6a27"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:44.133466Z",
                "modified": "2025-08-19T16:27:44.133466Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-hogan-api-service",
                "custom": true,
                "id": "integra-blockchain/integra-hogan-api",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-hogan-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-hogan-api",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-hogan-api",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-hogan-api",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-hogan-api",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-711b5dd0",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-hogan-api",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-hogan-api",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-hogan-api",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-hogan-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-hogan-api",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:03Z",
                        "labels": {
                            "app": "integra-hogan-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-hogan-api",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-399fdc84",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:03Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-711b5dd0",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:27Z"
                            }
                        ],
                        "name": "integra-hogan-api",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765063",
                        "uid": "99463c7a-cfac-4a6f-aefc-5c6478b7f4e3"
                    },
                    "spec": {
                        "clusterIP": "10.245.110.120",
                        "clusterIPs": [
                            "10.245.110.120"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-hogan-api",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-hogan-api",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-hogan-api",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:48.331421Z",
                "modified": "2025-08-23T17:27:38.116341Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-88bd3122",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-admin-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-88bd3122",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-rolebinding",
                        "resourceVersion": "33719058",
                        "uid": "fabc8564-8e55-4f6b-99d4-748f51c4488b"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:44.408669Z",
                "modified": "2025-08-19T16:27:44.408669Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-admin-role",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-admin-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c2ae7842",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-admin-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-c2ae7842",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-admin-role",
                        "resourceVersion": "33719013",
                        "uid": "db0c1a50-db52-4a23-9640-75134ee2bed9"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:40.055616Z",
                "modified": "2025-08-19T16:27:40.055616Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-viewer-role",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-viewer-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-cd97b247",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-viewer-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-cd97b247",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-viewer-role",
                        "resourceVersion": "33719031",
                        "uid": "34cd26f5-e115-421d-947b-ac1a6b446d6f"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:41.914548Z",
                "modified": "2025-08-19T16:27:41.914548Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-editor-role",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-editor-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-editor-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-0ec28aaa",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-editor-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-0ec28aaa",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-editor-role",
                        "resourceVersion": "33719026",
                        "uid": "3590c8a0-eaae-4aac-9a8a-89fe14102da1"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:41.389359Z",
                "modified": "2025-08-19T16:27:41.389359Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-viewer-role",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-viewer-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-viewer-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-8b82cafc",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-viewer-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-8b82cafc",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-viewer-role",
                        "resourceVersion": "33719015",
                        "uid": "506aec23-f822-48d4-b9c2-0980ffdf529c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:40.35322Z",
                "modified": "2025-08-19T16:27:40.35322Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-proof-service-service",
                "custom": true,
                "id": "integra-blockchain/integra-proof-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-proof-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-proof-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-proof-service",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-proof-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-proof-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-796d5782",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-proof-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-proof-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-proof-service",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-proof-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-proof-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:02Z",
                        "labels": {
                            "app": "integra-proof-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-proof-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-2988b078",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:02Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-796d5782",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:28Z"
                            }
                        ],
                        "name": "integra-proof-service",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765065",
                        "uid": "90be3572-ae07-4b10-b2e1-c56ace439cb0"
                    },
                    "spec": {
                        "clusterIP": "10.245.24.217",
                        "clusterIPs": [
                            "10.245.24.217"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-proof-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-proof-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-proof-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:48.215234Z",
                "modified": "2025-08-23T17:27:38.463424Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalpushsecretsecret-editor-role",
                "custom": true,
                "id": "infisical-opera-infisicalpushsecretsecret-editor-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-bcda1317",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalpushsecretsecret-editor-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalpushsecretsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-bcda1317",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalpushsecretsecret-editor-role",
                        "resourceVersion": "33719017",
                        "uid": "32e355ff-ac3c-4451-97c7-65c19589adda"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalpushsecretsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:40.506231Z",
                "modified": "2025-08-19T16:27:40.506231Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-manager-role",
                "custom": true,
                "id": "infisical-opera-manager-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-manager-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "secrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts/token"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "statefulsets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "clustergenerators",
                                "infisicaldynamicsecrets",
                                "infisicalpushsecrets",
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/finalizers",
                                "infisicalpushsecrets/finalizers",
                                "infisicalsecrets/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status",
                                "infisicalpushsecrets/status",
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c1a2cb07",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-manager-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "secrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "clustergenerators",
                                    "infisicaldynamicsecrets",
                                    "infisicalpushsecrets",
                                    "infisicalsecrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/finalizers",
                                    "infisicalpushsecrets/finalizers",
                                    "infisicalsecrets/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/status",
                                    "infisicalpushsecrets/status",
                                    "infisicalsecrets/status"
                                ],
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:43Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-c1a2cb07",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:43Z"
                            }
                        ],
                        "name": "infisical-opera-manager-role",
                        "resourceVersion": "33719047",
                        "uid": "bf1fcc11-943d-4c9a-b003-ecadea32738c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "secrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts/token"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "statefulsets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "clustergenerators",
                                "infisicaldynamicsecrets",
                                "infisicalpushsecrets",
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/finalizers",
                                "infisicalpushsecrets/finalizers",
                                "infisicalsecrets/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status",
                                "infisicalpushsecrets/status",
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:43.432395Z",
                "modified": "2025-08-19T16:27:43.432395Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::integra-infrastructure/infisical-opera-controller-manager",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-controller-manager",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-controller-manager",
                        "namespace": "integra-infrastructure"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-1e99171c",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:44Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-1e99171c",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:44Z"
                            }
                        ],
                        "name": "infisical-opera-controller-manager",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "33719057",
                        "uid": "5fd09ab8-a7de-4c6e-9c3b-80c0f3144f00"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": []
                },
                "created": "2025-08-19T16:27:44.267405Z",
                "modified": "2025-08-19T16:27:44.267405Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-rpc-service-service",
                "custom": true,
                "id": "integra-blockchain/integra-rpc-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-rpc-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-rpc-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-rpc-service",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-rpc-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-rpc-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2d672dd7",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-rpc-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-rpc-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-rpc-service",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-rpc-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-rpc-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:04Z",
                        "labels": {
                            "app": "integra-rpc-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-rpc-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-cfa37caf",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:04Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-2d672dd7",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:28Z"
                            }
                        ],
                        "name": "integra-rpc-service",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765069",
                        "uid": "f6bc7974-f901-4aeb-8b01-c7acacdfcbac"
                    },
                    "spec": {
                        "clusterIP": "10.245.150.130",
                        "clusterIPs": [
                            "10.245.150.130"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-rpc-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-rpc-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-rpc-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:49.977529Z",
                "modified": "2025-08-23T17:27:38.700619Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::integra-infrastructure/infisical-opera-controller-manager",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-controller-manager",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "control-plane": "controller-manager",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-controller-manager",
                        "namespace": "integra-infrastructure"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/name": "secrets-operator",
                                "control-plane": "controller-manager"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "kubectl.kubernetes.io/default-container": "manager"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "infisical-operator",
                                    "app.kubernetes.io/name": "secrets-operator",
                                    "control-plane": "controller-manager"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--metrics-bind-address=:8443",
                                            "--leader-elect",
                                            "--health-probe-bind-address=:8081"
                                        ],
                                        "command": [
                                            "/manager"
                                        ],
                                        "env": [
                                            {
                                                "name": "KUBERNETES_CLUSTER_DOMAIN",
                                                "value": "cluster.local"
                                            }
                                        ],
                                        "image": "infisical/kubernetes-operator:v0.10.2",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": 8081
                                            },
                                            "initialDelaySeconds": 15,
                                            "periodSeconds": 20
                                        },
                                        "name": "manager",
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/readyz",
                                                "port": 8081
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 10
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "128Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "64Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true
                                        }
                                    }
                                ],
                                "securityContext": {
                                    "runAsNonRoot": true
                                },
                                "serviceAccountName": "infisical-opera-controller-manager",
                                "terminationGracePeriodSeconds": 10
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-57519bea",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "control-plane": "controller-manager",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "infisical-operator",
                                    "app.kubernetes.io/name": "secrets-operator",
                                    "control-plane": "controller-manager"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "kubectl.kubernetes.io/default-container": "manager"
                                    },
                                    "labels": {
                                        "app.kubernetes.io/instance": "infisical-operator",
                                        "app.kubernetes.io/name": "secrets-operator",
                                        "control-plane": "controller-manager"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--metrics-bind-address=:8443",
                                                "--leader-elect",
                                                "--health-probe-bind-address=:8081"
                                            ],
                                            "command": [
                                                "/manager"
                                            ],
                                            "env": [
                                                {
                                                    "name": "KUBERNETES_CLUSTER_DOMAIN",
                                                    "value": "cluster.local"
                                                }
                                            ],
                                            "image": "infisical/kubernetes-operator:v0.10.2",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/healthz",
                                                    "port": 8081
                                                },
                                                "initialDelaySeconds": 15,
                                                "periodSeconds": 20
                                            },
                                            "name": "manager",
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/readyz",
                                                    "port": 8081
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 10
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "128Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "64Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "drop": [
                                                        "ALL"
                                                    ]
                                                },
                                                "readOnlyRootFilesystem": true
                                            }
                                        }
                                    ],
                                    "securityContext": {
                                        "runAsNonRoot": true
                                    },
                                    "serviceAccountName": "infisical-opera-controller-manager",
                                    "terminationGracePeriodSeconds": 10
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1"
                        },
                        "creationTimestamp": "2025-08-23T13:32:05Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "control-plane": "controller-manager",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:control-plane": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:kubectl.kubernetes.io/default-container": {}
                                                },
                                                "f:labels": {
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:control-plane": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"manager\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            "k:{\"name\":\"KUBERNETES_CLUSTER_DOMAIN\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:livenessProbe": {
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:readinessProbe": {
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                "f:drop": {}
                                                            },
                                                            "f:readOnlyRootFilesystem": {}
                                                        }
                                                    }
                                                },
                                                "f:securityContext": {
                                                    "f:runAsNonRoot": {}
                                                },
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-57519bea",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:05Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:16Z"
                            }
                        ],
                        "name": "infisical-opera-controller-manager",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "35676270",
                        "uid": "9299e434-dfd6-47f3-82dc-6b513cab40bb"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/name": "secrets-operator",
                                "control-plane": "controller-manager"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "kubectl.kubernetes.io/default-container": "manager"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "infisical-operator",
                                    "app.kubernetes.io/name": "secrets-operator",
                                    "control-plane": "controller-manager"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--metrics-bind-address=:8443",
                                            "--leader-elect",
                                            "--health-probe-bind-address=:8081"
                                        ],
                                        "command": [
                                            "/manager"
                                        ],
                                        "env": [
                                            {
                                                "name": "KUBERNETES_CLUSTER_DOMAIN",
                                                "value": "cluster.local"
                                            }
                                        ],
                                        "image": "infisical/kubernetes-operator:v0.10.2",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": 8081,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 15,
                                            "periodSeconds": 20,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "manager",
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/readyz",
                                                "port": 8081,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "128Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "64Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {
                                    "runAsNonRoot": true
                                },
                                "serviceAccount": "infisical-opera-controller-manager",
                                "serviceAccountName": "infisical-opera-controller-manager",
                                "terminationGracePeriodSeconds": 10
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:16Z",
                                "lastUpdateTime": "2025-08-23T13:32:16Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T13:32:06Z",
                                "lastUpdateTime": "2025-08-23T13:32:16Z",
                                "message": "ReplicaSet \"infisical-opera-controller-manager-b79cdcc87\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:16.462097Z",
                "modified": "2025-08-23T13:32:16.462097Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-editor-role",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-editor-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-7567a5f1",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-editor-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-7567a5f1",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-editor-role",
                        "resourceVersion": "33719060",
                        "uid": "7f29538c-b14f-4d0e-bbb2-14ea9864fb3e"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:44.672788Z",
                "modified": "2025-08-19T16:27:44.672788Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-controller-manager-metrics-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "control-plane": "controller-manager",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-controller-manager-metrics-service",
                        "namespace": "integra-infrastructure"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "https",
                                "port": 8443,
                                "protocol": "TCP",
                                "targetPort": 8443
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/name": "secrets-operator",
                            "control-plane": "controller-manager"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-48565fb9",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "control-plane": "controller-manager",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-controller-manager-metrics-service",
                            "namespace": "integra-infrastructure"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "https",
                                    "port": 8443,
                                    "protocol": "TCP",
                                    "targetPort": 8443
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/name": "secrets-operator",
                                "control-plane": "controller-manager"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:44Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "control-plane": "controller-manager",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:control-plane": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":8443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-48565fb9",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:44Z"
                            }
                        ],
                        "name": "infisical-opera-controller-manager-metrics-service",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "33719075",
                        "uid": "c1eb1dfd-e2b0-4d0a-9fdc-e05590f0169d"
                    },
                    "spec": {
                        "clusterIP": "10.245.88.211",
                        "clusterIPs": [
                            "10.245.88.211"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "https",
                                "port": 8443,
                                "protocol": "TCP",
                                "targetPort": 8443
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/name": "secrets-operator",
                            "control-plane": "controller-manager"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:27:56.669485Z",
                "modified": "2025-08-19T16:27:56.669485Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-base-executor-service",
                "custom": true,
                "id": "integra-blockchain/integra-base-executor",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-base-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-base-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-base-executor",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-base-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-base-executor",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-286cc018",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-base-executor",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-base-executor",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-base-executor",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-base-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-base-executor",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:04Z",
                        "labels": {
                            "app": "integra-base-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-base-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-2005be2f",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:04Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-286cc018",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:28Z"
                            }
                        ],
                        "name": "integra-base-executor",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765071",
                        "uid": "db476bef-6a3e-4081-8a01-68949ca67b58"
                    },
                    "spec": {
                        "clusterIP": "10.245.231.8",
                        "clusterIPs": [
                            "10.245.231.8"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-base-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-base-executor",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-base-executor",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:49.306616Z",
                "modified": "2025-08-23T17:27:39.026031Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-reader",
                "custom": true,
                "id": "infisical-opera-metrics-reader",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-metrics-reader"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-cdf7cabf",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-metrics-reader"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:40Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-cdf7cabf",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:40Z"
                            }
                        ],
                        "name": "infisical-opera-metrics-reader",
                        "resourceVersion": "33719018",
                        "uid": "b5b2bffa-197e-43be-975f-3a5ce3b0b7df"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:40.765567Z",
                "modified": "2025-08-19T16:27:40.765567Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-infisicalsecret-editor-rolebinding",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-editor-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-editor-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-editor-role"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-36f759fb",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-editor-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-infisicalsecret-editor-role"
                        }
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "pulumi-kubernetes-36f759fb",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-editor-rolebinding",
                        "resourceVersion": "33719038",
                        "uid": "d510a95d-8420-4862-9250-7b83600606d1"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-infisicalsecret-editor-role"
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": []
                },
                "created": "2025-08-19T16:27:42.576221Z",
                "modified": "2025-08-19T16:27:42.576221Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::integra-infrastructure/infisical-opera-leader-election-role",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-leader-election-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-leader-election-role",
                        "namespace": "integra-infrastructure"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "coordination.k8s.io"
                            ],
                            "resources": [
                                "leases"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-856f507f",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-leader-election-role",
                            "namespace": "integra-infrastructure"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:41Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-856f507f",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:41Z"
                            }
                        ],
                        "name": "infisical-opera-leader-election-role",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "33719024",
                        "uid": "f12e1dd0-6e3f-473f-a65c-4908966814b0"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "coordination.k8s.io"
                            ],
                            "resources": [
                                "leases"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:41.132241Z",
                "modified": "2025-08-19T16:27:41.132241Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::integra-infrastructure/infisical-opera-leader-election-rolebinding",
                "custom": true,
                "id": "integra-infrastructure/infisical-opera-leader-election-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-leader-election-rolebinding",
                        "namespace": "integra-infrastructure"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "infisical-opera-leader-election-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-5bd2ca76",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-leader-election-rolebinding",
                            "namespace": "integra-infrastructure"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "infisical-opera-leader-election-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "infisical-opera-controller-manager",
                                "namespace": "integra-infrastructure"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:40Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-5bd2ca76",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:40Z"
                            }
                        ],
                        "name": "infisical-opera-leader-election-rolebinding",
                        "namespace": "integra-infrastructure",
                        "resourceVersion": "33719020",
                        "uid": "0d8454e0-4760-42a9-8b74-7ea5c2011bb1"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "infisical-opera-leader-election-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": [],
                    "subjects": []
                },
                "created": "2025-08-19T16:27:40.889953Z",
                "modified": "2025-08-19T16:27:40.889953Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicaldynamicsecret-admin-role",
                "custom": true,
                "id": "infisical-opera-infisicaldynamicsecret-admin-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-fdc46cdd",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicaldynamicsecret-admin-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicaldynamicsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-fdc46cdd",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicaldynamicsecret-admin-role",
                        "resourceVersion": "33719030",
                        "uid": "b8d422a9-2fe3-43ed-a9ae-f20fde2ea629"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicaldynamicsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:41.775398Z",
                "modified": "2025-08-19T16:27:41.775398Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-infisicalsecret-admin-role",
                "custom": true,
                "id": "infisical-opera-infisicalsecret-admin-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-infisicalsecret-admin-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-fe0bbf41",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-infisicalsecret-admin-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "secrets.infisical.com"
                                ],
                                "resources": [
                                    "infisicalsecrets/status"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-fe0bbf41",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-infisicalsecret-admin-role",
                        "resourceVersion": "33719041",
                        "uid": "e0a95cc4-39c6-41b5-8ecf-40a975c71c89"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "secrets.infisical.com"
                            ],
                            "resources": [
                                "infisicalsecrets/status"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:42.998927Z",
                "modified": "2025-08-19T16:27:42.998927Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-blockchain-api-service",
                "custom": true,
                "id": "integra-blockchain/integra-blockchain-api",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "main-242b71ee-20250823163529",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                            "environment": "dev"
                        },
                        "name": "integra-blockchain-api",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-67d7f13a",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "main-242b71ee-20250823163529",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                                "environment": "dev"
                            },
                            "name": "integra-blockchain-api",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "main-242b71ee-20250823163529",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:01Z",
                        "labels": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f7b8450b",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:01Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-67d7f13a",
                                "operation": "Apply",
                                "time": "2025-08-23T17:12:08Z"
                            }
                        ],
                        "name": "integra-blockchain-api",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35759384",
                        "uid": "4f1254f9-36f4-4dd3-86e6-3f12e12bb35b"
                    },
                    "spec": {
                        "clusterIP": "10.245.214.130",
                        "clusterIPs": [
                            "10.245.214.130"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-blockchain-api",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:47.959411Z",
                "modified": "2025-08-23T17:27:39.438304Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::infisical-opera-metrics-auth-role",
                "custom": true,
                "id": "infisical-opera-metrics-auth-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-metrics-auth-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-1426f1c5",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-metrics-auth-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-kubernetes-1426f1c5",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisical-opera-metrics-auth-role",
                        "resourceVersion": "33719056",
                        "uid": "62c8db87-6b96-45a3-af0f-943327b3d77b"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "rules": []
                },
                "created": "2025-08-19T16:27:44.134943Z",
                "modified": "2025-08-19T16:27:44.134943Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-polygon-executor-service",
                "custom": true,
                "id": "integra-blockchain/integra-polygon-executor",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-polygon-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-polygon-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-polygon-executor",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-polygon-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-polygon-executor",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2c25d013",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-polygon-executor",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-polygon-executor",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-polygon-executor",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-polygon-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-polygon-executor",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:00Z",
                        "labels": {
                            "app": "integra-polygon-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-polygon-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-6d4ed645",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:00Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-2c25d013",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:29Z"
                            }
                        ],
                        "name": "integra-polygon-executor",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765073",
                        "uid": "33e2c659-40a6-436e-a1d9-5c4a69866a43"
                    },
                    "spec": {
                        "clusterIP": "10.245.125.28",
                        "clusterIPs": [
                            "10.245.125.28"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-polygon-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-polygon-executor",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-polygon-executor",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:40:06.806904Z",
                "modified": "2025-08-23T17:27:39.795998Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-gateway-service-service",
                "custom": true,
                "id": "integra-blockchain/integra-gateway-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-gateway-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-gateway-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-gateway-service",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-gateway-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-gateway-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-19a04355",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-gateway-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-gateway-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-gateway-service",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-gateway-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-gateway-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:01Z",
                        "labels": {
                            "app": "integra-gateway-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-gateway-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-9e5816c5",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:01Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-19a04355",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:29Z"
                            }
                        ],
                        "name": "integra-gateway-service",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765077",
                        "uid": "00e6b857-6766-4484-bff0-72121124b988"
                    },
                    "spec": {
                        "clusterIP": "10.245.141.10",
                        "clusterIPs": [
                            "10.245.141.10"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-gateway-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-gateway-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-gateway-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:49.076241Z",
                "modified": "2025-08-23T17:27:40.033695Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::clustergenerators.secrets.infisical.com",
                "custom": true,
                "id": "clustergenerators.secrets.infisical.com",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "clustergenerators.secrets.infisical.com"
                    },
                    "spec": {
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "ClusterGenerator",
                            "listKind": "ClusterGeneratorList",
                            "plural": "clustergenerators",
                            "singular": "clustergenerator"
                        },
                        "scope": "Cluster",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ClusterGenerator represents a cluster-wide generator",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "generator": {
                                                        "description": "Generator the spec for this generator, must match the kind.",
                                                        "properties": {
                                                            "passwordSpec": {
                                                                "description": "PasswordSpec controls the behavior of the password generator.",
                                                                "properties": {
                                                                    "allowRepeat": {
                                                                        "default": false,
                                                                        "description": "set allowRepeat to true to allow repeating characters.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "digits": {
                                                                        "description": "digits specifies the number of digits in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                        "type": "integer"
                                                                    },
                                                                    "length": {
                                                                        "default": 24,
                                                                        "description": "Length of the password to be generated.\nDefaults to 24",
                                                                        "type": "integer"
                                                                    },
                                                                    "noUpper": {
                                                                        "default": false,
                                                                        "description": "Set noUpper to disable uppercase characters",
                                                                        "type": "boolean"
                                                                    },
                                                                    "symbolCharacters": {
                                                                        "description": "symbolCharacters specifies the special characters that should be used\nin the generated password.",
                                                                        "type": "string"
                                                                    },
                                                                    "symbols": {
                                                                        "description": "symbols specifies the number of symbol characters in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "uuidSpec": {
                                                                "description": "UUIDSpec controls the behavior of the uuid generator.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "kind": {
                                                        "description": "Kind the kind of this generator.",
                                                        "enum": [
                                                            "Password",
                                                            "UUID"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "kind"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-496c7fc2",
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.18.0"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "clustergenerators.secrets.infisical.com"
                        },
                        "spec": {
                            "group": "secrets.infisical.com",
                            "names": {
                                "kind": "ClusterGenerator",
                                "listKind": "ClusterGeneratorList",
                                "plural": "clustergenerators",
                                "singular": "clustergenerator"
                            },
                            "scope": "Cluster",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ClusterGenerator represents a cluster-wide generator",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "properties": {
                                                        "generator": {
                                                            "description": "Generator the spec for this generator, must match the kind.",
                                                            "properties": {
                                                                "passwordSpec": {
                                                                    "description": "PasswordSpec controls the behavior of the password generator.",
                                                                    "properties": {
                                                                        "allowRepeat": {
                                                                            "default": false,
                                                                            "description": "set allowRepeat to true to allow repeating characters.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "digits": {
                                                                            "description": "digits specifies the number of digits in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                            "type": "integer"
                                                                        },
                                                                        "length": {
                                                                            "default": 24,
                                                                            "description": "Length of the password to be generated.\nDefaults to 24",
                                                                            "type": "integer"
                                                                        },
                                                                        "noUpper": {
                                                                            "default": false,
                                                                            "description": "Set noUpper to disable uppercase characters",
                                                                            "type": "boolean"
                                                                        },
                                                                        "symbolCharacters": {
                                                                            "description": "symbolCharacters specifies the special characters that should be used\nin the generated password.",
                                                                            "type": "string"
                                                                        },
                                                                        "symbols": {
                                                                            "description": "symbols specifies the number of symbol characters in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "uuidSpec": {
                                                                    "description": "UUIDSpec controls the behavior of the uuid generator.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "kind": {
                                                            "description": "Kind the kind of this generator.",
                                                            "enum": [
                                                                "Password",
                                                                "UUID"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "kind"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0",
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-496c7fc2",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "clustergenerators.secrets.infisical.com",
                        "resourceVersion": "33719051",
                        "uid": "b7674f3a-f312-4b67-98d4-49b4220ee741"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "ClusterGenerator",
                            "listKind": "ClusterGeneratorList",
                            "plural": "clustergenerators",
                            "singular": "clustergenerator"
                        },
                        "scope": "Cluster",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ClusterGenerator represents a cluster-wide generator",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "generator": {
                                                        "description": "Generator the spec for this generator, must match the kind.",
                                                        "properties": {
                                                            "passwordSpec": {
                                                                "description": "PasswordSpec controls the behavior of the password generator.",
                                                                "properties": {
                                                                    "allowRepeat": {
                                                                        "default": false,
                                                                        "description": "set allowRepeat to true to allow repeating characters.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "digits": {
                                                                        "description": "digits specifies the number of digits in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                        "type": "integer"
                                                                    },
                                                                    "length": {
                                                                        "default": 24,
                                                                        "description": "Length of the password to be generated.\nDefaults to 24",
                                                                        "type": "integer"
                                                                    },
                                                                    "noUpper": {
                                                                        "default": false,
                                                                        "description": "Set noUpper to disable uppercase characters",
                                                                        "type": "boolean"
                                                                    },
                                                                    "symbolCharacters": {
                                                                        "description": "symbolCharacters specifies the special characters that should be used\nin the generated password.",
                                                                        "type": "string"
                                                                    },
                                                                    "symbols": {
                                                                        "description": "symbols specifies the number of symbol characters in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "uuidSpec": {
                                                                "description": "UUIDSpec controls the behavior of the uuid generator.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "kind": {
                                                        "description": "Kind the kind of this generator.",
                                                        "enum": [
                                                            "Password",
                                                            "UUID"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "kind"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "ClusterGenerator",
                            "listKind": "ClusterGeneratorList",
                            "plural": "clustergenerators",
                            "singular": "clustergenerator"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:27:43.700867Z",
                "modified": "2025-08-19T16:27:43.700867Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-arbitrum-executor-service",
                "custom": true,
                "id": "integra-blockchain/integra-arbitrum-executor",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-arbitrum-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-arbitrum-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-arbitrum-executor",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-arbitrum-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-arbitrum-executor",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9fafe5b6",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-arbitrum-executor",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-arbitrum-executor",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-arbitrum-executor",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-arbitrum-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-arbitrum-executor",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:04Z",
                        "labels": {
                            "app": "integra-arbitrum-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-arbitrum-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-102e23ba",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:04Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-9fafe5b6",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:30Z"
                            }
                        ],
                        "name": "integra-arbitrum-executor",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765080",
                        "uid": "058c8cb2-7f92-41d0-aec5-a582fc722a54"
                    },
                    "spec": {
                        "clusterIP": "10.245.103.208",
                        "clusterIPs": [
                            "10.245.103.208"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-arbitrum-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-arbitrum-executor",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-arbitrum-executor",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:49.978345Z",
                "modified": "2025-08-23T17:27:40.418888Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-avalanche-executor-service",
                "custom": true,
                "id": "integra-blockchain/integra-avalanche-executor",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-avalanche-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-avalanche-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-avalanche-executor",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-avalanche-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-avalanche-executor",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-ae450f46",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-avalanche-executor",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-avalanche-executor",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-avalanche-executor",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-avalanche-executor",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-avalanche-executor",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:01Z",
                        "labels": {
                            "app": "integra-avalanche-executor",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-avalanche-executor",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-1f90d41a",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:01Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-ae450f46",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:30Z"
                            }
                        ],
                        "name": "integra-avalanche-executor",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765084",
                        "uid": "4e7b329c-3099-474e-92a8-83b206f6d698"
                    },
                    "spec": {
                        "clusterIP": "10.245.107.112",
                        "clusterIPs": [
                            "10.245.107.112"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-avalanche-executor",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-avalanche-executor",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-avalanche-executor",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:49.941127Z",
                "modified": "2025-08-23T17:27:40.792239Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-indexer-service-service",
                "custom": true,
                "id": "integra-blockchain/integra-indexer-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-indexer-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-indexer-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-indexer-service",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-indexer-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-indexer-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-23f84aa7",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-indexer-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-indexer-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-indexer-service",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-indexer-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-indexer-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:02Z",
                        "labels": {
                            "app": "integra-indexer-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-indexer-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-dcab0a0a",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:02Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-23f84aa7",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:31Z"
                            }
                        ],
                        "name": "integra-indexer-service",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765087",
                        "uid": "02b0b083-42d6-44e9-a213-40b07cd60c06"
                    },
                    "spec": {
                        "clusterIP": "10.245.172.255",
                        "clusterIPs": [
                            "10.245.172.255"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-indexer-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-indexer-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-indexer-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.19749Z",
                "modified": "2025-08-23T17:27:41.315067Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-manager-rolebinding",
                "custom": true,
                "id": "infisical-opera-manager-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-manager-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-manager-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9daba15c",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-manager-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-manager-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "infisical-opera-controller-manager",
                                "namespace": "integra-infrastructure"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:27:42Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-9daba15c",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:42Z"
                            }
                        ],
                        "name": "infisical-opera-manager-rolebinding",
                        "resourceVersion": "33719035",
                        "uid": "67fad9b5-7969-439f-8c28-1ac36809e0a6"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-manager-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": [],
                    "subjects": []
                },
                "created": "2025-08-19T16:27:42.040991Z",
                "modified": "2025-08-19T16:27:42.040991Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-dev-assistant-service-service",
                "custom": true,
                "id": "integra-apps/integra-dev-assistant-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-dev-assistant-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-dev-assistant-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-dev-assistant-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-dev-assistant-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-dev-assistant-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-aff54978",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-dev-assistant-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-dev-assistant-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-dev-assistant-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-dev-assistant-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-dev-assistant-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:06Z",
                        "labels": {
                            "app": "integra-dev-assistant-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-dev-assistant-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-6a9b5232",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:06Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-aff54978",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:31Z"
                            }
                        ],
                        "name": "integra-dev-assistant-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765088",
                        "uid": "8b9979fc-4aa7-493d-a5df-963c7d028433"
                    },
                    "spec": {
                        "clusterIP": "10.245.81.230",
                        "clusterIPs": [
                            "10.245.81.230"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-dev-assistant-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-dev-assistant-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-dev-assistant-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.173727Z",
                "modified": "2025-08-23T17:27:41.660164Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::infisical-opera-metrics-auth-rolebinding",
                "custom": true,
                "id": "infisical-opera-metrics-auth-rolebinding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisical-opera-metrics-auth-rolebinding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-metrics-auth-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-d8f97c3c",
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisical-opera-metrics-auth-rolebinding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "infisical-opera-metrics-auth-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "infisical-opera-controller-manager",
                                "namespace": "integra-infrastructure"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "creationTimestamp": "2025-08-19T16:28:24Z",
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-kubernetes-d8f97c3c",
                                "operation": "Apply",
                                "time": "2025-08-19T16:28:24Z"
                            }
                        ],
                        "name": "infisical-opera-metrics-auth-rolebinding",
                        "resourceVersion": "33719310",
                        "uid": "6bf870bb-9a02-4432-ac9e-501aa85926bc"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "infisical-opera-metrics-auth-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "infisical-opera-controller-manager",
                            "namespace": "integra-infrastructure"
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "roleRef": [],
                    "subjects": []
                },
                "created": "2025-08-19T16:28:24.267418Z",
                "modified": "2025-08-19T16:28:24.267418Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-developer-service-service",
                "custom": true,
                "id": "integra-apps/integra-developer-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-developer-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-developer-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-developer-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-50ebe228",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-developer-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-developer-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-developer-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:08Z",
                        "labels": {
                            "app": "integra-developer-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-3d21f09a",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:08Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-50ebe228",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:31Z"
                            }
                        ],
                        "name": "integra-developer-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765093",
                        "uid": "2768e32d-74a9-4330-bc39-20f8ffceb93a"
                    },
                    "spec": {
                        "clusterIP": "10.245.31.106",
                        "clusterIPs": [
                            "10.245.31.106"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-developer-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.173856Z",
                "modified": "2025-08-23T17:27:42.035511Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-docs-app-service",
                "custom": true,
                "id": "integra-apps/integra-docs-app",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-docs-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-docs-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-docs-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-docs-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-docs-app",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-342b07b8",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-docs-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-docs-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-docs-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-docs-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-docs-app",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:08Z",
                        "labels": {
                            "app": "integra-docs-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-docs-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-69eb93a6",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:08Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-342b07b8",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:32Z"
                            }
                        ],
                        "name": "integra-docs-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765096",
                        "uid": "df8231d3-36b6-4d3c-92be-5d2f272bd6f6"
                    },
                    "spec": {
                        "clusterIP": "10.245.110.175",
                        "clusterIPs": [
                            "10.245.110.175"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-docs-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-docs-app",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-docs-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:46.799964Z",
                "modified": "2025-08-23T17:27:42.288832Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-admin-service-service",
                "custom": true,
                "id": "integra-apps/integra-admin-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-admin-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-admin-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-admin-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-8552da62",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-admin-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-admin-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-admin-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:07Z",
                        "labels": {
                            "app": "integra-admin-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-461eda45",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:07Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-8552da62",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:32Z"
                            }
                        ],
                        "name": "integra-admin-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765097",
                        "uid": "f3f53677-f39c-47f3-a23a-c318b95f3d5d"
                    },
                    "spec": {
                        "clusterIP": "10.245.152.107",
                        "clusterIPs": [
                            "10.245.152.107"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-admin-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:46.996505Z",
                "modified": "2025-08-23T17:27:42.47537Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicaldynamicsecrets.secrets.infisical.com",
                "custom": true,
                "id": "infisicaldynamicsecrets.secrets.infisical.com",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisicaldynamicsecrets.secrets.infisical.com"
                    },
                    "spec": {
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalDynamicSecret",
                            "listKind": "InfisicalDynamicSecretList",
                            "plural": "infisicaldynamicsecrets",
                            "singular": "infisicaldynamicsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalDynamicSecret is the Schema for the infisicaldynamicsecrets API.",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalDynamicSecretSpec defines the desired state of InfisicalDynamicSecret.",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dynamicSecret": {
                                                        "properties": {
                                                            "environmentSlug": {
                                                                "type": "string"
                                                            },
                                                            "projectId": {
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "type": "string"
                                                            },
                                                            "secretsPath": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "environmentSlug",
                                                            "projectId",
                                                            "secretName",
                                                            "secretsPath"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "type": "string"
                                                    },
                                                    "leaseRevocationPolicy": {
                                                        "type": "string"
                                                    },
                                                    "leaseTTL": {
                                                        "type": "string"
                                                    },
                                                    "managedSecretReference": {
                                                        "properties": {
                                                            "creationPolicy": {
                                                                "default": "Orphan",
                                                                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            },
                                                            "secretType": {
                                                                "default": "Opaque",
                                                                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "description": "The template to transform the secret data",
                                                                "properties": {
                                                                    "data": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "The template key values",
                                                                        "type": "object"
                                                                    },
                                                                    "includeAllSecrets": {
                                                                        "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "authentication",
                                                    "dynamicSecret",
                                                    "leaseRevocationPolicy",
                                                    "leaseTTL",
                                                    "managedSecretReference"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalDynamicSecretStatus defines the observed state of InfisicalDynamicSecret.",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "dynamicSecretId": {
                                                        "type": "string"
                                                    },
                                                    "lease": {
                                                        "properties": {
                                                            "creationTimestamp": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "expiresAt": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "version": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "creationTimestamp",
                                                            "expiresAt",
                                                            "id",
                                                            "version"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxTTL": {
                                                        "description": "The MaxTTL can be null, if it's null, there's no max TTL and we should never have to renew.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "conditions"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f226c0c9",
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.18.0"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisicaldynamicsecrets.secrets.infisical.com"
                        },
                        "spec": {
                            "group": "secrets.infisical.com",
                            "names": {
                                "kind": "InfisicalDynamicSecret",
                                "listKind": "InfisicalDynamicSecretList",
                                "plural": "infisicaldynamicsecrets",
                                "singular": "infisicaldynamicsecret"
                            },
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "InfisicalDynamicSecret is the Schema for the infisicaldynamicsecrets API.",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "InfisicalDynamicSecretSpec defines the desired state of InfisicalDynamicSecret.",
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "awsIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "azureAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "resource": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountKeyFilePath": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "serviceAccountKeyFilePath"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIdTokenAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "kubernetesAuth": {
                                                                    "properties": {
                                                                        "autoCreateServiceAccountToken": {
                                                                            "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "namespace": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "namespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountTokenAudiences": {
                                                                            "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "serviceAccountRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "ldapAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef",
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "universalAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "dynamicSecret": {
                                                            "properties": {
                                                                "environmentSlug": {
                                                                    "type": "string"
                                                                },
                                                                "projectId": {
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "type": "string"
                                                                },
                                                                "secretsPath": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "environmentSlug",
                                                                "projectId",
                                                                "secretName",
                                                                "secretsPath"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "hostAPI": {
                                                            "type": "string"
                                                        },
                                                        "leaseRevocationPolicy": {
                                                            "type": "string"
                                                        },
                                                        "leaseTTL": {
                                                            "type": "string"
                                                        },
                                                        "managedSecretReference": {
                                                            "properties": {
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "default": "Opaque",
                                                                    "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "properties": {
                                                                "caRef": {
                                                                    "description": "Reference to secret containing CA cert",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The name of the secret property with the CA certificate value",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret",
                                                                            "type": "string"
                                                                        },
                                                                        "secretNamespace": {
                                                                            "description": "The namespace where the Kubernetes Secret is located",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName",
                                                                        "secretNamespace"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "authentication",
                                                        "dynamicSecret",
                                                        "leaseRevocationPolicy",
                                                        "leaseTTL",
                                                        "managedSecretReference"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "InfisicalDynamicSecretStatus defines the observed state of InfisicalDynamicSecret.",
                                                    "properties": {
                                                        "conditions": {
                                                            "items": {
                                                                "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                                "properties": {
                                                                    "lastTransitionTime": {
                                                                        "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                        "maxLength": 32768,
                                                                        "type": "string"
                                                                    },
                                                                    "observedGeneration": {
                                                                        "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                        "format": "int64",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "reason": {
                                                                        "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "description": "status of the condition, one of True, False, Unknown.",
                                                                        "enum": [
                                                                            "True",
                                                                            "False",
                                                                            "Unknown"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                        "maxLength": 316,
                                                                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastTransitionTime",
                                                                    "message",
                                                                    "reason",
                                                                    "status",
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "dynamicSecretId": {
                                                            "type": "string"
                                                        },
                                                        "lease": {
                                                            "properties": {
                                                                "creationTimestamp": {
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "expiresAt": {
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "version": {
                                                                    "format": "int64",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "creationTimestamp",
                                                                "expiresAt",
                                                                "id",
                                                                "version"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "maxTTL": {
                                                            "description": "The MaxTTL can be null, if it's null, there's no max TTL and we should never have to renew.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "conditions"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0",
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f226c0c9",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisicaldynamicsecrets.secrets.infisical.com",
                        "resourceVersion": "33719078",
                        "uid": "fe369c41-7cfc-4696-92ee-8babd218b475"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalDynamicSecret",
                            "listKind": "InfisicalDynamicSecretList",
                            "plural": "infisicaldynamicsecrets",
                            "singular": "infisicaldynamicsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalDynamicSecret is the Schema for the infisicaldynamicsecrets API.",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalDynamicSecretSpec defines the desired state of InfisicalDynamicSecret.",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dynamicSecret": {
                                                        "properties": {
                                                            "environmentSlug": {
                                                                "type": "string"
                                                            },
                                                            "projectId": {
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "type": "string"
                                                            },
                                                            "secretsPath": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "environmentSlug",
                                                            "projectId",
                                                            "secretName",
                                                            "secretsPath"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "type": "string"
                                                    },
                                                    "leaseRevocationPolicy": {
                                                        "type": "string"
                                                    },
                                                    "leaseTTL": {
                                                        "type": "string"
                                                    },
                                                    "managedSecretReference": {
                                                        "properties": {
                                                            "creationPolicy": {
                                                                "default": "Orphan",
                                                                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            },
                                                            "secretType": {
                                                                "default": "Opaque",
                                                                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "description": "The template to transform the secret data",
                                                                "properties": {
                                                                    "data": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "The template key values",
                                                                        "type": "object"
                                                                    },
                                                                    "includeAllSecrets": {
                                                                        "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "authentication",
                                                    "dynamicSecret",
                                                    "leaseRevocationPolicy",
                                                    "leaseTTL",
                                                    "managedSecretReference"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalDynamicSecretStatus defines the observed state of InfisicalDynamicSecret.",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "dynamicSecretId": {
                                                        "type": "string"
                                                    },
                                                    "lease": {
                                                        "properties": {
                                                            "creationTimestamp": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "expiresAt": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "version": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "creationTimestamp",
                                                            "expiresAt",
                                                            "id",
                                                            "version"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxTTL": {
                                                        "description": "The MaxTTL can be null, if it's null, there's no max TTL and we should never have to renew.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "conditions"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "InfisicalDynamicSecret",
                            "listKind": "InfisicalDynamicSecretList",
                            "plural": "infisicaldynamicsecrets",
                            "singular": "infisicaldynamicsecret"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:27:45.104574Z",
                "modified": "2025-08-19T16:27:45.104574Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalpushsecrets.secrets.infisical.com",
                "custom": true,
                "id": "infisicalpushsecrets.secrets.infisical.com",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisicalpushsecrets.secrets.infisical.com"
                    },
                    "spec": {
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalPushSecret",
                            "listKind": "InfisicalPushSecretList",
                            "plural": "infisicalpushsecrets",
                            "singular": "infisicalpushsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalPushSecret is the Schema for the infisicalpushsecrets API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalPushSecretSpec defines the desired state of InfisicalPushSecret",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deletionPolicy": {
                                                        "type": "string"
                                                    },
                                                    "destination": {
                                                        "properties": {
                                                            "environmentSlug": {
                                                                "type": "string"
                                                            },
                                                            "projectId": {
                                                                "type": "string"
                                                            },
                                                            "secretsPath": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "environmentSlug",
                                                            "projectId",
                                                            "secretsPath"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "description": "Infisical host to pull secrets from",
                                                        "type": "string"
                                                    },
                                                    "push": {
                                                        "properties": {
                                                            "generators": {
                                                                "items": {
                                                                    "properties": {
                                                                        "destinationSecretName": {
                                                                            "type": "string"
                                                                        },
                                                                        "generatorRef": {
                                                                            "properties": {
                                                                                "kind": {
                                                                                    "allOf": [
                                                                                        {
                                                                                            "enum": [
                                                                                                "Password",
                                                                                                "UUID"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "enum": [
                                                                                                "Password",
                                                                                                "UUID"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "Specify the Kind of the generator resource",
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "kind",
                                                                                "name"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "destinationSecretName",
                                                                        "generatorRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "secret": {
                                                                "properties": {
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The name space where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    },
                                                                    "template": {
                                                                        "properties": {
                                                                            "data": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "The template key values",
                                                                                "type": "object"
                                                                            },
                                                                            "includeAllSecrets": {
                                                                                "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resyncInterval": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "updatePolicy": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "destination",
                                                    "push"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalPushSecretStatus defines the observed state of InfisicalPushSecret",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedSecrets": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "description": "managed secrets is a map where the key is the ID, and the value is the secret key (string[id], string[key] )",
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "conditions",
                                                    "managedSecrets"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f8de981d",
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.18.0"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisicalpushsecrets.secrets.infisical.com"
                        },
                        "spec": {
                            "group": "secrets.infisical.com",
                            "names": {
                                "kind": "InfisicalPushSecret",
                                "listKind": "InfisicalPushSecretList",
                                "plural": "infisicalpushsecrets",
                                "singular": "infisicalpushsecret"
                            },
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "InfisicalPushSecret is the Schema for the infisicalpushsecrets API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "InfisicalPushSecretSpec defines the desired state of InfisicalPushSecret",
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "awsIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "azureAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "resource": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountKeyFilePath": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "serviceAccountKeyFilePath"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIdTokenAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "kubernetesAuth": {
                                                                    "properties": {
                                                                        "autoCreateServiceAccountToken": {
                                                                            "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "namespace": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "namespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountTokenAudiences": {
                                                                            "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "serviceAccountRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "ldapAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef",
                                                                        "identityId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "universalAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "deletionPolicy": {
                                                            "type": "string"
                                                        },
                                                        "destination": {
                                                            "properties": {
                                                                "environmentSlug": {
                                                                    "type": "string"
                                                                },
                                                                "projectId": {
                                                                    "type": "string"
                                                                },
                                                                "secretsPath": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "environmentSlug",
                                                                "projectId",
                                                                "secretsPath"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "hostAPI": {
                                                            "description": "Infisical host to pull secrets from",
                                                            "type": "string"
                                                        },
                                                        "push": {
                                                            "properties": {
                                                                "generators": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "destinationSecretName": {
                                                                                "type": "string"
                                                                            },
                                                                            "generatorRef": {
                                                                                "properties": {
                                                                                    "kind": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "enum": [
                                                                                                    "Password",
                                                                                                    "UUID"
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "enum": [
                                                                                                    "Password",
                                                                                                    "UUID"
                                                                                                ]
                                                                                            }
                                                                                        ],
                                                                                        "description": "Specify the Kind of the generator resource",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "kind",
                                                                                    "name"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "destinationSecretName",
                                                                            "generatorRef"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "secret": {
                                                                    "properties": {
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret",
                                                                            "type": "string"
                                                                        },
                                                                        "secretNamespace": {
                                                                            "description": "The name space where the Kubernetes Secret is located",
                                                                            "type": "string"
                                                                        },
                                                                        "template": {
                                                                            "properties": {
                                                                                "data": {
                                                                                    "additionalProperties": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": "The template key values",
                                                                                    "type": "object"
                                                                                },
                                                                                "includeAllSecrets": {
                                                                                    "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "secretName",
                                                                        "secretNamespace"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "resyncInterval": {
                                                            "type": "string"
                                                        },
                                                        "tls": {
                                                            "properties": {
                                                                "caRef": {
                                                                    "description": "Reference to secret containing CA cert",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The name of the secret property with the CA certificate value",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret",
                                                                            "type": "string"
                                                                        },
                                                                        "secretNamespace": {
                                                                            "description": "The namespace where the Kubernetes Secret is located",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName",
                                                                        "secretNamespace"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "updatePolicy": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "destination",
                                                        "push"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "InfisicalPushSecretStatus defines the observed state of InfisicalPushSecret",
                                                    "properties": {
                                                        "conditions": {
                                                            "items": {
                                                                "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                                "properties": {
                                                                    "lastTransitionTime": {
                                                                        "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                        "maxLength": 32768,
                                                                        "type": "string"
                                                                    },
                                                                    "observedGeneration": {
                                                                        "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                        "format": "int64",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "reason": {
                                                                        "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "description": "status of the condition, one of True, False, Unknown.",
                                                                        "enum": [
                                                                            "True",
                                                                            "False",
                                                                            "Unknown"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                        "maxLength": 316,
                                                                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastTransitionTime",
                                                                    "message",
                                                                    "reason",
                                                                    "status",
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "managedSecrets": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "description": "managed secrets is a map where the key is the ID, and the value is the secret key (string[id], string[key] )",
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "conditions",
                                                        "managedSecrets"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0",
                            "meta.helm.sh/release-name": "infisical-operator",
                            "meta.helm.sh/release-namespace": "infisical-operator-system"
                        },
                        "creationTimestamp": "2025-08-19T13:20:56Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f8de981d",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:meta.helm.sh/release-name": {},
                                            "f:meta.helm.sh/release-namespace": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "helm",
                                "operation": "Update",
                                "time": "2025-08-19T13:20:56Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T13:20:56Z"
                            }
                        ],
                        "name": "infisicalpushsecrets.secrets.infisical.com",
                        "resourceVersion": "33719085",
                        "uid": "0638bbaa-b2f3-4f73-96a2-e6893d45c609"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalPushSecret",
                            "listKind": "InfisicalPushSecretList",
                            "plural": "infisicalpushsecrets",
                            "singular": "infisicalpushsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalPushSecret is the Schema for the infisicalpushsecrets API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalPushSecretSpec defines the desired state of InfisicalPushSecret",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account. This field is recommended in most cases.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deletionPolicy": {
                                                        "type": "string"
                                                    },
                                                    "destination": {
                                                        "properties": {
                                                            "environmentSlug": {
                                                                "type": "string"
                                                            },
                                                            "projectId": {
                                                                "type": "string"
                                                            },
                                                            "secretsPath": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "environmentSlug",
                                                            "projectId",
                                                            "secretsPath"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "description": "Infisical host to pull secrets from",
                                                        "type": "string"
                                                    },
                                                    "push": {
                                                        "properties": {
                                                            "generators": {
                                                                "items": {
                                                                    "properties": {
                                                                        "destinationSecretName": {
                                                                            "type": "string"
                                                                        },
                                                                        "generatorRef": {
                                                                            "properties": {
                                                                                "kind": {
                                                                                    "allOf": [
                                                                                        {
                                                                                            "enum": [
                                                                                                "Password",
                                                                                                "UUID"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "enum": [
                                                                                                "Password",
                                                                                                "UUID"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "Specify the Kind of the generator resource",
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "kind",
                                                                                "name"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "destinationSecretName",
                                                                        "generatorRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "secret": {
                                                                "properties": {
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The name space where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    },
                                                                    "template": {
                                                                        "properties": {
                                                                            "data": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "The template key values",
                                                                                "type": "object"
                                                                            },
                                                                            "includeAllSecrets": {
                                                                                "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resyncInterval": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "updatePolicy": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "destination",
                                                    "push"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalPushSecretStatus defines the observed state of InfisicalPushSecret",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedSecrets": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "description": "managed secrets is a map where the key is the ID, and the value is the secret key (string[id], string[key] )",
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "conditions",
                                                    "managedSecrets"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "InfisicalPushSecret",
                            "listKind": "InfisicalPushSecretList",
                            "plural": "infisicalpushsecrets",
                            "singular": "infisicalpushsecret"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T13:20:56Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:27:45.653365Z",
                "modified": "2025-08-19T16:27:45.653365Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-explorer-app-service",
                "custom": true,
                "id": "integra-apps/integra-explorer-app",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-explorer-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-explorer-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-explorer-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-explorer-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-explorer-app",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-461e97bc",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-explorer-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-explorer-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-explorer-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-explorer-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-explorer-app",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:04Z",
                        "labels": {
                            "app": "integra-explorer-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-explorer-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-cc042a89",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:04Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-461e97bc",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:33Z"
                            }
                        ],
                        "name": "integra-explorer-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765109",
                        "uid": "eed816be-549b-4ca0-81d4-1bb486128d77"
                    },
                    "spec": {
                        "clusterIP": "10.245.2.128",
                        "clusterIPs": [
                            "10.245.2.128"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-explorer-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-explorer-app",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-explorer-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:46.688621Z",
                "modified": "2025-08-23T17:27:43.200943Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-temporal-orchestrator-service-infisical",
                "custom": true,
                "id": "integra-workflow/integra-temporal-orchestrator-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                            "environment": "dev"
                        },
                        "name": "integra-temporal-orchestrator-service-secrets",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-temporal-orchestrator-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-workflow"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-temporal-orchestrator-service-env",
                            "secretNamespace": "integra-workflow"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-72eca9d5",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-temporal-orchestrator-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                "environment": "dev"
                            },
                            "name": "integra-temporal-orchestrator-service-secrets",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-temporal-orchestrator-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-workflow"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-temporal-orchestrator-service-env",
                                "secretNamespace": "integra-workflow"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:00Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-72eca9d5",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:00Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:00Z"
                            }
                        ],
                        "name": "integra-temporal-orchestrator-service-secrets",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35651102",
                        "uid": "41a0c7d3-d173-473c-9438-aa59d4f71fee"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-temporal-orchestrator-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-workflow"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-temporal-orchestrator-service-env",
                            "secretNamespace": "integra-workflow",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:30:00Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:00Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 32 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:00Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-orchestrator-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:30:00.075042Z",
                "modified": "2025-08-23T13:31:24.051418Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-temporal-messaging-service-infisical",
                "custom": true,
                "id": "integra-workflow/integra-temporal-messaging-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-temporal-messaging-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-messaging-service",
                            "environment": "dev"
                        },
                        "name": "integra-temporal-messaging-service-secrets",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-temporal-messaging-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-workflow"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-temporal-messaging-service-env",
                            "secretNamespace": "integra-workflow"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a3ea27e6",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-temporal-messaging-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                "environment": "dev"
                            },
                            "name": "integra-temporal-messaging-service-secrets",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-temporal-messaging-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-workflow"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-temporal-messaging-service-env",
                                "secretNamespace": "integra-workflow"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:29:57Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-temporal-messaging-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-messaging-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-a3ea27e6",
                                "operation": "Apply",
                                "time": "2025-08-23T12:29:57Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:29:57Z"
                            }
                        ],
                        "name": "integra-temporal-messaging-service-secrets",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35651035",
                        "uid": "5aec331b-d3a6-40a3-9e9f-bb2897826bb7"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-temporal-messaging-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-workflow"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-temporal-messaging-service-env",
                            "secretNamespace": "integra-workflow",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:29:57Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:29:57Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 34 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:29:57Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-messaging-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:29:57.07055Z",
                "modified": "2025-08-23T13:31:23.987319Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-ai-help-service-infisical",
                "custom": true,
                "id": "integra-apps/integra-ai-help-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-ai-help-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-help-service",
                            "environment": "dev"
                        },
                        "name": "integra-ai-help-service-secrets",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-ai-help-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-ai-help-service-env",
                            "secretNamespace": "integra-apps"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-28c80bf8",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-ai-help-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-help-service",
                                "environment": "dev"
                            },
                            "name": "integra-ai-help-service-secrets",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-ai-help-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-apps"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-ai-help-service-env",
                                "secretNamespace": "integra-apps"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:30:15Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-ai-help-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-help-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-28c80bf8",
                                "operation": "Apply",
                                "time": "2025-08-23T12:30:15Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:30:15Z"
                            }
                        ],
                        "name": "integra-ai-help-service-secrets",
                        "namespace": "integra-apps",
                        "resourceVersion": "35652000",
                        "uid": "0e34a0d3-6f1a-4188-ab38-d474feddb397"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-ai-help-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-apps"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-ai-help-service-env",
                            "secretNamespace": "integra-apps",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:30:15Z",
                                "message": "Failed to load Infisical Token from the provided Kubernetes secret because: no authentication method provided",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:15Z",
                                "message": "Failed to sync secrets. This can be caused by invalid access token or an invalid API host that is set. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Error",
                                "status": "False",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:30:15Z",
                                "message": "Auto redeployment has been stopped because the operator failed to sync secrets. Error: unable to authenticate [err=no authentication method provided]",
                                "reason": "Stopped",
                                "status": "False",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-ai-help-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:30:16.261561Z",
                "modified": "2025-08-23T12:30:16.261561Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::infisicalsecrets.secrets.infisical.com",
                "custom": true,
                "id": "infisicalsecrets.secrets.infisical.com",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "name": "infisicalsecrets.secrets.infisical.com"
                    },
                    "spec": {
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalSecret",
                            "listKind": "InfisicalSecretList",
                            "plural": "infisicalsecrets",
                            "singular": "infisicalsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalSecret is the Schema for the infisicalsecrets API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalSecretSpec defines the desired state of InfisicalSecret",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "serviceAccount": {
                                                                "properties": {
                                                                    "environmentName": {
                                                                        "type": "string"
                                                                    },
                                                                    "projectId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountSecretReference": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "environmentName",
                                                                    "projectId",
                                                                    "serviceAccountSecretReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "serviceToken": {
                                                                "properties": {
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceTokenSecretReference": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretsScope",
                                                                    "serviceTokenSecretReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "description": "Infisical host to pull secrets from",
                                                        "type": "string"
                                                    },
                                                    "instantUpdates": {
                                                        "type": "boolean"
                                                    },
                                                    "managedKubeConfigMapReferences": {
                                                        "items": {
                                                            "properties": {
                                                                "configMapName": {
                                                                    "description": "The name of the Kubernetes ConfigMap",
                                                                    "type": "string"
                                                                },
                                                                "configMapNamespace": {
                                                                    "description": "The namespace where the Kubernetes ConfigMap is located",
                                                                    "type": "string"
                                                                },
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes ConfigMap creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the config map and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the config map owner. This will result in the config map being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "configMapName",
                                                                "configMapNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedKubeSecretReferences": {
                                                        "items": {
                                                            "properties": {
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "default": "Opaque",
                                                                    "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedSecretReference": {
                                                        "properties": {
                                                            "creationPolicy": {
                                                                "default": "Orphan",
                                                                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            },
                                                            "secretType": {
                                                                "default": "Opaque",
                                                                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "description": "The template to transform the secret data",
                                                                "properties": {
                                                                    "data": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "The template key values",
                                                                        "type": "object"
                                                                    },
                                                                    "includeAllSecrets": {
                                                                        "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "resyncInterval": {
                                                        "default": 60,
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tokenSecretReference": {
                                                        "properties": {
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "resyncInterval"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalSecretStatus defines the observed state of InfisicalSecret",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "conditions"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-80099217",
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.18.0"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "infisical-operator",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "secrets-operator",
                                "app.kubernetes.io/version": "v0.10.2",
                                "helm.sh/chart": "secrets-operator-v0.10.2"
                            },
                            "name": "infisicalsecrets.secrets.infisical.com"
                        },
                        "spec": {
                            "group": "secrets.infisical.com",
                            "names": {
                                "kind": "InfisicalSecret",
                                "listKind": "InfisicalSecretList",
                                "plural": "infisicalsecrets",
                                "singular": "infisicalsecret"
                            },
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "InfisicalSecret is the Schema for the infisicalsecrets API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "InfisicalSecretSpec defines the desired state of InfisicalSecret",
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "awsIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "azureAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "resource": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIamAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountKeyFilePath": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope",
                                                                        "serviceAccountKeyFilePath"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "gcpIdTokenAuth": {
                                                                    "properties": {
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "kubernetesAuth": {
                                                                    "properties": {
                                                                        "autoCreateServiceAccountToken": {
                                                                            "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "namespace": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "namespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceAccountTokenAudiences": {
                                                                            "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identityId",
                                                                        "secretsScope",
                                                                        "serviceAccountRef"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "ldapAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "identityId": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef",
                                                                        "identityId",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "serviceAccount": {
                                                                    "properties": {
                                                                        "environmentName": {
                                                                            "type": "string"
                                                                        },
                                                                        "projectId": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceAccountSecretReference": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "environmentName",
                                                                        "projectId",
                                                                        "serviceAccountSecretReference"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "serviceToken": {
                                                                    "properties": {
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "serviceTokenSecretReference": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "secretsScope",
                                                                        "serviceTokenSecretReference"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "universalAuth": {
                                                                    "properties": {
                                                                        "credentialsRef": {
                                                                            "properties": {
                                                                                "secretName": {
                                                                                    "description": "The name of the Kubernetes Secret",
                                                                                    "type": "string"
                                                                                },
                                                                                "secretNamespace": {
                                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "secretName",
                                                                                "secretNamespace"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "secretsScope": {
                                                                            "properties": {
                                                                                "envSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "projectSlug": {
                                                                                    "type": "string"
                                                                                },
                                                                                "recursive": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "secretsPath": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "envSlug",
                                                                                "projectSlug",
                                                                                "secretsPath"
                                                                            ],
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "credentialsRef",
                                                                        "secretsScope"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "hostAPI": {
                                                            "description": "Infisical host to pull secrets from",
                                                            "type": "string"
                                                        },
                                                        "instantUpdates": {
                                                            "type": "boolean"
                                                        },
                                                        "managedKubeConfigMapReferences": {
                                                            "items": {
                                                                "properties": {
                                                                    "configMapName": {
                                                                        "description": "The name of the Kubernetes ConfigMap",
                                                                        "type": "string"
                                                                    },
                                                                    "configMapNamespace": {
                                                                        "description": "The namespace where the Kubernetes ConfigMap is located",
                                                                        "type": "string"
                                                                    },
                                                                    "creationPolicy": {
                                                                        "default": "Orphan",
                                                                        "description": "The Kubernetes ConfigMap creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the config map and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the config map owner. This will result in the config map being orphaned and not deleted when the resource is deleted.",
                                                                        "type": "string"
                                                                    },
                                                                    "template": {
                                                                        "description": "The template to transform the secret data",
                                                                        "properties": {
                                                                            "data": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "The template key values",
                                                                                "type": "object"
                                                                            },
                                                                            "includeAllSecrets": {
                                                                                "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "configMapName",
                                                                    "configMapNamespace"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "managedKubeSecretReferences": {
                                                            "items": {
                                                                "properties": {
                                                                    "creationPolicy": {
                                                                        "default": "Orphan",
                                                                        "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The name space where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    },
                                                                    "secretType": {
                                                                        "default": "Opaque",
                                                                        "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                        "type": "string"
                                                                    },
                                                                    "template": {
                                                                        "description": "The template to transform the secret data",
                                                                        "properties": {
                                                                            "data": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "The template key values",
                                                                                "type": "object"
                                                                            },
                                                                            "includeAllSecrets": {
                                                                                "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "managedSecretReference": {
                                                            "properties": {
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "default": "Opaque",
                                                                    "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "resyncInterval": {
                                                            "default": 60,
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "properties": {
                                                                "caRef": {
                                                                    "description": "Reference to secret containing CA cert",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The name of the secret property with the CA certificate value",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret",
                                                                            "type": "string"
                                                                        },
                                                                        "secretNamespace": {
                                                                            "description": "The namespace where the Kubernetes Secret is located",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName",
                                                                        "secretNamespace"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tokenSecretReference": {
                                                            "properties": {
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "resyncInterval"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "InfisicalSecretStatus defines the observed state of InfisicalSecret",
                                                    "properties": {
                                                        "conditions": {
                                                            "items": {
                                                                "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                                "properties": {
                                                                    "lastTransitionTime": {
                                                                        "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                        "maxLength": 32768,
                                                                        "type": "string"
                                                                    },
                                                                    "observedGeneration": {
                                                                        "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                        "format": "int64",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "reason": {
                                                                        "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "description": "status of the condition, one of True, False, Unknown.",
                                                                        "enum": [
                                                                            "True",
                                                                            "False",
                                                                            "Unknown"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                        "maxLength": 316,
                                                                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastTransitionTime",
                                                                    "message",
                                                                    "reason",
                                                                    "status",
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "conditions"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.18.0"
                        },
                        "creationTimestamp": "2025-08-19T16:27:45Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "infisical-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "secrets-operator",
                            "app.kubernetes.io/version": "v0.10.2",
                            "helm.sh/chart": "secrets-operator-v0.10.2"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:controller-gen.kubebuilder.io/version": {}
                                        },
                                        "f:labels": {
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:helm.sh/chart": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:group": {},
                                        "f:names": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-80099217",
                                "operation": "Apply",
                                "time": "2025-08-19T16:27:45Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-19T16:27:45Z"
                            }
                        ],
                        "name": "infisicalsecrets.secrets.infisical.com",
                        "resourceVersion": "33719088",
                        "uid": "9c51f5af-f64d-488e-b799-57a965615370"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "secrets.infisical.com",
                        "names": {
                            "kind": "InfisicalSecret",
                            "listKind": "InfisicalSecretList",
                            "plural": "infisicalsecrets",
                            "singular": "infisicalsecret"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "InfisicalSecret is the Schema for the infisicalsecrets API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "InfisicalSecretSpec defines the desired state of InfisicalSecret",
                                                "properties": {
                                                    "authentication": {
                                                        "properties": {
                                                            "awsIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "azureAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIamAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountKeyFilePath": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope",
                                                                    "serviceAccountKeyFilePath"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "gcpIdTokenAuth": {
                                                                "properties": {
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "kubernetesAuth": {
                                                                "properties": {
                                                                    "autoCreateServiceAccountToken": {
                                                                        "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountRef": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "namespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceAccountTokenAudiences": {
                                                                        "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "identityId",
                                                                    "secretsScope",
                                                                    "serviceAccountRef"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ldapAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "identityId": {
                                                                        "type": "string"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "identityId",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "serviceAccount": {
                                                                "properties": {
                                                                    "environmentName": {
                                                                        "type": "string"
                                                                    },
                                                                    "projectId": {
                                                                        "type": "string"
                                                                    },
                                                                    "serviceAccountSecretReference": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "environmentName",
                                                                    "projectId",
                                                                    "serviceAccountSecretReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "serviceToken": {
                                                                "properties": {
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "serviceTokenSecretReference": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "secretsScope",
                                                                    "serviceTokenSecretReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "universalAuth": {
                                                                "properties": {
                                                                    "credentialsRef": {
                                                                        "properties": {
                                                                            "secretName": {
                                                                                "description": "The name of the Kubernetes Secret",
                                                                                "type": "string"
                                                                            },
                                                                            "secretNamespace": {
                                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "secretName",
                                                                            "secretNamespace"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "secretsScope": {
                                                                        "properties": {
                                                                            "envSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "projectSlug": {
                                                                                "type": "string"
                                                                            },
                                                                            "recursive": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "secretsPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "envSlug",
                                                                            "projectSlug",
                                                                            "secretsPath"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "credentialsRef",
                                                                    "secretsScope"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostAPI": {
                                                        "description": "Infisical host to pull secrets from",
                                                        "type": "string"
                                                    },
                                                    "instantUpdates": {
                                                        "type": "boolean"
                                                    },
                                                    "managedKubeConfigMapReferences": {
                                                        "items": {
                                                            "properties": {
                                                                "configMapName": {
                                                                    "description": "The name of the Kubernetes ConfigMap",
                                                                    "type": "string"
                                                                },
                                                                "configMapNamespace": {
                                                                    "description": "The namespace where the Kubernetes ConfigMap is located",
                                                                    "type": "string"
                                                                },
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes ConfigMap creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the config map and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the config map owner. This will result in the config map being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "configMapName",
                                                                "configMapNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedKubeSecretReferences": {
                                                        "items": {
                                                            "properties": {
                                                                "creationPolicy": {
                                                                    "default": "Orphan",
                                                                    "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Kubernetes Secret",
                                                                    "type": "string"
                                                                },
                                                                "secretNamespace": {
                                                                    "description": "The name space where the Kubernetes Secret is located",
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "default": "Opaque",
                                                                    "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                    "type": "string"
                                                                },
                                                                "template": {
                                                                    "description": "The template to transform the secret data",
                                                                    "properties": {
                                                                        "data": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "The template key values",
                                                                            "type": "object"
                                                                        },
                                                                        "includeAllSecrets": {
                                                                            "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "secretName",
                                                                "secretNamespace"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "managedSecretReference": {
                                                        "properties": {
                                                            "creationPolicy": {
                                                                "default": "Orphan",
                                                                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            },
                                                            "secretType": {
                                                                "default": "Opaque",
                                                                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "description": "The template to transform the secret data",
                                                                "properties": {
                                                                    "data": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "The template key values",
                                                                        "type": "object"
                                                                    },
                                                                    "includeAllSecrets": {
                                                                        "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "resyncInterval": {
                                                        "default": 60,
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caRef": {
                                                                "description": "Reference to secret containing CA cert",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The name of the secret property with the CA certificate value",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret",
                                                                        "type": "string"
                                                                    },
                                                                    "secretNamespace": {
                                                                        "description": "The namespace where the Kubernetes Secret is located",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName",
                                                                    "secretNamespace"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tokenSecretReference": {
                                                        "properties": {
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret",
                                                                "type": "string"
                                                            },
                                                            "secretNamespace": {
                                                                "description": "The name space where the Kubernetes Secret is located",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName",
                                                            "secretNamespace"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "resyncInterval"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "InfisicalSecretStatus defines the observed state of InfisicalSecret",
                                                "properties": {
                                                    "conditions": {
                                                        "items": {
                                                            "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                            "properties": {
                                                                "lastTransitionTime": {
                                                                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                                                    "maxLength": 32768,
                                                                    "type": "string"
                                                                },
                                                                "observedGeneration": {
                                                                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                                                    "format": "int64",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "reason": {
                                                                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "status of the condition, one of True, False, Unknown.",
                                                                    "enum": [
                                                                        "True",
                                                                        "False",
                                                                        "Unknown"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                    "maxLength": 316,
                                                                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "lastTransitionTime",
                                                                "message",
                                                                "reason",
                                                                "status",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "conditions"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "InfisicalSecret",
                            "listKind": "InfisicalSecretList",
                            "plural": "infisicalsecrets",
                            "singular": "infisicalsecret"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-19T16:27:45Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2025-08-19T16:27:45Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:helm.sh/v3:Chart::infisical-operator",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-19T16:27:45.654089Z",
                "modified": "2025-08-19T16:27:45.654089Z",
                "sourcePosition": "project:///node_modules/@pulumi/output.ts#516,31"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-messaging-service-infisical",
                "custom": true,
                "id": "integra-workflow/integra-messaging-service-secrets",
                "type": "kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret",
                "inputs": {
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "labels": {
                            "app": "integra-messaging-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-messaging-service",
                            "environment": "dev"
                        },
                        "name": "integra-messaging-service-secrets",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-messaging-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-workflow"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "secretName": "integra-messaging-service-env",
                            "secretNamespace": "integra-workflow"
                        },
                        "resyncInterval": 60
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-620038dc",
                    "__initialApiVersion": "secrets.infisical.com/v1alpha1",
                    "__inputs": {
                        "apiVersion": "secrets.infisical.com/v1alpha1",
                        "kind": "InfisicalSecret",
                        "metadata": {
                            "labels": {
                                "app": "integra-messaging-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-messaging-service",
                                "environment": "dev"
                            },
                            "name": "integra-messaging-service-secrets",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "authentication": {
                                "serviceToken": {
                                    "secretsScope": {
                                        "envSlug": "dev",
                                        "secretsPath": "/apps/integra-messaging-service"
                                    },
                                    "serviceTokenSecretReference": {
                                        "secretName": "infisical-service-token",
                                        "secretNamespace": "integra-workflow"
                                    }
                                }
                            },
                            "hostAPI": "https://app.infisical.com/api",
                            "managedSecretReference": {
                                "secretName": "integra-messaging-service-env",
                                "secretNamespace": "integra-workflow"
                            },
                            "resyncInterval": 60
                        }
                    },
                    "apiVersion": "secrets.infisical.com/v1alpha1",
                    "kind": "InfisicalSecret",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T12:29:57Z",
                        "generation": 1,
                        "labels": {
                            "app": "integra-messaging-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-messaging-service",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:authentication": {
                                            "f:serviceToken": {
                                                "f:secretsScope": {
                                                    "f:envSlug": {},
                                                    "f:secretsPath": {}
                                                },
                                                "f:serviceTokenSecretReference": {
                                                    "f:secretName": {},
                                                    "f:secretNamespace": {}
                                                }
                                            }
                                        },
                                        "f:hostAPI": {},
                                        "f:managedSecretReference": {
                                            "f:secretName": {},
                                            "f:secretNamespace": {}
                                        },
                                        "f:resyncInterval": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-620038dc",
                                "operation": "Apply",
                                "time": "2025-08-23T12:29:57Z"
                            },
                            {
                                "apiVersion": "secrets.infisical.com/v1alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T12:29:57Z"
                            }
                        ],
                        "name": "integra-messaging-service-secrets",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35651047",
                        "uid": "6b057c1d-f52e-4c32-ad3c-d26e423cad4d"
                    },
                    "spec": {
                        "authentication": {
                            "serviceToken": {
                                "secretsScope": {
                                    "envSlug": "dev",
                                    "secretsPath": "/apps/integra-messaging-service"
                                },
                                "serviceTokenSecretReference": {
                                    "secretName": "infisical-service-token",
                                    "secretNamespace": "integra-workflow"
                                }
                            }
                        },
                        "hostAPI": "https://app.infisical.com/api",
                        "managedSecretReference": {
                            "creationPolicy": "Orphan",
                            "secretName": "integra-messaging-service-env",
                            "secretNamespace": "integra-workflow",
                            "secretType": "Opaque"
                        },
                        "resyncInterval": 60
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T12:29:57Z",
                                "message": "Infisical controller has loaded the Infisical token in provided Kubernetes secret, using SERVICE_TOKEN authentication strategy",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/LoadedInfisicalToken"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:29:57Z",
                                "message": "Infisical controller has started syncing your secrets. Last reconcile synced 10 secrets",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/ReadyToSyncSecrets"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T12:29:57Z",
                                "message": "Infisical has found 0 deployments which are ready to be auto redeployed when secrets change",
                                "reason": "OK",
                                "status": "True",
                                "type": "secrets.infisical.com/AutoRedeployReady"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-messaging-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T12:29:57.52385Z",
                "modified": "2025-08-23T13:31:23.98887Z",
                "sourcePosition": "project:///components/IntegraService.ts#45,28"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-blockchain-api-route",
                "custom": true,
                "id": "integra-blockchain/integra-blockchain-api",
                "type": "kubernetes:apisix.apache.org/v2:ApisixRoute",
                "inputs": {
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "name": "integra-blockchain-api",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-blockchain-api",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "tx.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/v1/*",
                                        "/api/*"
                                    ]
                                },
                                "name": "integra-blockchain-api",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-4917fc83",
                    "__initialApiVersion": "apisix.apache.org/v2",
                    "__inputs": {
                        "apiVersion": "apisix.apache.org/v2",
                        "kind": "ApisixRoute",
                        "metadata": {
                            "name": "integra-blockchain-api",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "http": [
                                {
                                    "backends": [
                                        {
                                            "serviceName": "integra-blockchain-api",
                                            "servicePort": 3000
                                        }
                                    ],
                                    "match": {
                                        "hosts": [
                                            "tx.trustwithintegra.com"
                                        ],
                                        "paths": [
                                            "/v1/*",
                                            "/api/*"
                                        ]
                                    },
                                    "name": "integra-blockchain-api",
                                    "plugins": [
                                        {
                                            "config": {
                                                "allow_credentials": true,
                                                "allow_headers": "*",
                                                "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                                "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                                "expose_headers": "*",
                                                "max_age": 3600
                                            },
                                            "enable": true,
                                            "name": "cors"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T13:32:29Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:http": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-4917fc83",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:29Z"
                            },
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "apisix-ingress-controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:29Z"
                            }
                        ],
                        "name": "integra-blockchain-api",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35677156",
                        "uid": "876d3135-6acf-4f26-88a9-cc24c7d82963"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-blockchain-api",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "tx.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/v1/*",
                                        "/api/*"
                                    ]
                                },
                                "name": "integra-blockchain-api",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:29Z",
                                "message": "",
                                "observedGeneration": 1,
                                "reason": "Accepted",
                                "status": "True",
                                "type": "Accepted"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-blockchain-api",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-blockchain-api-service"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:30.149994Z",
                "modified": "2025-08-23T13:32:30.149994Z",
                "sourcePosition": "project:///components/IntegraService.ts#211,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-developer-service-route",
                "custom": true,
                "id": "integra-apps/integra-developer-service",
                "type": "kubernetes:apisix.apache.org/v2:ApisixRoute",
                "inputs": {
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "name": "integra-developer-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-developer-service",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "api2.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/v1/*",
                                        "/oauth2/*"
                                    ]
                                },
                                "name": "integra-developer-service",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-eb5fdde7",
                    "__initialApiVersion": "apisix.apache.org/v2",
                    "__inputs": {
                        "apiVersion": "apisix.apache.org/v2",
                        "kind": "ApisixRoute",
                        "metadata": {
                            "name": "integra-developer-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "http": [
                                {
                                    "backends": [
                                        {
                                            "serviceName": "integra-developer-service",
                                            "servicePort": 3000
                                        }
                                    ],
                                    "match": {
                                        "hosts": [
                                            "api2.trustwithintegra.com"
                                        ],
                                        "paths": [
                                            "/v1/*",
                                            "/oauth2/*"
                                        ]
                                    },
                                    "name": "integra-developer-service",
                                    "plugins": [
                                        {
                                            "config": {
                                                "allow_credentials": true,
                                                "allow_headers": "*",
                                                "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                                "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                                "expose_headers": "*",
                                                "max_age": 3600
                                            },
                                            "enable": true,
                                            "name": "cors"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T13:32:41Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:http": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-eb5fdde7",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:41Z"
                            },
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "apisix-ingress-controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:41Z"
                            }
                        ],
                        "name": "integra-developer-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35677559",
                        "uid": "47fd0851-ba47-4ac3-a983-e5f01c37fd48"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-developer-service",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "api2.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/v1/*",
                                        "/oauth2/*"
                                    ]
                                },
                                "name": "integra-developer-service",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:41Z",
                                "message": "",
                                "observedGeneration": 1,
                                "reason": "Accepted",
                                "status": "True",
                                "type": "Accepted"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-developer-service-service"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:41.468305Z",
                "modified": "2025-08-23T13:32:41.468305Z",
                "sourcePosition": "project:///components/IntegraService.ts#211,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-docs-app-route",
                "custom": true,
                "id": "integra-apps/integra-docs-app",
                "type": "kubernetes:apisix.apache.org/v2:ApisixRoute",
                "inputs": {
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "name": "integra-docs-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-docs-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "docs.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-docs-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a12a7972",
                    "__initialApiVersion": "apisix.apache.org/v2",
                    "__inputs": {
                        "apiVersion": "apisix.apache.org/v2",
                        "kind": "ApisixRoute",
                        "metadata": {
                            "name": "integra-docs-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "http": [
                                {
                                    "backends": [
                                        {
                                            "serviceName": "integra-docs-app",
                                            "servicePort": 3000
                                        }
                                    ],
                                    "match": {
                                        "hosts": [
                                            "docs.trustwithintegra.com"
                                        ],
                                        "paths": [
                                            "/*"
                                        ]
                                    },
                                    "name": "integra-docs-app",
                                    "plugins": [
                                        {
                                            "config": {
                                                "allow_credentials": true,
                                                "allow_headers": "*",
                                                "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                                "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                                "expose_headers": "*",
                                                "max_age": 3600
                                            },
                                            "enable": true,
                                            "name": "cors"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T13:32:34Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:http": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-a12a7972",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:34Z"
                            },
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "apisix-ingress-controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:34Z"
                            }
                        ],
                        "name": "integra-docs-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35677357",
                        "uid": "b5cf5c7d-0099-4b87-adcb-876e70535289"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-docs-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "docs.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-docs-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:34Z",
                                "message": "",
                                "observedGeneration": 1,
                                "reason": "Accepted",
                                "status": "True",
                                "type": "Accepted"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-docs-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-docs-app-service"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:34.874177Z",
                "modified": "2025-08-23T13:32:34.874177Z",
                "sourcePosition": "project:///components/IntegraService.ts#211,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-explorer-app-route",
                "custom": true,
                "id": "integra-apps/integra-explorer-app",
                "type": "kubernetes:apisix.apache.org/v2:ApisixRoute",
                "inputs": {
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "name": "integra-explorer-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-explorer-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "explorer.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-explorer-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-0ae60c40",
                    "__initialApiVersion": "apisix.apache.org/v2",
                    "__inputs": {
                        "apiVersion": "apisix.apache.org/v2",
                        "kind": "ApisixRoute",
                        "metadata": {
                            "name": "integra-explorer-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "http": [
                                {
                                    "backends": [
                                        {
                                            "serviceName": "integra-explorer-app",
                                            "servicePort": 3000
                                        }
                                    ],
                                    "match": {
                                        "hosts": [
                                            "explorer.trustwithintegra.com"
                                        ],
                                        "paths": [
                                            "/*"
                                        ]
                                    },
                                    "name": "integra-explorer-app",
                                    "plugins": [
                                        {
                                            "config": {
                                                "allow_credentials": true,
                                                "allow_headers": "*",
                                                "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                                "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                                "expose_headers": "*",
                                                "max_age": 3600
                                            },
                                            "enable": true,
                                            "name": "cors"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T13:32:36Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:http": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-0ae60c40",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:36Z"
                            },
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "apisix-ingress-controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:36Z"
                            }
                        ],
                        "name": "integra-explorer-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35677407",
                        "uid": "e6162bae-2e18-40f9-acf4-c7ae6de64724"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-explorer-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "explorer.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-explorer-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:36Z",
                                "message": "",
                                "observedGeneration": 1,
                                "reason": "Accepted",
                                "status": "True",
                                "type": "Accepted"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-explorer-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-explorer-app-service"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:36.602323Z",
                "modified": "2025-08-23T13:32:36.602323Z",
                "sourcePosition": "project:///components/IntegraService.ts#211,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-workflow-service-service",
                "custom": true,
                "id": "integra-workflow/integra-workflow-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-workflow-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-workflow-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-workflow-service",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-workflow-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-workflow-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-550bfa1e",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-workflow-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-workflow-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-workflow-service",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-workflow-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-workflow-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:06Z",
                        "labels": {
                            "app": "integra-workflow-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-workflow-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-c42ca2e9",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:06Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-550bfa1e",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:34Z"
                            }
                        ],
                        "name": "integra-workflow-service",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35765126",
                        "uid": "966f8f90-ece6-46c0-90c8-979cfa968f33"
                    },
                    "spec": {
                        "clusterIP": "10.245.204.77",
                        "clusterIPs": [
                            "10.245.204.77"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-workflow-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-workflow-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-workflow-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:48.859438Z",
                "modified": "2025-08-23T17:27:44.363588Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-trust-app-service",
                "custom": true,
                "id": "integra-apps/integra-trust-app",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-trust-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-trust-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-trust-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-trust-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-trust-app",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-6f521cd5",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-trust-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-trust-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-trust-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-trust-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-trust-app",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:05Z",
                        "labels": {
                            "app": "integra-trust-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-trust-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-25834878",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:05Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-6f521cd5",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:34Z"
                            }
                        ],
                        "name": "integra-trust-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765130",
                        "uid": "72641bfa-d336-4dc0-b233-c659f1d6d126"
                    },
                    "spec": {
                        "clusterIP": "10.245.13.125",
                        "clusterIPs": [
                            "10.245.13.125"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-trust-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-trust-app",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-trust-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:47.771801Z",
                "modified": "2025-08-23T17:27:44.701928Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-gateway-service-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-gateway-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.639Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-gateway-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-gateway-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-gateway-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-gateway-service",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-gateway-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-gateway-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-gateway-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-gateway-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-gateway-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-gateway-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-gateway-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-e96a1fe8",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.639Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-gateway-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-gateway-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-gateway-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-gateway-service",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-gateway-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-gateway-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-gateway-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-gateway-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-gateway-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-gateway-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-gateway-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.639Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-gateway-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:56Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-gateway-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-gateway-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-gateway-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-e96a1fe8",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:44Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:44Z"
                            }
                        ],
                        "name": "integra-gateway-service",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765209",
                        "uid": "addc9830-c526-47ae-ac67-e98fec91729b"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-gateway-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-gateway-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-gateway-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-gateway-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-gateway-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-gateway-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-gateway-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:16Z",
                                "lastUpdateTime": "2025-08-23T15:39:16Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:56Z",
                                "lastUpdateTime": "2025-08-23T15:39:16Z",
                                "message": "ReplicaSet \"integra-gateway-service-6b747f9db5\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-gateway-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-gateway-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:17.176214Z",
                "modified": "2025-08-23T17:27:44.870015Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-bridge-service-service",
                "custom": true,
                "id": "integra-apps/integra-bridge-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-bridge-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-bridge-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-bridge-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-bridge-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-bridge-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c1cf5c27",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-bridge-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-bridge-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-bridge-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-bridge-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-bridge-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:07Z",
                        "labels": {
                            "app": "integra-bridge-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-bridge-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-8584ff5d",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:07Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-c1cf5c27",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:34Z"
                            }
                        ],
                        "name": "integra-bridge-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765134",
                        "uid": "44bfc995-5e36-43db-b7fa-8cd73c383fce"
                    },
                    "spec": {
                        "clusterIP": "10.245.121.159",
                        "clusterIPs": [
                            "10.245.121.159"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-bridge-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-bridge-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-bridge-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.173727Z",
                "modified": "2025-08-23T17:27:45.065581Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-blockchain-api-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-blockchain-api",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "242b71ee",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.633Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "main-242b71ee-20250823163529",
                            "integra.io/service-name": "integra-blockchain-api",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                            "environment": "dev"
                        },
                        "name": "integra-blockchain-api",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "242b71ee",
                                    "integra.io/version": "main-242b71ee-20250823163529",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-blockchain-api",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-blockchain-api",
                                    "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-blockchain-api-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-blockchain-api:main-242b71ee-20250823163529",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-blockchain-api",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-d22c7037",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "242b71ee",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.633Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "main-242b71ee-20250823163529",
                                "integra.io/service-name": "integra-blockchain-api",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                                "environment": "dev"
                            },
                            "name": "integra-blockchain-api",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "replicas": 3,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-blockchain-api",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-blockchain-api",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "242b71ee",
                                        "integra.io/version": "main-242b71ee-20250823163529",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-blockchain-api",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-blockchain-api",
                                        "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-blockchain-api-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-blockchain-api:main-242b71ee-20250823163529",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-blockchain-api",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "2",
                                                    "memory": "2Gi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "1Gi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "3",
                            "integra.io/commit-sha": "242b71ee",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.633Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "main-242b71ee-20250823163529",
                            "integra.io/service-name": "integra-blockchain-api",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:09Z",
                        "generation": 4,
                        "labels": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-blockchain-api\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-8b17d55a",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:09Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-blockchain-api\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-4a3cfe44",
                                "operation": "Apply",
                                "time": "2025-08-23T17:12:09Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-blockchain-api\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-d22c7037",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:45Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:template": {
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-blockchain-api\"}": {
                                                        "f:image": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "kubectl-set",
                                "operation": "Update",
                                "time": "2025-08-23T16:54:55Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:45Z"
                            }
                        ],
                        "name": "integra-blockchain-api",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35765214",
                        "uid": "498ff06d-f0d4-4005-99bc-c92ef988254d"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "242b71ee",
                                    "integra.io/version": "main-242b71ee-20250823163529",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-blockchain-api",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-blockchain-api",
                                    "app.kubernetes.io/version": "main-242b71ee-20250823163529",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-blockchain-api-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-blockchain-api:main-242b71ee-20250823163529",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-blockchain-api",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:16:34Z",
                                "lastUpdateTime": "2025-08-23T15:16:34Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:16:09Z",
                                "lastUpdateTime": "2025-08-23T17:13:06Z",
                                "message": "ReplicaSet \"integra-blockchain-api-7f96bc756b\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 4,
                        "readyReplicas": 3,
                        "replicas": 3,
                        "updatedReplicas": 3
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-blockchain-api",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-blockchain-api-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T17:27:45.2382Z",
                "modified": "2025-08-23T17:27:45.2382Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-developer-service-deployment",
                "custom": true,
                "id": "integra-apps/integra-developer-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.612Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-developer-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-developer-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-developer-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-developer-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-developer-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-developer-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-developer-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-developer-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-developer-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-78646402",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.612Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-developer-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-developer-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-developer-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 3,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-developer-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-developer-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-developer-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-developer-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-developer-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-developer-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-developer-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "2",
                                                    "memory": "2Gi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "1Gi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.612Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-developer-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:40Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-developer-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-developer-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-78646402",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:45Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:45Z"
                            }
                        ],
                        "name": "integra-developer-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765219",
                        "uid": "84195284-e036-47ee-b00f-c1a1b56dec0c"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-developer-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-developer-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-developer-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-developer-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-developer-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-developer-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:06Z",
                                "lastUpdateTime": "2025-08-23T15:39:06Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:40Z",
                                "lastUpdateTime": "2025-08-23T15:39:06Z",
                                "message": "ReplicaSet \"integra-developer-service-7fcfc65595\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 3,
                        "replicas": 3,
                        "updatedReplicas": 3
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-developer-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:06.19673Z",
                "modified": "2025-08-23T17:27:45.42786Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-dev-assistant-service-deployment",
                "custom": true,
                "id": "integra-apps/integra-dev-assistant-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.628Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-dev-assistant-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-dev-assistant-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-dev-assistant-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-dev-assistant-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-dev-assistant-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-dev-assistant-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-dev-assistant-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-dev-assistant-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-dev-assistant-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-dev-assistant-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-dev-assistant-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-27797e07",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.628Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-dev-assistant-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-dev-assistant-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-dev-assistant-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-dev-assistant-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-dev-assistant-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-dev-assistant-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-dev-assistant-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-dev-assistant-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-dev-assistant-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-dev-assistant-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-dev-assistant-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "512Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "256Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.628Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-dev-assistant-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:40Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-dev-assistant-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-dev-assistant-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-dev-assistant-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-27797e07",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:45Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:45Z"
                            }
                        ],
                        "name": "integra-dev-assistant-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765222",
                        "uid": "4802c1d3-918e-446e-b09d-c85ae62d1e76"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-dev-assistant-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-dev-assistant-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-dev-assistant-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-dev-assistant-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-dev-assistant-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-dev-assistant-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-dev-assistant-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:01Z",
                                "lastUpdateTime": "2025-08-23T15:39:01Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:40Z",
                                "lastUpdateTime": "2025-08-23T15:39:01Z",
                                "message": "ReplicaSet \"integra-dev-assistant-service-6478d97c87\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-dev-assistant-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-dev-assistant-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:01.025748Z",
                "modified": "2025-08-23T17:27:45.775627Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-developer-app-service",
                "custom": true,
                "id": "integra-apps/integra-developer-app",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-developer-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-developer-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-developer-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-app",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-17d74112",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-developer-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-developer-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-developer-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-app",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:08Z",
                        "labels": {
                            "app": "integra-developer-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-6a69e46a",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:08Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-17d74112",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:35Z"
                            }
                        ],
                        "name": "integra-developer-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765139",
                        "uid": "a76f6ac5-b15f-4d5a-b090-12845a1400e7"
                    },
                    "spec": {
                        "clusterIP": "10.245.168.216",
                        "clusterIPs": [
                            "10.245.168.216"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-developer-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-app",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:47.291489Z",
                "modified": "2025-08-23T17:27:45.78683Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-ai-gateway-service-service",
                "custom": true,
                "id": "integra-apps/integra-ai-gateway-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-ai-gateway-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-gateway-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-ai-gateway-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-ai-gateway-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-gateway-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-3a5d376e",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-ai-gateway-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-gateway-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-ai-gateway-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-ai-gateway-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-gateway-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:06Z",
                        "labels": {
                            "app": "integra-ai-gateway-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-gateway-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-4df2f777",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:06Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-3a5d376e",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:35Z"
                            }
                        ],
                        "name": "integra-ai-gateway-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765143",
                        "uid": "4ee81fc8-e3e4-471f-a38c-2acbf8b6a83d"
                    },
                    "spec": {
                        "clusterIP": "10.245.43.165",
                        "clusterIPs": [
                            "10.245.43.165"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-ai-gateway-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-gateway-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-ai-gateway-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:13.884372Z",
                "modified": "2025-08-23T17:27:45.999847Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-docs-app-deployment",
                "custom": true,
                "id": "integra-apps/integra-docs-app",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.600Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-docs-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-docs-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-docs-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-docs-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-docs-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-docs-app",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-docs-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-docs-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-docs-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-docs-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-docs-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-b9dafff9",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.600Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-docs-app",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-docs-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-docs-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-docs-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-docs-app",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-docs-app",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-docs-app",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-docs-app",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-docs-app-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-docs-app:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-docs-app",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "512Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "256Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.600Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-docs-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:48Z",
                        "generation": 4,
                        "labels": {
                            "app": "integra-docs-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-docs-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-docs-app\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-b9dafff9",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:45Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:45Z"
                            }
                        ],
                        "name": "integra-docs-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765228",
                        "uid": "60aecf8d-cc93-4cbc-accb-78d5d610dddd"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-docs-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-docs-app",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-docs-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-docs-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-docs-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-docs-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-docs-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:04Z",
                                "lastUpdateTime": "2025-08-23T15:39:04Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:48Z",
                                "lastUpdateTime": "2025-08-23T15:39:04Z",
                                "message": "ReplicaSet \"integra-docs-app-76b6bdc996\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 4,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-docs-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-docs-app-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:04.183585Z",
                "modified": "2025-08-23T17:27:46.02255Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-admin-service-deployment",
                "custom": true,
                "id": "integra-apps/integra-admin-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.618Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-admin-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-admin-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-admin-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-admin-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-admin-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-admin-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-admin-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-admin-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-admin-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-4c14856d",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.618Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-admin-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-admin-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-admin-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-admin-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-admin-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-admin-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-admin-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-admin-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-admin-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-admin-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.618Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-admin-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:49Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-admin-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-admin-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-4c14856d",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:46Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:46Z"
                            }
                        ],
                        "name": "integra-admin-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765233",
                        "uid": "5c14e656-63f5-4cb5-8ebf-e1f0adb28402"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-admin-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-admin-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-admin-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-admin-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-admin-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-admin-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:19Z",
                                "lastUpdateTime": "2025-08-23T15:39:19Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:49Z",
                                "lastUpdateTime": "2025-08-23T15:39:19Z",
                                "message": "ReplicaSet \"integra-admin-service-7bc6966bd8\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-admin-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:19.823635Z",
                "modified": "2025-08-23T17:27:46.416152Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-explorer-app-deployment",
                "custom": true,
                "id": "integra-apps/integra-explorer-app",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.594Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-explorer-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-explorer-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-explorer-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-explorer-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-explorer-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-explorer-app",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-explorer-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-explorer-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-explorer-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-explorer-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-explorer-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9095b814",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.594Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-explorer-app",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-explorer-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-explorer-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-explorer-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-explorer-app",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-explorer-app",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-explorer-app",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-explorer-app",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-explorer-app-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-explorer-app:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-explorer-app",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "512Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "256Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.594Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-explorer-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:48Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-explorer-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-explorer-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-explorer-app\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-9095b814",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:46Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:46Z"
                            }
                        ],
                        "name": "integra-explorer-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765242",
                        "uid": "0c5de300-4b0b-4402-9d5a-98dd3b68f80d"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-explorer-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-explorer-app",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-explorer-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-explorer-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-explorer-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-explorer-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-explorer-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "256Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:03Z",
                                "lastUpdateTime": "2025-08-23T15:39:03Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:48Z",
                                "lastUpdateTime": "2025-08-23T15:39:03Z",
                                "message": "ReplicaSet \"integra-explorer-app-5d9b68db96\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-explorer-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-explorer-app-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:03.675418Z",
                "modified": "2025-08-23T17:27:47.100776Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-workflow-service-deployment",
                "custom": true,
                "id": "integra-workflow/integra-workflow-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.698Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-workflow-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-workflow-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-workflow-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-workflow-service",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-workflow-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-workflow-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-workflow-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-workflow-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-workflow-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-workflow-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-workflow-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-52296317",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.698Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-workflow-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-workflow-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-workflow-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-workflow-service",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-workflow-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-workflow-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-workflow-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-workflow-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-workflow-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-workflow-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-workflow-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.698Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-workflow-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:55Z",
                        "generation": 4,
                        "labels": {
                            "app": "integra-workflow-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-workflow-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-workflow-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-52296317",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:47Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:47Z"
                            }
                        ],
                        "name": "integra-workflow-service",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35765247",
                        "uid": "7f10ce05-3f8f-4267-bbee-b3ea9cd828e3"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-workflow-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-workflow-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-workflow-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-workflow-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-workflow-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-workflow-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-workflow-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:16Z",
                                "lastUpdateTime": "2025-08-23T15:39:16Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:55Z",
                                "lastUpdateTime": "2025-08-23T15:39:16Z",
                                "message": "ReplicaSet \"integra-workflow-service-5fd858fd6d\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 4,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-workflow-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-workflow-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:16.633978Z",
                "modified": "2025-08-23T17:27:47.503809Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-bridge-service-deployment",
                "custom": true,
                "id": "integra-apps/integra-bridge-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.606Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-bridge-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-bridge-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-bridge-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-bridge-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-bridge-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-bridge-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-bridge-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-bridge-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-bridge-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-bridge-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-bridge-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2eb414cb",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.606Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-bridge-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-bridge-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-bridge-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-bridge-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 3,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-bridge-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-bridge-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-bridge-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-bridge-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-bridge-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-bridge-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-bridge-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "2",
                                                    "memory": "2Gi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "1Gi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.606Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-bridge-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:40Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-bridge-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-bridge-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-bridge-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-2eb414cb",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:47Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:47Z"
                            }
                        ],
                        "name": "integra-bridge-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765252",
                        "uid": "112b4312-9201-4856-b906-679c3ad1bb3c"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-bridge-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-bridge-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-bridge-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-bridge-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-bridge-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-bridge-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-bridge-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:01Z",
                                "lastUpdateTime": "2025-08-23T15:39:01Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:40Z",
                                "lastUpdateTime": "2025-08-23T15:39:01Z",
                                "message": "ReplicaSet \"integra-bridge-service-64cb97c9db\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 3,
                        "replicas": 3,
                        "updatedReplicas": 3
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-bridge-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-bridge-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:01.523931Z",
                "modified": "2025-08-23T17:27:47.901737Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-admin-app-service",
                "custom": true,
                "id": "integra-apps/integra-admin-app",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-admin-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-admin-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-admin-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-app",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f59c19bd",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-admin-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-admin-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-admin-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-app",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:05Z",
                        "labels": {
                            "app": "integra-admin-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-eb1b1d13",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:05Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-f59c19bd",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:38Z"
                            }
                        ],
                        "name": "integra-admin-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765165",
                        "uid": "80aea4b2-e7b5-4c8a-9a5f-3cb90eea6a9b"
                    },
                    "spec": {
                        "clusterIP": "10.245.34.231",
                        "clusterIPs": [
                            "10.245.34.231"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-admin-app",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-app",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-app",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:47.479375Z",
                "modified": "2025-08-23T17:27:48.230253Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-trust-app-deployment",
                "custom": true,
                "id": "integra-apps/integra-trust-app",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.574Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-trust-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-trust-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-trust-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-trust-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-trust-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-trust-app",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-trust-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-trust-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-trust-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-trust-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-trust-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-6fe1259c",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.574Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-trust-app",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-trust-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-trust-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-trust-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-trust-app",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-trust-app",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-trust-app",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-trust-app",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-trust-app-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-trust-app:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-trust-app",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.574Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-trust-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:52Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-trust-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-trust-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-trust-app\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-6fe1259c",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:48Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:48Z"
                            }
                        ],
                        "name": "integra-trust-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765258",
                        "uid": "43d28396-0483-4024-801d-fdd99b85be90"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-trust-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-trust-app",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-trust-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-trust-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-trust-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-trust-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-trust-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:12Z",
                                "lastUpdateTime": "2025-08-23T15:39:12Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:52Z",
                                "lastUpdateTime": "2025-08-23T15:39:12Z",
                                "message": "ReplicaSet \"integra-trust-app-55b59649c\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-trust-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-trust-app-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.710436Z",
                "modified": "2025-08-23T17:27:48.293383Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-ai-gateway-service-deployment",
                "custom": true,
                "id": "integra-apps/integra-ai-gateway-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.703Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-ai-gateway-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-ai-gateway-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-gateway-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-ai-gateway-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-ai-gateway-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-gateway-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-ai-gateway-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-ai-gateway-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-ai-gateway-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-ai-gateway-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-ai-gateway-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-bf4ff53d",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.703Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-ai-gateway-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-ai-gateway-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-gateway-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-ai-gateway-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-ai-gateway-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-ai-gateway-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-ai-gateway-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-ai-gateway-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-ai-gateway-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-ai-gateway-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-ai-gateway-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.703Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-ai-gateway-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:42Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-ai-gateway-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-gateway-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-ai-gateway-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-bf4ff53d",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:48Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:48Z"
                            }
                        ],
                        "name": "integra-ai-gateway-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765262",
                        "uid": "2efb5adc-9b4b-4ae4-a058-e41d9be48ceb"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-ai-gateway-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-gateway-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-ai-gateway-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-ai-gateway-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-ai-gateway-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-ai-gateway-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-ai-gateway-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:03Z",
                                "lastUpdateTime": "2025-08-23T15:39:03Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:42Z",
                                "lastUpdateTime": "2025-08-23T15:39:03Z",
                                "message": "ReplicaSet \"integra-ai-gateway-service-59b57644d\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-ai-gateway-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-ai-gateway-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:03.905594Z",
                "modified": "2025-08-23T17:27:48.524253Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-developer-app-deployment",
                "custom": true,
                "id": "integra-apps/integra-developer-app",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.581Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-developer-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-developer-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-developer-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-developer-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-app",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-developer-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-developer-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-developer-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-developer-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-developer-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a05d29a5",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.581Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-developer-app",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-developer-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-developer-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-developer-app",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-developer-app",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-developer-app",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-developer-app",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-developer-app-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-developer-app:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-developer-app",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.581Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-developer-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:50Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-developer-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-developer-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-developer-app\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-a05d29a5",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:48Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:48Z"
                            }
                        ],
                        "name": "integra-developer-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765268",
                        "uid": "76369962-ef24-43b8-9e34-7372f3796932"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-developer-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-developer-app",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-developer-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-developer-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-developer-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-developer-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-developer-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:10Z",
                                "lastUpdateTime": "2025-08-23T15:39:10Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:50Z",
                                "lastUpdateTime": "2025-08-23T15:39:10Z",
                                "message": "ReplicaSet \"integra-developer-app-7846bd85d5\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-developer-app-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.19974Z",
                "modified": "2025-08-23T17:27:48.72636Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-admin-app-deployment",
                "custom": true,
                "id": "integra-apps/integra-admin-app",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.588Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-admin-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-admin-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-admin-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-admin-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-app",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-admin-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-admin-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-admin-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-admin-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-admin-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-d5048901",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.588Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-admin-app",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-admin-app",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-app",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-admin-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-admin-app",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-admin-app",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-admin-app",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-admin-app",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-admin-app-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-admin-app:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-admin-app",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.588Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-admin-app",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:51Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-admin-app",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-admin-app",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-admin-app\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-d5048901",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:48Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:48Z"
                            }
                        ],
                        "name": "integra-admin-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765273",
                        "uid": "641200df-8fa6-4ea1-b317-e9e9bac6bc3a"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-admin-app",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-admin-app",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-admin-app",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-admin-app",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-admin-app-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-admin-app:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-admin-app",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:06Z",
                                "lastUpdateTime": "2025-08-23T15:39:06Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:51Z",
                                "lastUpdateTime": "2025-08-23T15:39:06Z",
                                "message": "ReplicaSet \"integra-admin-app-bcb6665fb\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-admin-app-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:06.746071Z",
                "modified": "2025-08-23T17:27:49.08462Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-temporal-orchestrator-service-deployment",
                "custom": true,
                "id": "integra-workflow/integra-temporal-orchestrator-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.681Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-temporal-orchestrator-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-temporal-orchestrator-service",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-temporal-orchestrator-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-temporal-orchestrator-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-temporal-orchestrator-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-temporal-orchestrator-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-temporal-orchestrator-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c9b2b5c9",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.681Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-temporal-orchestrator-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-temporal-orchestrator-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-temporal-orchestrator-service",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-temporal-orchestrator-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-temporal-orchestrator-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-temporal-orchestrator-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-temporal-orchestrator-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-temporal-orchestrator-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "2",
                                                    "memory": "2Gi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "1Gi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.681Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-temporal-orchestrator-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:55Z",
                        "generation": 4,
                        "labels": {
                            "app": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-temporal-orchestrator-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-c9b2b5c9",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:49Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:49Z"
                            }
                        ],
                        "name": "integra-temporal-orchestrator-service",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35765277",
                        "uid": "af4a261f-cf58-4ce3-ac23-bdbc6b9b69af"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-temporal-orchestrator-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-temporal-orchestrator-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-temporal-orchestrator-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-temporal-orchestrator-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-temporal-orchestrator-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:11Z",
                                "lastUpdateTime": "2025-08-23T15:39:11Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:55Z",
                                "lastUpdateTime": "2025-08-23T15:39:11Z",
                                "message": "ReplicaSet \"integra-temporal-orchestrator-service-d944689b\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 4,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-orchestrator-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-temporal-orchestrator-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.209703Z",
                "modified": "2025-08-23T17:27:49.545214Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-temporal-messaging-service-deployment",
                "custom": true,
                "id": "integra-workflow/integra-temporal-messaging-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.687Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-temporal-messaging-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-temporal-messaging-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-messaging-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-temporal-messaging-service",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-temporal-messaging-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-temporal-messaging-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-temporal-messaging-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-temporal-messaging-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-temporal-messaging-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9544b8ba",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.687Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-temporal-messaging-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-temporal-messaging-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-temporal-messaging-service",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-temporal-messaging-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-temporal-messaging-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-temporal-messaging-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-temporal-messaging-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-temporal-messaging-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.687Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-temporal-messaging-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T16:03:39Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-temporal-messaging-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-messaging-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-temporal-messaging-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-603e86b8",
                                "operation": "Apply",
                                "time": "2025-08-23T16:03:39Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-temporal-messaging-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-9544b8ba",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:49Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:49Z"
                            }
                        ],
                        "name": "integra-temporal-messaging-service",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35765280",
                        "uid": "9d572440-6dcd-4f66-8828-5105d48cd9d0"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-temporal-messaging-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-temporal-messaging-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-temporal-messaging-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-temporal-messaging-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-temporal-messaging-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T16:03:54Z",
                                "lastUpdateTime": "2025-08-23T16:03:54Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T16:03:39Z",
                                "lastUpdateTime": "2025-08-23T16:03:54Z",
                                "message": "ReplicaSet \"integra-temporal-messaging-service-588f6b8998\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-messaging-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-temporal-messaging-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T17:27:49.834432Z",
                "modified": "2025-08-23T17:27:49.834432Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apps/v1:Deployment::integra-ai-help-service-deployment",
                "custom": true,
                "id": "integra-apps/integra-ai-help-service",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.623Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-ai-help-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-ai-help-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-help-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-ai-help-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-ai-help-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-help-service",
                                "environment": "dev"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-ai-help-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-ai-help-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-ai-help-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-ai-help-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-ai-help-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ],
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-49c664a9",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T17:27:24.623Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/image-tag": "latest",
                                "integra.io/service-name": "integra-ai-help-service",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-ai-help-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-help-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-ai-help-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-ai-help-service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-ai-help-service",
                                    "environment": "dev"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-ai-help-service",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-ai-help-service",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-ai-help-service-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-ai-help-service:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-ai-help-service",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1",
                                                    "memory": "1Gi"
                                                },
                                                "requests": {
                                                    "cpu": "250m",
                                                    "memory": "512Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T17:27:24.623Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/image-tag": "latest",
                            "integra.io/service-name": "integra-ai-help-service",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:38:41Z",
                        "generation": 3,
                        "labels": {
                            "app": "integra-ai-help-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-help-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/image-tag": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-ai-help-service\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-49c664a9",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:50Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T17:27:50Z"
                            }
                        ],
                        "name": "integra-ai-help-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765287",
                        "uid": "49645b62-45ec-475c-9d40-5ce6b5c39ceb"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-ai-help-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-help-service",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-ai-help-service",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-ai-help-service",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-ai-help-service-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-ai-help-service:latest",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-ai-help-service",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "250m",
                                                "memory": "512Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:39:01Z",
                                "lastUpdateTime": "2025-08-23T15:39:01Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:38:41Z",
                                "lastUpdateTime": "2025-08-23T15:39:01Z",
                                "message": "ReplicaSet \"integra-ai-help-service-745cf4d98f\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 3,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-ai-help-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:secrets.infisical.com/v1alpha1:InfisicalSecret::integra-ai-help-service-infisical"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:01.93366Z",
                "modified": "2025-08-23T17:27:50.309888Z",
                "sourcePosition": "project:///components/IntegraService.ts#91,23"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-trust-app-route",
                "custom": true,
                "id": "integra-apps/integra-trust-app",
                "type": "kubernetes:apisix.apache.org/v2:ApisixRoute",
                "inputs": {
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "name": "integra-trust-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-trust-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-trust-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-dd850a8f",
                    "__initialApiVersion": "apisix.apache.org/v2",
                    "__inputs": {
                        "apiVersion": "apisix.apache.org/v2",
                        "kind": "ApisixRoute",
                        "metadata": {
                            "name": "integra-trust-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "http": [
                                {
                                    "backends": [
                                        {
                                            "serviceName": "integra-trust-app",
                                            "servicePort": 3000
                                        }
                                    ],
                                    "match": {
                                        "hosts": [
                                            "trustwithintegra.com"
                                        ],
                                        "paths": [
                                            "/*"
                                        ]
                                    },
                                    "name": "integra-trust-app",
                                    "plugins": [
                                        {
                                            "config": {
                                                "allow_credentials": true,
                                                "allow_headers": "*",
                                                "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                                "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                                "expose_headers": "*",
                                                "max_age": 3600
                                            },
                                            "enable": true,
                                            "name": "cors"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T13:32:27Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:http": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-dd850a8f",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:27Z"
                            },
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "apisix-ingress-controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:27Z"
                            }
                        ],
                        "name": "integra-trust-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35676973",
                        "uid": "d11b6765-f23b-4e2a-8a33-a2a0bc668bf1"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-trust-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-trust-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:27Z",
                                "message": "",
                                "observedGeneration": 1,
                                "reason": "Accepted",
                                "status": "True",
                                "type": "Accepted"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-trust-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-trust-app-service"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:27.081211Z",
                "modified": "2025-08-23T13:32:27.081211Z",
                "sourcePosition": "project:///components/IntegraService.ts#211,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-temporal-orchestrator-service-service",
                "custom": true,
                "id": "integra-workflow/integra-temporal-orchestrator-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-temporal-orchestrator-service",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-29dd233e",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-temporal-orchestrator-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-temporal-orchestrator-service",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-temporal-orchestrator-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:06Z",
                        "labels": {
                            "app": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-ab10c8c9",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:06Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-29dd233e",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:43Z"
                            }
                        ],
                        "name": "integra-temporal-orchestrator-service",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35765197",
                        "uid": "eb604b0d-3c0f-4db1-ae78-02f3c79db840"
                    },
                    "spec": {
                        "clusterIP": "10.245.132.193",
                        "clusterIPs": [
                            "10.245.132.193"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-temporal-orchestrator-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-orchestrator-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-orchestrator-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:48.811295Z",
                "modified": "2025-08-23T17:27:53.962198Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-temporal-messaging-service-service",
                "custom": true,
                "id": "integra-workflow/integra-temporal-messaging-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-temporal-messaging-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-messaging-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-temporal-messaging-service",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-temporal-messaging-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-messaging-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-56e7a12b",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-temporal-messaging-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-temporal-messaging-service",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-temporal-messaging-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-temporal-messaging-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:06Z",
                        "labels": {
                            "app": "integra-temporal-messaging-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-messaging-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-add529b9",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:06Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-56e7a12b",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:44Z"
                            }
                        ],
                        "name": "integra-temporal-messaging-service",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35765202",
                        "uid": "0bc798bc-551d-4763-aae1-b669246f8a6b"
                    },
                    "spec": {
                        "clusterIP": "10.245.39.161",
                        "clusterIPs": [
                            "10.245.39.161"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-temporal-messaging-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-temporal-messaging-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-temporal-messaging-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:38:50.355464Z",
                "modified": "2025-08-23T17:27:54.283112Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-ai-help-service-service",
                "custom": true,
                "id": "integra-apps/integra-ai-help-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "labels": {
                            "app": "integra-ai-help-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-help-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-ai-help-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-ai-help-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-help-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-ac9b3558",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest",
                                "pulumi.com/patchForce": "true"
                            },
                            "labels": {
                                "app": "integra-ai-help-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-help-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-ai-help-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-ai-help-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-ai-help-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest",
                            "pulumi.com/patchForce": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:05Z",
                        "labels": {
                            "app": "integra-ai-help-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-help-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-ff6ad6f8",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:05Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {},
                                            "f:pulumi.com/patchForce": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-ac9b3558",
                                "operation": "Apply",
                                "time": "2025-08-23T17:27:44Z"
                            }
                        ],
                        "name": "integra-ai-help-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35765203",
                        "uid": "3cbf2407-0aa6-4613-9ee6-605d6a9aaeb7"
                    },
                    "spec": {
                        "clusterIP": "10.245.150.230",
                        "clusterIPs": [
                            "10.245.150.230"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-ai-help-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-ai-help-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-ai-help-service",
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T15:39:12.198468Z",
                "modified": "2025-08-23T17:27:54.651923Z",
                "sourcePosition": "project:///components/IntegraService.ts#181,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-bridge-service-route",
                "custom": true,
                "id": "integra-apps/integra-bridge-service",
                "type": "kubernetes:apisix.apache.org/v2:ApisixRoute",
                "inputs": {
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "name": "integra-bridge-service",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-bridge-service",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "api.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/v1/*",
                                        "/admin/*",
                                        "/oauth2/*"
                                    ]
                                },
                                "name": "integra-bridge-service",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-c5483bbd",
                    "__initialApiVersion": "apisix.apache.org/v2",
                    "__inputs": {
                        "apiVersion": "apisix.apache.org/v2",
                        "kind": "ApisixRoute",
                        "metadata": {
                            "name": "integra-bridge-service",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "http": [
                                {
                                    "backends": [
                                        {
                                            "serviceName": "integra-bridge-service",
                                            "servicePort": 3000
                                        }
                                    ],
                                    "match": {
                                        "hosts": [
                                            "api.trustwithintegra.com"
                                        ],
                                        "paths": [
                                            "/v1/*",
                                            "/admin/*",
                                            "/oauth2/*"
                                        ]
                                    },
                                    "name": "integra-bridge-service",
                                    "plugins": [
                                        {
                                            "config": {
                                                "allow_credentials": true,
                                                "allow_headers": "*",
                                                "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                                "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                                "expose_headers": "*",
                                                "max_age": 3600
                                            },
                                            "enable": true,
                                            "name": "cors"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T13:32:25Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:http": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-c5483bbd",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:25Z"
                            },
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "apisix-ingress-controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:25Z"
                            }
                        ],
                        "name": "integra-bridge-service",
                        "namespace": "integra-apps",
                        "resourceVersion": "35676915",
                        "uid": "5e13e4e4-f486-456e-ba9b-36e179b234a6"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-bridge-service",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "api.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/v1/*",
                                        "/admin/*",
                                        "/oauth2/*"
                                    ]
                                },
                                "name": "integra-bridge-service",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:25Z",
                                "message": "",
                                "observedGeneration": 1,
                                "reason": "Accepted",
                                "status": "True",
                                "type": "Accepted"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-bridge-service",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-bridge-service-service"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:26.052677Z",
                "modified": "2025-08-23T13:32:26.052677Z",
                "sourcePosition": "project:///components/IntegraService.ts#211,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-developer-app-route",
                "custom": true,
                "id": "integra-apps/integra-developer-app",
                "type": "kubernetes:apisix.apache.org/v2:ApisixRoute",
                "inputs": {
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "name": "integra-developer-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-developer-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "developer.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-developer-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-19a93792",
                    "__initialApiVersion": "apisix.apache.org/v2",
                    "__inputs": {
                        "apiVersion": "apisix.apache.org/v2",
                        "kind": "ApisixRoute",
                        "metadata": {
                            "name": "integra-developer-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "http": [
                                {
                                    "backends": [
                                        {
                                            "serviceName": "integra-developer-app",
                                            "servicePort": 3000
                                        }
                                    ],
                                    "match": {
                                        "hosts": [
                                            "developer.trustwithintegra.com"
                                        ],
                                        "paths": [
                                            "/*"
                                        ]
                                    },
                                    "name": "integra-developer-app",
                                    "plugins": [
                                        {
                                            "config": {
                                                "allow_credentials": true,
                                                "allow_headers": "*",
                                                "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                                "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                                "expose_headers": "*",
                                                "max_age": 3600
                                            },
                                            "enable": true,
                                            "name": "cors"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T13:32:39Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:http": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-19a93792",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:39Z"
                            },
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "apisix-ingress-controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:39Z"
                            }
                        ],
                        "name": "integra-developer-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35677522",
                        "uid": "300ade72-b62c-4174-99a3-1abac7298389"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-developer-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "developer.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-developer-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:39Z",
                                "message": "",
                                "observedGeneration": 1,
                                "reason": "Accepted",
                                "status": "True",
                                "type": "Accepted"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-developer-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-developer-app-service"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:39.43135Z",
                "modified": "2025-08-23T13:32:39.43135Z",
                "sourcePosition": "project:///components/IntegraService.ts#211,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:apisix.apache.org/v2:ApisixRoute::integra-admin-app-route",
                "custom": true,
                "id": "integra-apps/integra-admin-app",
                "type": "kubernetes:apisix.apache.org/v2:ApisixRoute",
                "inputs": {
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "name": "integra-admin-app",
                        "namespace": "integra-apps"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-admin-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "admin.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-admin-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-14314c79",
                    "__initialApiVersion": "apisix.apache.org/v2",
                    "__inputs": {
                        "apiVersion": "apisix.apache.org/v2",
                        "kind": "ApisixRoute",
                        "metadata": {
                            "name": "integra-admin-app",
                            "namespace": "integra-apps"
                        },
                        "spec": {
                            "http": [
                                {
                                    "backends": [
                                        {
                                            "serviceName": "integra-admin-app",
                                            "servicePort": 3000
                                        }
                                    ],
                                    "match": {
                                        "hosts": [
                                            "admin.trustwithintegra.com"
                                        ],
                                        "paths": [
                                            "/*"
                                        ]
                                    },
                                    "name": "integra-admin-app",
                                    "plugins": [
                                        {
                                            "config": {
                                                "allow_credentials": true,
                                                "allow_headers": "*",
                                                "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                                "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                                "expose_headers": "*",
                                                "max_age": 3600
                                            },
                                            "enable": true,
                                            "name": "cors"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "apiVersion": "apisix.apache.org/v2",
                    "kind": "ApisixRoute",
                    "metadata": {
                        "creationTimestamp": "2025-08-23T13:32:35Z",
                        "generation": 1,
                        "managedFields": [
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:http": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-14314c79",
                                "operation": "Apply",
                                "time": "2025-08-23T13:32:35Z"
                            },
                            {
                                "apiVersion": "apisix.apache.org/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {}
                                    }
                                },
                                "manager": "apisix-ingress-controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T13:32:35Z"
                            }
                        ],
                        "name": "integra-admin-app",
                        "namespace": "integra-apps",
                        "resourceVersion": "35677368",
                        "uid": "18a2dc9f-0f21-4fe4-9a9e-d5e9a9d30871"
                    },
                    "spec": {
                        "http": [
                            {
                                "backends": [
                                    {
                                        "serviceName": "integra-admin-app",
                                        "servicePort": 3000
                                    }
                                ],
                                "match": {
                                    "hosts": [
                                        "admin.trustwithintegra.com"
                                    ],
                                    "paths": [
                                        "/*"
                                    ]
                                },
                                "name": "integra-admin-app",
                                "plugins": [
                                    {
                                        "config": {
                                            "allow_credentials": true,
                                            "allow_headers": "*",
                                            "allow_methods": "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH",
                                            "allow_origins": "http://localhost:3000,https://*.trustwithintegra.com",
                                            "expose_headers": "*",
                                            "max_age": 3600
                                        },
                                        "enable": true,
                                        "name": "cors"
                                    }
                                ]
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T13:32:35Z",
                                "message": "",
                                "observedGeneration": 1,
                                "reason": "Accepted",
                                "status": "True",
                                "type": "Accepted"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-admin-app",
                "dependencies": [
                    "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-admin-app-service"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "propertyDependencies": {
                    "apiVersion": [],
                    "kind": [],
                    "metadata": [],
                    "spec": []
                },
                "created": "2025-08-23T13:32:35.288183Z",
                "modified": "2025-08-23T13:32:35.288183Z",
                "sourcePosition": "project:///components/IntegraService.ts#211,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService$kubernetes:core/v1:Service::integra-messaging-service-service",
                "custom": true,
                "id": "integra-workflow/integra-messaging-service",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest"
                        },
                        "labels": {
                            "app": "integra-messaging-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-messaging-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-messaging-service",
                        "namespace": "integra-workflow"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-messaging-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-messaging-service",
                            "environment": "dev"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-a9b837dc",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "integra.io/service-version": "latest"
                            },
                            "labels": {
                                "app": "integra-messaging-service",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-messaging-service",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-messaging-service",
                            "namespace": "integra-workflow"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "app": "integra-messaging-service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-messaging-service",
                                "environment": "dev"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "integra.io/service-version": "latest"
                        },
                        "creationTimestamp": "2025-08-23T15:16:07Z",
                        "labels": {
                            "app": "integra-messaging-service",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-messaging-service",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-9b10c664",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-a765e17e",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-a9b837dc",
                                "operation": "Apply"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/service-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            "k:{\"port\":3000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-kubernetes-3a5de542",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:07Z"
                            }
                        ],
                        "name": "integra-messaging-service",
                        "namespace": "integra-workflow",
                        "resourceVersion": "35738219",
                        "uid": "5f064a6d-1013-4c55-909b-f6a193856aac"
                    },
                    "spec": {
                        "clusterIP": "10.245.140.19",
                        "clusterIPs": [
                            "10.245.140.19"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "app": "integra-messaging-service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-messaging-service",
                            "environment": "dev"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::kubernetes:core/v1:Namespace$integra:service:IntegraService::integra-messaging-service",
                "initErrors": [
                    "Resource 'integra-messaging-service' was created but failed to initialize",
                    "Service does not target any Pods. Selected Pods may not be ready, or field '.spec.selector' may not match labels on any Pods"
                ],
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "created": "2025-08-23T16:23:44.91010302Z",
                "modified": "2025-08-23T16:23:44.91010302Z",
                "sourcePosition": "project:///components/IntegraService.ts#180,20"
            },
            {
                "urn": "urn:pulumi:dev::integra-infrastructure::kubernetes:apps/v1:Deployment::integra-blockchain-api-deployment",
                "custom": true,
                "id": "integra-blockchain/integra-blockchain-api",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T15:15:57.833Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/service-name": "integra-blockchain-api",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true"
                        },
                        "labels": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "name": "integra-blockchain-api",
                        "namespace": "integra-blockchain"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-blockchain-api",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-blockchain-api",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-blockchain-api-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-blockchain-api:main-242b71ee-20250823163529",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-blockchain-api",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-24e6005f",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "integra.io/commit-sha": "unknown",
                                "integra.io/deployed-at": "2025-08-23T15:15:57.833Z",
                                "integra.io/deployed-by": "pulumi-automation",
                                "integra.io/service-name": "integra-blockchain-api",
                                "linkerd.io/inject": "enabled",
                                "pulumi.com/autoUpdate": "true"
                            },
                            "labels": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/component": "service",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "app.kubernetes.io/version": "latest",
                                "environment": "dev"
                            },
                            "name": "integra-blockchain-api",
                            "namespace": "integra-blockchain"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 3,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "app": "integra-blockchain-api",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-blockchain-api",
                                    "environment": "dev"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "integra.io/commit": "unknown",
                                        "integra.io/version": "latest",
                                        "linkerd.io/inject": "enabled",
                                        "prometheus.io/path": "/metrics",
                                        "prometheus.io/port": "3000",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "integra-blockchain-api",
                                        "app.kubernetes.io/component": "service",
                                        "app.kubernetes.io/environment": "dev",
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "app.kubernetes.io/name": "integra-blockchain-api",
                                        "app.kubernetes.io/version": "latest",
                                        "environment": "dev"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [
                                                {
                                                    "secretRef": {
                                                        "name": "integra-blockchain-api-env",
                                                        "optional": true
                                                    }
                                                }
                                            ],
                                            "image": "registry.digitalocean.com/integra-container-registry/integra-blockchain-api:main-242b71ee-20250823163529",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http",
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "integra-blockchain-api",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http",
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health",
                                                    "port": "http",
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 5,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "2",
                                                    "memory": "2Gi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "1Gi"
                                                }
                                            },
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "imagePullSecrets": [
                                        {
                                            "name": "integra-registry"
                                        }
                                    ],
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "2",
                            "integra.io/commit-sha": "unknown",
                            "integra.io/deployed-at": "2025-08-23T15:15:57.833Z",
                            "integra.io/deployed-by": "pulumi-automation",
                            "integra.io/service-name": "integra-blockchain-api",
                            "linkerd.io/inject": "enabled",
                            "pulumi.com/autoUpdate": "true"
                        },
                        "creationTimestamp": "2025-08-23T15:16:09Z",
                        "generation": 2,
                        "labels": {
                            "app": "integra-blockchain-api",
                            "app.kubernetes.io/component": "service",
                            "app.kubernetes.io/environment": "dev",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "integra-blockchain-api",
                            "app.kubernetes.io/version": "latest",
                            "environment": "dev"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:integra.io/commit-sha": {},
                                            "f:integra.io/deployed-at": {},
                                            "f:integra.io/deployed-by": {},
                                            "f:integra.io/service-name": {},
                                            "f:linkerd.io/inject": {},
                                            "f:pulumi.com/autoUpdate": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/environment": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:environment": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:replicas": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:integra.io/commit": {},
                                                    "f:integra.io/version": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:app": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/environment": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:environment": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-blockchain-api\"}": {
                                                        ".": {},
                                                        "f:envFrom": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            "k:{\"containerPort\":3000,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                "f:path": {},
                                                                "f:port": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            "f:limits": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:imagePullSecrets": {
                                                    "k:{\"name\":\"integra-registry\"}": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-kubernetes-8b17d55a",
                                "operation": "Apply",
                                "time": "2025-08-23T15:16:09Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:template": {
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"integra-blockchain-api\"}": {
                                                        "f:image": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "kubectl-set",
                                "operation": "Update",
                                "time": "2025-08-23T16:54:55Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2025-08-23T16:55:56Z"
                            }
                        ],
                        "name": "integra-blockchain-api",
                        "namespace": "integra-blockchain",
                        "resourceVersion": "35753551",
                        "uid": "498ff06d-f0d4-4005-99bc-c92ef988254d"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "integra-blockchain-api",
                                "app.kubernetes.io/environment": "dev",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "integra-blockchain-api",
                                "environment": "dev"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "integra.io/commit": "unknown",
                                    "integra.io/version": "latest",
                                    "linkerd.io/inject": "enabled",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "3000",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "integra-blockchain-api",
                                    "app.kubernetes.io/component": "service",
                                    "app.kubernetes.io/environment": "dev",
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "app.kubernetes.io/name": "integra-blockchain-api",
                                    "app.kubernetes.io/version": "latest",
                                    "environment": "dev"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "envFrom": [
                                            {
                                                "secretRef": {
                                                    "name": "integra-blockchain-api-env",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "registry.digitalocean.com/integra-container-registry/integra-blockchain-api:main-242b71ee-20250823163529",
                                        "imagePullPolicy": "Always",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "integra-blockchain-api",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "2Gi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "imagePullSecrets": [
                                    {
                                        "name": "integra-registry"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "lastTransitionTime": "2025-08-23T15:16:34Z",
                                "lastUpdateTime": "2025-08-23T15:16:34Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2025-08-23T15:16:09Z",
                                "lastUpdateTime": "2025-08-23T16:55:56Z",
                                "message": "ReplicaSet \"integra-blockchain-api-57558bc76\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 3,
                        "replicas": 3,
                        "updatedReplicas": 3
                    }
                },
                "parent": "urn:pulumi:dev::integra-infrastructure::pulumi:pulumi:Stack::integra-infrastructure-dev",
                "protect": true,
                "provider": "urn:pulumi:dev::integra-infrastructure::pulumi:providers:kubernetes::default_4_23_0::ba805d94-bf09-4796-aa71-0c3a7689b01c",
                "created": "2025-08-23T17:10:08.864552Z",
                "modified": "2025-08-23T17:10:08.864552Z"
            }
        ]
    }
}
