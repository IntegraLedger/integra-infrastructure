"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpacesBucketCorsConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ### Create a Key in a Spaces Bucket
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const foobar = new digitalocean.SpacesBucket("foobar", {
 *     name: "foobar",
 *     region: digitalocean.Region.NYC3,
 * });
 * const test = new digitalocean.SpacesBucketCorsConfiguration("test", {
 *     bucket: foobar.id,
 *     region: "nyc3",
 *     corsRules: [{
 *         allowedHeaders: ["*"],
 *         allowedMethods: [
 *             "PUT",
 *             "POST",
 *         ],
 *         allowedOrigins: ["https://s3-website-test.hashicorp.com"],
 *         exposeHeaders: ["ETag"],
 *         maxAgeSeconds: 3000,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Bucket policies can be imported using the `region` and `bucket` attributes (delimited by a comma):
 *
 * ```sh
 * $ pulumi import digitalocean:index/spacesBucketCorsConfiguration:SpacesBucketCorsConfiguration foobar `region`,`bucket`
 * ```
 */
class SpacesBucketCorsConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing SpacesBucketCorsConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SpacesBucketCorsConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SpacesBucketCorsConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpacesBucketCorsConfiguration.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["corsRules"] = state ? state.corsRules : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.corsRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'corsRules'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["corsRules"] = args ? args.corsRules : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpacesBucketCorsConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}
exports.SpacesBucketCorsConfiguration = SpacesBucketCorsConfiguration;
/** @internal */
SpacesBucketCorsConfiguration.__pulumiType = 'digitalocean:index/spacesBucketCorsConfiguration:SpacesBucketCorsConfiguration';
//# sourceMappingURL=spacesBucketCorsConfiguration.js.map