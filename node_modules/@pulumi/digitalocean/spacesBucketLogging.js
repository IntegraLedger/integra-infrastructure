"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpacesBucketLogging = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const assets = new digitalocean.SpacesBucket("assets", {
 *     name: "assets",
 *     region: digitalocean.Region.NYC3,
 * });
 * const logs = new digitalocean.SpacesBucket("logs", {
 *     name: "logs",
 *     region: digitalocean.Region.NYC3,
 * });
 * const example = new digitalocean.SpacesBucketLogging("example", {
 *     region: "%s",
 *     bucket: assets.id,
 *     targetBucket: logs.id,
 *     targetPrefix: "access-logs/",
 * });
 * ```
 *
 * ## Import
 *
 * Spaces bucket logging can be imported using the `region` and `bucket` attributes (delimited by a comma):
 *
 * ```sh
 * $ pulumi import digitalocean:index/spacesBucketLogging:SpacesBucketLogging example `region`,`bucket`
 * ```
 */
class SpacesBucketLogging extends pulumi.CustomResource {
    /**
     * Get an existing SpacesBucketLogging resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SpacesBucketLogging(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SpacesBucketLogging.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpacesBucketLogging.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["targetBucket"] = state ? state.targetBucket : undefined;
            resourceInputs["targetPrefix"] = state ? state.targetPrefix : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.targetBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetBucket'");
            }
            if ((!args || args.targetPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetPrefix'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["targetBucket"] = args ? args.targetBucket : undefined;
            resourceInputs["targetPrefix"] = args ? args.targetPrefix : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpacesBucketLogging.__pulumiType, name, resourceInputs, opts);
    }
}
exports.SpacesBucketLogging = SpacesBucketLogging;
/** @internal */
SpacesBucketLogging.__pulumiType = 'digitalocean:index/spacesBucketLogging:SpacesBucketLogging';
//# sourceMappingURL=spacesBucketLogging.js.map