import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
export declare function getGenaiKnowledgeBase(args?: GetGenaiKnowledgeBaseArgs, opts?: pulumi.InvokeOptions): Promise<GetGenaiKnowledgeBaseResult>;
/**
 * A collection of arguments for invoking getGenaiKnowledgeBase.
 */
export interface GetGenaiKnowledgeBaseArgs {
    addedToAgentAt?: string;
    databaseId?: string;
    embeddingModelUuid?: string;
    isPublic?: boolean;
    lastIndexingJobs?: inputs.GetGenaiKnowledgeBaseLastIndexingJob[];
    name?: string;
    projectId?: string;
    region?: string;
    tags?: string[];
    userId?: string;
    uuid?: string;
}
/**
 * A collection of values returned by getGenaiKnowledgeBase.
 */
export interface GetGenaiKnowledgeBaseResult {
    readonly addedToAgentAt?: string;
    readonly createdAt: string;
    readonly databaseId?: string;
    readonly embeddingModelUuid?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isPublic?: boolean;
    readonly lastIndexingJobs?: outputs.GetGenaiKnowledgeBaseLastIndexingJob[];
    readonly name?: string;
    readonly projectId?: string;
    readonly region?: string;
    readonly tags?: string[];
    readonly updatedAt: string;
    readonly userId?: string;
    readonly uuid?: string;
}
export declare function getGenaiKnowledgeBaseOutput(args?: GetGenaiKnowledgeBaseOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGenaiKnowledgeBaseResult>;
/**
 * A collection of arguments for invoking getGenaiKnowledgeBase.
 */
export interface GetGenaiKnowledgeBaseOutputArgs {
    addedToAgentAt?: pulumi.Input<string>;
    databaseId?: pulumi.Input<string>;
    embeddingModelUuid?: pulumi.Input<string>;
    isPublic?: pulumi.Input<boolean>;
    lastIndexingJobs?: pulumi.Input<pulumi.Input<inputs.GetGenaiKnowledgeBaseLastIndexingJobArgs>[]>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    userId?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
