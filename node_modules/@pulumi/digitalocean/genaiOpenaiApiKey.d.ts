import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
export declare class GenaiOpenaiApiKey extends pulumi.CustomResource {
    /**
     * Get an existing GenaiOpenaiApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GenaiOpenaiApiKeyState, opts?: pulumi.CustomResourceOptions): GenaiOpenaiApiKey;
    /**
     * Returns true if the given object is an instance of GenaiOpenaiApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GenaiOpenaiApiKey;
    /**
     * The OpenAI API key.
     */
    readonly apiKey: pulumi.Output<string>;
    /**
     * When the API key was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Who created the API key.
     */
    readonly createdBy: pulumi.Output<string>;
    /**
     * When the API key was deleted.
     */
    readonly deletedAt: pulumi.Output<string>;
    /**
     * Models associated with the OpenAI API key
     */
    readonly models: pulumi.Output<outputs.GenaiOpenaiApiKeyModel[]>;
    /**
     * A name for the API key.
     */
    readonly name: pulumi.Output<string>;
    /**
     * When the API key was last updated.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * The UUID of the API key.
     */
    readonly uuid: pulumi.Output<string>;
    /**
     * Create a GenaiOpenaiApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GenaiOpenaiApiKeyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GenaiOpenaiApiKey resources.
 */
export interface GenaiOpenaiApiKeyState {
    /**
     * The OpenAI API key.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * When the API key was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Who created the API key.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * When the API key was deleted.
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * Models associated with the OpenAI API key
     */
    models?: pulumi.Input<pulumi.Input<inputs.GenaiOpenaiApiKeyModel>[]>;
    /**
     * A name for the API key.
     */
    name?: pulumi.Input<string>;
    /**
     * When the API key was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The UUID of the API key.
     */
    uuid?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a GenaiOpenaiApiKey resource.
 */
export interface GenaiOpenaiApiKeyArgs {
    /**
     * The OpenAI API key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * Models associated with the OpenAI API key
     */
    models?: pulumi.Input<pulumi.Input<inputs.GenaiOpenaiApiKeyModel>[]>;
    /**
     * A name for the API key.
     */
    name?: pulumi.Input<string>;
}
