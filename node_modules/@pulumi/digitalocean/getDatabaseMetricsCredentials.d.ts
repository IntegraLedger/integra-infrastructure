import * as pulumi from "@pulumi/pulumi";
/**
 * Provides access to the metrics credentials for DigitalOcean database clusters. These credentials are account-wide and can be used to access metrics for any database cluster in the account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const example = digitalocean.getDatabaseMetricsCredentials({});
 * export const metricsUsername = example.then(example => example.username);
 * export const metricsPassword = example.then(example => example.password);
 * ```
 */
export declare function getDatabaseMetricsCredentials(opts?: pulumi.InvokeOptions): Promise<GetDatabaseMetricsCredentialsResult>;
/**
 * A collection of values returned by getDatabaseMetricsCredentials.
 */
export interface GetDatabaseMetricsCredentialsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The password for accessing database metrics. This is marked as sensitive.
     */
    readonly password: string;
    /**
     * The username for accessing database metrics.
     */
    readonly username: string;
}
/**
 * Provides access to the metrics credentials for DigitalOcean database clusters. These credentials are account-wide and can be used to access metrics for any database cluster in the account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const example = digitalocean.getDatabaseMetricsCredentials({});
 * export const metricsUsername = example.then(example => example.username);
 * export const metricsPassword = example.then(example => example.password);
 * ```
 */
export declare function getDatabaseMetricsCredentialsOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatabaseMetricsCredentialsResult>;
