import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a DigitalOcean reserved IPv6 to represent a publicly-accessible static IPv6 addresses that can be mapped to one of your Droplets.
 *
 * > **NOTE:** Reserved IPv6s can be assigned to a Droplet using
 * `digitalocean.ReservedIpv6Assignment` resource only.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const foobar = new digitalocean.ReservedIpv6("foobar", {regionSlug: "nyc3"});
 * ```
 *
 * ## Import
 *
 * Reserved IPv6s can be imported using the `ip`, e.g.
 *
 * ```sh
 * $ pulumi import digitalocean:index/reservedIpv6:ReservedIpv6 myip
 * ```
 *
 * 2409:40d0:fa:27dd:9b24:7074:7b85:eee6
 */
export declare class ReservedIpv6 extends pulumi.CustomResource {
    /**
     * Get an existing ReservedIpv6 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReservedIpv6State, opts?: pulumi.CustomResourceOptions): ReservedIpv6;
    /**
     * Returns true if the given object is an instance of ReservedIpv6.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ReservedIpv6;
    readonly dropletId: pulumi.Output<number>;
    readonly ip: pulumi.Output<string>;
    /**
     * The region that the reserved IPv6 needs to be reserved to.
     */
    readonly regionSlug: pulumi.Output<string>;
    /**
     * the uniform resource name for the reserved ipv6
     */
    readonly reservedIpv6Urn: pulumi.Output<string>;
    /**
     * Create a ReservedIpv6 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReservedIpv6Args, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ReservedIpv6 resources.
 */
export interface ReservedIpv6State {
    dropletId?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    /**
     * The region that the reserved IPv6 needs to be reserved to.
     */
    regionSlug?: pulumi.Input<string>;
    /**
     * the uniform resource name for the reserved ipv6
     */
    reservedIpv6Urn?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ReservedIpv6 resource.
 */
export interface ReservedIpv6Args {
    dropletId?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    /**
     * The region that the reserved IPv6 needs to be reserved to.
     */
    regionSlug: pulumi.Input<string>;
}
