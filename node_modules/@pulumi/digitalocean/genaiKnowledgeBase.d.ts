import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
export declare class GenaiKnowledgeBase extends pulumi.CustomResource {
    /**
     * Get an existing GenaiKnowledgeBase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GenaiKnowledgeBaseState, opts?: pulumi.CustomResourceOptions): GenaiKnowledgeBase;
    /**
     * Returns true if the given object is an instance of GenaiKnowledgeBase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GenaiKnowledgeBase;
    /**
     * The time when the knowledge base was added to the agent.
     */
    readonly addedToAgentAt: pulumi.Output<string | undefined>;
    /**
     * The time when the knowledge base was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
     */
    readonly databaseId: pulumi.Output<string | undefined>;
    /**
     * Data sources for the knowledge base
     */
    readonly datasources: pulumi.Output<outputs.GenaiKnowledgeBaseDataSource[]>;
    /**
     * The unique identifier of the embedding model
     */
    readonly embeddingModelUuid: pulumi.Output<string>;
    /**
     * Indicates whether the knowledge base is public or private.
     */
    readonly isPublic: pulumi.Output<boolean | undefined>;
    /**
     * The last indexing job for the knowledge base.
     */
    readonly lastIndexingJobs: pulumi.Output<outputs.GenaiKnowledgeBaseLastIndexingJob[] | undefined>;
    /**
     * The name of the knowledge base.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The unique identifier of the project to which the knowledge base belongs.
     */
    readonly projectId: pulumi.Output<string>;
    readonly region: pulumi.Output<string>;
    readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The unique identifier of the VPC to which the knowledge base belongs.
     */
    readonly vpcUuid: pulumi.Output<string | undefined>;
    /**
     * Create a GenaiKnowledgeBase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GenaiKnowledgeBaseArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GenaiKnowledgeBase resources.
 */
export interface GenaiKnowledgeBaseState {
    /**
     * The time when the knowledge base was added to the agent.
     */
    addedToAgentAt?: pulumi.Input<string>;
    /**
     * The time when the knowledge base was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
     */
    databaseId?: pulumi.Input<string>;
    /**
     * Data sources for the knowledge base
     */
    datasources?: pulumi.Input<pulumi.Input<inputs.GenaiKnowledgeBaseDataSource>[]>;
    /**
     * The unique identifier of the embedding model
     */
    embeddingModelUuid?: pulumi.Input<string>;
    /**
     * Indicates whether the knowledge base is public or private.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * The last indexing job for the knowledge base.
     */
    lastIndexingJobs?: pulumi.Input<pulumi.Input<inputs.GenaiKnowledgeBaseLastIndexingJob>[]>;
    /**
     * The name of the knowledge base.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier of the project to which the knowledge base belongs.
     */
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique identifier of the VPC to which the knowledge base belongs.
     */
    vpcUuid?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a GenaiKnowledgeBase resource.
 */
export interface GenaiKnowledgeBaseArgs {
    /**
     * The time when the knowledge base was added to the agent.
     */
    addedToAgentAt?: pulumi.Input<string>;
    /**
     * The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
     */
    databaseId?: pulumi.Input<string>;
    /**
     * Data sources for the knowledge base
     */
    datasources: pulumi.Input<pulumi.Input<inputs.GenaiKnowledgeBaseDataSource>[]>;
    /**
     * The unique identifier of the embedding model
     */
    embeddingModelUuid: pulumi.Input<string>;
    /**
     * Indicates whether the knowledge base is public or private.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * The last indexing job for the knowledge base.
     */
    lastIndexingJobs?: pulumi.Input<pulumi.Input<inputs.GenaiKnowledgeBaseLastIndexingJob>[]>;
    /**
     * The name of the knowledge base.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier of the project to which the knowledge base belongs.
     */
    projectId: pulumi.Input<string>;
    region: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique identifier of the VPC to which the knowledge base belongs.
     */
    vpcUuid?: pulumi.Input<string>;
}
