import * as pulumi from "@pulumi/pulumi";
export declare class GenaiAgentRoute extends pulumi.CustomResource {
    /**
     * Get an existing GenaiAgentRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GenaiAgentRouteState, opts?: pulumi.CustomResourceOptions): GenaiAgentRoute;
    /**
     * Returns true if the given object is an instance of GenaiAgentRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GenaiAgentRoute;
    /**
     * The UUID of the child agent.
     */
    readonly childAgentUuid: pulumi.Output<string>;
    /**
     * if-case condition for the route.
     */
    readonly ifCase: pulumi.Output<string | undefined>;
    /**
     * The UUID of the parent agent.
     */
    readonly parentAgentUuid: pulumi.Output<string>;
    readonly rollback: pulumi.Output<boolean | undefined>;
    /**
     * A name for the route.
     */
    readonly routeName: pulumi.Output<string | undefined>;
    /**
     * The UUID of the linkage
     */
    readonly uuid: pulumi.Output<string>;
    /**
     * Create a GenaiAgentRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GenaiAgentRouteArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GenaiAgentRoute resources.
 */
export interface GenaiAgentRouteState {
    /**
     * The UUID of the child agent.
     */
    childAgentUuid?: pulumi.Input<string>;
    /**
     * if-case condition for the route.
     */
    ifCase?: pulumi.Input<string>;
    /**
     * The UUID of the parent agent.
     */
    parentAgentUuid?: pulumi.Input<string>;
    rollback?: pulumi.Input<boolean>;
    /**
     * A name for the route.
     */
    routeName?: pulumi.Input<string>;
    /**
     * The UUID of the linkage
     */
    uuid?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a GenaiAgentRoute resource.
 */
export interface GenaiAgentRouteArgs {
    /**
     * The UUID of the child agent.
     */
    childAgentUuid: pulumi.Input<string>;
    /**
     * if-case condition for the route.
     */
    ifCase?: pulumi.Input<string>;
    /**
     * The UUID of the parent agent.
     */
    parentAgentUuid: pulumi.Input<string>;
    rollback?: pulumi.Input<boolean>;
    /**
     * A name for the route.
     */
    routeName?: pulumi.Input<string>;
}
