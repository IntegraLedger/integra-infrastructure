import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
export declare function getGenaiOpenaiApiKeys(args?: GetGenaiOpenaiApiKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetGenaiOpenaiApiKeysResult>;
/**
 * A collection of arguments for invoking getGenaiOpenaiApiKeys.
 */
export interface GetGenaiOpenaiApiKeysArgs {
    filters?: inputs.GetGenaiOpenaiApiKeysFilter[];
    sorts?: inputs.GetGenaiOpenaiApiKeysSort[];
}
/**
 * A collection of values returned by getGenaiOpenaiApiKeys.
 */
export interface GetGenaiOpenaiApiKeysResult {
    readonly filters?: outputs.GetGenaiOpenaiApiKeysFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly openaiApiKeys: outputs.GetGenaiOpenaiApiKeysOpenaiApiKey[];
    readonly sorts?: outputs.GetGenaiOpenaiApiKeysSort[];
}
export declare function getGenaiOpenaiApiKeysOutput(args?: GetGenaiOpenaiApiKeysOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGenaiOpenaiApiKeysResult>;
/**
 * A collection of arguments for invoking getGenaiOpenaiApiKeys.
 */
export interface GetGenaiOpenaiApiKeysOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetGenaiOpenaiApiKeysFilterArgs>[]>;
    sorts?: pulumi.Input<pulumi.Input<inputs.GetGenaiOpenaiApiKeysSortArgs>[]>;
}
