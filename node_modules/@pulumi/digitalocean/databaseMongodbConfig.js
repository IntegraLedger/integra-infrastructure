"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseMongodbConfig = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a virtual resource that can be used to change advanced configuration
 * options for a DigitalOcean managed MongoDB database cluster.
 *
 * > **Note** MongoDB configurations are only removed from state when destroyed. The remote configuration is not unset.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const exampleDatabaseCluster = new digitalocean.DatabaseCluster("example", {
 *     name: "example-mongodb-cluster",
 *     engine: "mongodb",
 *     version: "7",
 *     size: digitalocean.DatabaseSlug.DB_1VPCU1GB,
 *     region: digitalocean.Region.NYC3,
 *     nodeCount: 1,
 * });
 * const example = new digitalocean.DatabaseMongodbConfig("example", {
 *     clusterId: exampleDatabaseCluster.id,
 *     defaultReadConcern: "majority",
 *     defaultWriteConcern: "majority",
 *     transactionLifetimeLimitSeconds: 100,
 *     slowOpThresholdMs: 100,
 *     verbosity: 3,
 * });
 * ```
 *
 * ## Import
 *
 * A MongoDB database cluster's configuration can be imported using the `id` the parent cluster, e.g.
 *
 * ```sh
 * $ pulumi import digitalocean:index/databaseMongodbConfig:DatabaseMongodbConfig example 4b62829a-9c42-465b-aaa3-84051048e712
 * ```
 */
class DatabaseMongodbConfig extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseMongodbConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DatabaseMongodbConfig(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DatabaseMongodbConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseMongodbConfig.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["defaultReadConcern"] = state ? state.defaultReadConcern : undefined;
            resourceInputs["defaultWriteConcern"] = state ? state.defaultWriteConcern : undefined;
            resourceInputs["slowOpThresholdMs"] = state ? state.slowOpThresholdMs : undefined;
            resourceInputs["transactionLifetimeLimitSeconds"] = state ? state.transactionLifetimeLimitSeconds : undefined;
            resourceInputs["verbosity"] = state ? state.verbosity : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["defaultReadConcern"] = args ? args.defaultReadConcern : undefined;
            resourceInputs["defaultWriteConcern"] = args ? args.defaultWriteConcern : undefined;
            resourceInputs["slowOpThresholdMs"] = args ? args.slowOpThresholdMs : undefined;
            resourceInputs["transactionLifetimeLimitSeconds"] = args ? args.transactionLifetimeLimitSeconds : undefined;
            resourceInputs["verbosity"] = args ? args.verbosity : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseMongodbConfig.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DatabaseMongodbConfig = DatabaseMongodbConfig;
/** @internal */
DatabaseMongodbConfig.__pulumiType = 'digitalocean:index/databaseMongodbConfig:DatabaseMongodbConfig';
//# sourceMappingURL=databaseMongodbConfig.js.map