import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
export declare function getGenaiKnowledgeBases(args?: GetGenaiKnowledgeBasesArgs, opts?: pulumi.InvokeOptions): Promise<GetGenaiKnowledgeBasesResult>;
/**
 * A collection of arguments for invoking getGenaiKnowledgeBases.
 */
export interface GetGenaiKnowledgeBasesArgs {
    filters?: inputs.GetGenaiKnowledgeBasesFilter[];
    sorts?: inputs.GetGenaiKnowledgeBasesSort[];
}
/**
 * A collection of values returned by getGenaiKnowledgeBases.
 */
export interface GetGenaiKnowledgeBasesResult {
    readonly filters?: outputs.GetGenaiKnowledgeBasesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly knowledgeBases: outputs.GetGenaiKnowledgeBasesKnowledgeBase[];
    readonly sorts?: outputs.GetGenaiKnowledgeBasesSort[];
}
export declare function getGenaiKnowledgeBasesOutput(args?: GetGenaiKnowledgeBasesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGenaiKnowledgeBasesResult>;
/**
 * A collection of arguments for invoking getGenaiKnowledgeBases.
 */
export interface GetGenaiKnowledgeBasesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetGenaiKnowledgeBasesFilterArgs>[]>;
    sorts?: pulumi.Input<pulumi.Input<inputs.GetGenaiKnowledgeBasesSortArgs>[]>;
}
