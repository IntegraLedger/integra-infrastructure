"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRecordOutput = exports.getRecord = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Get information on a DNS record. This data source provides the name, TTL, and zone
 * file as configured on your DigitalOcean account. This is useful if the record
 * in question is not managed by the provider.
 *
 * An error is triggered if the provided domain name or record are not managed with
 * your DigitalOcean account.
 *
 * ## Example Usage
 *
 * Get data from a DNS record:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const example = digitalocean.getRecord({
 *     domain: "example.com",
 *     name: "test",
 * });
 * export const recordType = example.then(example => example.type);
 * export const recordTtl = example.then(example => example.ttl);
 * ```
 */
function getRecord(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getRecord:getRecord", {
        "domain": args.domain,
        "name": args.name,
    }, opts);
}
exports.getRecord = getRecord;
/**
 * Get information on a DNS record. This data source provides the name, TTL, and zone
 * file as configured on your DigitalOcean account. This is useful if the record
 * in question is not managed by the provider.
 *
 * An error is triggered if the provided domain name or record are not managed with
 * your DigitalOcean account.
 *
 * ## Example Usage
 *
 * Get data from a DNS record:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const example = digitalocean.getRecord({
 *     domain: "example.com",
 *     name: "test",
 * });
 * export const recordType = example.then(example => example.type);
 * export const recordTtl = example.then(example => example.ttl);
 * ```
 */
function getRecordOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("digitalocean:index/getRecord:getRecord", {
        "domain": args.domain,
        "name": args.name,
    }, opts);
}
exports.getRecordOutput = getRecordOutput;
//# sourceMappingURL=getRecord.js.map