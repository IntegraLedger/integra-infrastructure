export { AppArgs, AppState } from "./app";
export type App = import("./app").App;
export declare const App: typeof import("./app").App;
export { CdnArgs, CdnState } from "./cdn";
export type Cdn = import("./cdn").Cdn;
export declare const Cdn: typeof import("./cdn").Cdn;
export { CertificateArgs, CertificateState } from "./certificate";
export type Certificate = import("./certificate").Certificate;
export declare const Certificate: typeof import("./certificate").Certificate;
export { ContainerRegistryArgs, ContainerRegistryState } from "./containerRegistry";
export type ContainerRegistry = import("./containerRegistry").ContainerRegistry;
export declare const ContainerRegistry: typeof import("./containerRegistry").ContainerRegistry;
export { ContainerRegistryDockerCredentialsArgs, ContainerRegistryDockerCredentialsState } from "./containerRegistryDockerCredentials";
export type ContainerRegistryDockerCredentials = import("./containerRegistryDockerCredentials").ContainerRegistryDockerCredentials;
export declare const ContainerRegistryDockerCredentials: typeof import("./containerRegistryDockerCredentials").ContainerRegistryDockerCredentials;
export { CustomImageArgs, CustomImageState } from "./customImage";
export type CustomImage = import("./customImage").CustomImage;
export declare const CustomImage: typeof import("./customImage").CustomImage;
export { DatabaseClusterArgs, DatabaseClusterState } from "./databaseCluster";
export type DatabaseCluster = import("./databaseCluster").DatabaseCluster;
export declare const DatabaseCluster: typeof import("./databaseCluster").DatabaseCluster;
export { DatabaseConnectionPoolArgs, DatabaseConnectionPoolState } from "./databaseConnectionPool";
export type DatabaseConnectionPool = import("./databaseConnectionPool").DatabaseConnectionPool;
export declare const DatabaseConnectionPool: typeof import("./databaseConnectionPool").DatabaseConnectionPool;
export { DatabaseDbArgs, DatabaseDbState } from "./databaseDb";
export type DatabaseDb = import("./databaseDb").DatabaseDb;
export declare const DatabaseDb: typeof import("./databaseDb").DatabaseDb;
export { DatabaseFirewallArgs, DatabaseFirewallState } from "./databaseFirewall";
export type DatabaseFirewall = import("./databaseFirewall").DatabaseFirewall;
export declare const DatabaseFirewall: typeof import("./databaseFirewall").DatabaseFirewall;
export { DatabaseKafkaConfigArgs, DatabaseKafkaConfigState } from "./databaseKafkaConfig";
export type DatabaseKafkaConfig = import("./databaseKafkaConfig").DatabaseKafkaConfig;
export declare const DatabaseKafkaConfig: typeof import("./databaseKafkaConfig").DatabaseKafkaConfig;
export { DatabaseKafkaTopicArgs, DatabaseKafkaTopicState } from "./databaseKafkaTopic";
export type DatabaseKafkaTopic = import("./databaseKafkaTopic").DatabaseKafkaTopic;
export declare const DatabaseKafkaTopic: typeof import("./databaseKafkaTopic").DatabaseKafkaTopic;
export { DatabaseMongodbConfigArgs, DatabaseMongodbConfigState } from "./databaseMongodbConfig";
export type DatabaseMongodbConfig = import("./databaseMongodbConfig").DatabaseMongodbConfig;
export declare const DatabaseMongodbConfig: typeof import("./databaseMongodbConfig").DatabaseMongodbConfig;
export { DatabaseMysqlConfigArgs, DatabaseMysqlConfigState } from "./databaseMysqlConfig";
export type DatabaseMysqlConfig = import("./databaseMysqlConfig").DatabaseMysqlConfig;
export declare const DatabaseMysqlConfig: typeof import("./databaseMysqlConfig").DatabaseMysqlConfig;
export { DatabaseOnlineMigrationArgs, DatabaseOnlineMigrationState } from "./databaseOnlineMigration";
export type DatabaseOnlineMigration = import("./databaseOnlineMigration").DatabaseOnlineMigration;
export declare const DatabaseOnlineMigration: typeof import("./databaseOnlineMigration").DatabaseOnlineMigration;
export { DatabaseOpensearchConfigArgs, DatabaseOpensearchConfigState } from "./databaseOpensearchConfig";
export type DatabaseOpensearchConfig = import("./databaseOpensearchConfig").DatabaseOpensearchConfig;
export declare const DatabaseOpensearchConfig: typeof import("./databaseOpensearchConfig").DatabaseOpensearchConfig;
export { DatabasePostgresqlConfigArgs, DatabasePostgresqlConfigState } from "./databasePostgresqlConfig";
export type DatabasePostgresqlConfig = import("./databasePostgresqlConfig").DatabasePostgresqlConfig;
export declare const DatabasePostgresqlConfig: typeof import("./databasePostgresqlConfig").DatabasePostgresqlConfig;
export { DatabaseRedisConfigArgs, DatabaseRedisConfigState } from "./databaseRedisConfig";
export type DatabaseRedisConfig = import("./databaseRedisConfig").DatabaseRedisConfig;
export declare const DatabaseRedisConfig: typeof import("./databaseRedisConfig").DatabaseRedisConfig;
export { DatabaseReplicaArgs, DatabaseReplicaState } from "./databaseReplica";
export type DatabaseReplica = import("./databaseReplica").DatabaseReplica;
export declare const DatabaseReplica: typeof import("./databaseReplica").DatabaseReplica;
export { DatabaseUserArgs, DatabaseUserState } from "./databaseUser";
export type DatabaseUser = import("./databaseUser").DatabaseUser;
export declare const DatabaseUser: typeof import("./databaseUser").DatabaseUser;
export { DatabaseValkeyConfigArgs, DatabaseValkeyConfigState } from "./databaseValkeyConfig";
export type DatabaseValkeyConfig = import("./databaseValkeyConfig").DatabaseValkeyConfig;
export declare const DatabaseValkeyConfig: typeof import("./databaseValkeyConfig").DatabaseValkeyConfig;
export { DnsRecordArgs, DnsRecordState } from "./dnsRecord";
export type DnsRecord = import("./dnsRecord").DnsRecord;
export declare const DnsRecord: typeof import("./dnsRecord").DnsRecord;
export { DomainArgs, DomainState } from "./domain";
export type Domain = import("./domain").Domain;
export declare const Domain: typeof import("./domain").Domain;
export { DropletArgs, DropletState } from "./droplet";
export type Droplet = import("./droplet").Droplet;
export declare const Droplet: typeof import("./droplet").Droplet;
export { DropletAutoscaleArgs, DropletAutoscaleState } from "./dropletAutoscale";
export type DropletAutoscale = import("./dropletAutoscale").DropletAutoscale;
export declare const DropletAutoscale: typeof import("./dropletAutoscale").DropletAutoscale;
export { DropletSnapshotArgs, DropletSnapshotState } from "./dropletSnapshot";
export type DropletSnapshot = import("./dropletSnapshot").DropletSnapshot;
export declare const DropletSnapshot: typeof import("./dropletSnapshot").DropletSnapshot;
export { FirewallArgs, FirewallState } from "./firewall";
export type Firewall = import("./firewall").Firewall;
export declare const Firewall: typeof import("./firewall").Firewall;
export { FloatingIpArgs, FloatingIpState } from "./floatingIp";
export type FloatingIp = import("./floatingIp").FloatingIp;
export declare const FloatingIp: typeof import("./floatingIp").FloatingIp;
export { FloatingIpAssignmentArgs, FloatingIpAssignmentState } from "./floatingIpAssignment";
export type FloatingIpAssignment = import("./floatingIpAssignment").FloatingIpAssignment;
export declare const FloatingIpAssignment: typeof import("./floatingIpAssignment").FloatingIpAssignment;
export { GenaiAgentArgs, GenaiAgentState } from "./genaiAgent";
export type GenaiAgent = import("./genaiAgent").GenaiAgent;
export declare const GenaiAgent: typeof import("./genaiAgent").GenaiAgent;
export { GenaiAgentKnowledgeBaseAttachmentArgs, GenaiAgentKnowledgeBaseAttachmentState } from "./genaiAgentKnowledgeBaseAttachment";
export type GenaiAgentKnowledgeBaseAttachment = import("./genaiAgentKnowledgeBaseAttachment").GenaiAgentKnowledgeBaseAttachment;
export declare const GenaiAgentKnowledgeBaseAttachment: typeof import("./genaiAgentKnowledgeBaseAttachment").GenaiAgentKnowledgeBaseAttachment;
export { GenaiAgentRouteArgs, GenaiAgentRouteState } from "./genaiAgentRoute";
export type GenaiAgentRoute = import("./genaiAgentRoute").GenaiAgentRoute;
export declare const GenaiAgentRoute: typeof import("./genaiAgentRoute").GenaiAgentRoute;
export { GenaiFunctionArgs, GenaiFunctionState } from "./genaiFunction";
export type GenaiFunction = import("./genaiFunction").GenaiFunction;
export declare const GenaiFunction: typeof import("./genaiFunction").GenaiFunction;
export { GenaiKnowledgeBaseArgs, GenaiKnowledgeBaseState } from "./genaiKnowledgeBase";
export type GenaiKnowledgeBase = import("./genaiKnowledgeBase").GenaiKnowledgeBase;
export declare const GenaiKnowledgeBase: typeof import("./genaiKnowledgeBase").GenaiKnowledgeBase;
export { GenaiKnowledgeBaseDataSourceArgs, GenaiKnowledgeBaseDataSourceState } from "./genaiKnowledgeBaseDataSource";
export type GenaiKnowledgeBaseDataSource = import("./genaiKnowledgeBaseDataSource").GenaiKnowledgeBaseDataSource;
export declare const GenaiKnowledgeBaseDataSource: typeof import("./genaiKnowledgeBaseDataSource").GenaiKnowledgeBaseDataSource;
export { GenaiOpenaiApiKeyArgs, GenaiOpenaiApiKeyState } from "./genaiOpenaiApiKey";
export type GenaiOpenaiApiKey = import("./genaiOpenaiApiKey").GenaiOpenaiApiKey;
export declare const GenaiOpenaiApiKey: typeof import("./genaiOpenaiApiKey").GenaiOpenaiApiKey;
export { GetAccountResult } from "./getAccount";
export declare const getAccount: typeof import("./getAccount").getAccount;
export declare const getAccountOutput: typeof import("./getAccount").getAccountOutput;
export { GetAppArgs, GetAppResult, GetAppOutputArgs } from "./getApp";
export declare const getApp: typeof import("./getApp").getApp;
export declare const getAppOutput: typeof import("./getApp").getAppOutput;
export { GetCertificateArgs, GetCertificateResult, GetCertificateOutputArgs } from "./getCertificate";
export declare const getCertificate: typeof import("./getCertificate").getCertificate;
export declare const getCertificateOutput: typeof import("./getCertificate").getCertificateOutput;
export { GetContainerRegistryArgs, GetContainerRegistryResult, GetContainerRegistryOutputArgs } from "./getContainerRegistry";
export declare const getContainerRegistry: typeof import("./getContainerRegistry").getContainerRegistry;
export declare const getContainerRegistryOutput: typeof import("./getContainerRegistry").getContainerRegistryOutput;
export { GetDatabaseCaArgs, GetDatabaseCaResult, GetDatabaseCaOutputArgs } from "./getDatabaseCa";
export declare const getDatabaseCa: typeof import("./getDatabaseCa").getDatabaseCa;
export declare const getDatabaseCaOutput: typeof import("./getDatabaseCa").getDatabaseCaOutput;
export { GetDatabaseClusterArgs, GetDatabaseClusterResult, GetDatabaseClusterOutputArgs } from "./getDatabaseCluster";
export declare const getDatabaseCluster: typeof import("./getDatabaseCluster").getDatabaseCluster;
export declare const getDatabaseClusterOutput: typeof import("./getDatabaseCluster").getDatabaseClusterOutput;
export { GetDatabaseConnectionPoolArgs, GetDatabaseConnectionPoolResult, GetDatabaseConnectionPoolOutputArgs } from "./getDatabaseConnectionPool";
export declare const getDatabaseConnectionPool: typeof import("./getDatabaseConnectionPool").getDatabaseConnectionPool;
export declare const getDatabaseConnectionPoolOutput: typeof import("./getDatabaseConnectionPool").getDatabaseConnectionPoolOutput;
export { GetDatabaseMetricsCredentialsResult } from "./getDatabaseMetricsCredentials";
export declare const getDatabaseMetricsCredentials: typeof import("./getDatabaseMetricsCredentials").getDatabaseMetricsCredentials;
export declare const getDatabaseMetricsCredentialsOutput: typeof import("./getDatabaseMetricsCredentials").getDatabaseMetricsCredentialsOutput;
export { GetDatabaseReplicaArgs, GetDatabaseReplicaResult, GetDatabaseReplicaOutputArgs } from "./getDatabaseReplica";
export declare const getDatabaseReplica: typeof import("./getDatabaseReplica").getDatabaseReplica;
export declare const getDatabaseReplicaOutput: typeof import("./getDatabaseReplica").getDatabaseReplicaOutput;
export { GetDatabaseUserArgs, GetDatabaseUserResult, GetDatabaseUserOutputArgs } from "./getDatabaseUser";
export declare const getDatabaseUser: typeof import("./getDatabaseUser").getDatabaseUser;
export declare const getDatabaseUserOutput: typeof import("./getDatabaseUser").getDatabaseUserOutput;
export { GetDomainArgs, GetDomainResult, GetDomainOutputArgs } from "./getDomain";
export declare const getDomain: typeof import("./getDomain").getDomain;
export declare const getDomainOutput: typeof import("./getDomain").getDomainOutput;
export { GetDomainsArgs, GetDomainsResult, GetDomainsOutputArgs } from "./getDomains";
export declare const getDomains: typeof import("./getDomains").getDomains;
export declare const getDomainsOutput: typeof import("./getDomains").getDomainsOutput;
export { GetDropletArgs, GetDropletResult, GetDropletOutputArgs } from "./getDroplet";
export declare const getDroplet: typeof import("./getDroplet").getDroplet;
export declare const getDropletOutput: typeof import("./getDroplet").getDropletOutput;
export { GetDropletAutoscaleArgs, GetDropletAutoscaleResult, GetDropletAutoscaleOutputArgs } from "./getDropletAutoscale";
export declare const getDropletAutoscale: typeof import("./getDropletAutoscale").getDropletAutoscale;
export declare const getDropletAutoscaleOutput: typeof import("./getDropletAutoscale").getDropletAutoscaleOutput;
export { GetDropletSnapshotArgs, GetDropletSnapshotResult, GetDropletSnapshotOutputArgs } from "./getDropletSnapshot";
export declare const getDropletSnapshot: typeof import("./getDropletSnapshot").getDropletSnapshot;
export declare const getDropletSnapshotOutput: typeof import("./getDropletSnapshot").getDropletSnapshotOutput;
export { GetDropletsArgs, GetDropletsResult, GetDropletsOutputArgs } from "./getDroplets";
export declare const getDroplets: typeof import("./getDroplets").getDroplets;
export declare const getDropletsOutput: typeof import("./getDroplets").getDropletsOutput;
export { GetFirewallArgs, GetFirewallResult, GetFirewallOutputArgs } from "./getFirewall";
export declare const getFirewall: typeof import("./getFirewall").getFirewall;
export declare const getFirewallOutput: typeof import("./getFirewall").getFirewallOutput;
export { GetFloatingIpArgs, GetFloatingIpResult, GetFloatingIpOutputArgs } from "./getFloatingIp";
export declare const getFloatingIp: typeof import("./getFloatingIp").getFloatingIp;
export declare const getFloatingIpOutput: typeof import("./getFloatingIp").getFloatingIpOutput;
export { GetGenaiAgentArgs, GetGenaiAgentResult, GetGenaiAgentOutputArgs } from "./getGenaiAgent";
export declare const getGenaiAgent: typeof import("./getGenaiAgent").getGenaiAgent;
export declare const getGenaiAgentOutput: typeof import("./getGenaiAgent").getGenaiAgentOutput;
export { GetGenaiAgentVersionsArgs, GetGenaiAgentVersionsResult, GetGenaiAgentVersionsOutputArgs } from "./getGenaiAgentVersions";
export declare const getGenaiAgentVersions: typeof import("./getGenaiAgentVersions").getGenaiAgentVersions;
export declare const getGenaiAgentVersionsOutput: typeof import("./getGenaiAgentVersions").getGenaiAgentVersionsOutput;
export { GetGenaiAgentsArgs, GetGenaiAgentsResult, GetGenaiAgentsOutputArgs } from "./getGenaiAgents";
export declare const getGenaiAgents: typeof import("./getGenaiAgents").getGenaiAgents;
export declare const getGenaiAgentsOutput: typeof import("./getGenaiAgents").getGenaiAgentsOutput;
export { GetGenaiAgentsByOpenaiApiKeyArgs, GetGenaiAgentsByOpenaiApiKeyResult, GetGenaiAgentsByOpenaiApiKeyOutputArgs } from "./getGenaiAgentsByOpenaiApiKey";
export declare const getGenaiAgentsByOpenaiApiKey: typeof import("./getGenaiAgentsByOpenaiApiKey").getGenaiAgentsByOpenaiApiKey;
export declare const getGenaiAgentsByOpenaiApiKeyOutput: typeof import("./getGenaiAgentsByOpenaiApiKey").getGenaiAgentsByOpenaiApiKeyOutput;
export { GetGenaiKnowledgeBaseArgs, GetGenaiKnowledgeBaseResult, GetGenaiKnowledgeBaseOutputArgs } from "./getGenaiKnowledgeBase";
export declare const getGenaiKnowledgeBase: typeof import("./getGenaiKnowledgeBase").getGenaiKnowledgeBase;
export declare const getGenaiKnowledgeBaseOutput: typeof import("./getGenaiKnowledgeBase").getGenaiKnowledgeBaseOutput;
export { GetGenaiKnowledgeBaseDataSourcesArgs, GetGenaiKnowledgeBaseDataSourcesResult, GetGenaiKnowledgeBaseDataSourcesOutputArgs } from "./getGenaiKnowledgeBaseDataSources";
export declare const getGenaiKnowledgeBaseDataSources: typeof import("./getGenaiKnowledgeBaseDataSources").getGenaiKnowledgeBaseDataSources;
export declare const getGenaiKnowledgeBaseDataSourcesOutput: typeof import("./getGenaiKnowledgeBaseDataSources").getGenaiKnowledgeBaseDataSourcesOutput;
export { GetGenaiKnowledgeBasesArgs, GetGenaiKnowledgeBasesResult, GetGenaiKnowledgeBasesOutputArgs } from "./getGenaiKnowledgeBases";
export declare const getGenaiKnowledgeBases: typeof import("./getGenaiKnowledgeBases").getGenaiKnowledgeBases;
export declare const getGenaiKnowledgeBasesOutput: typeof import("./getGenaiKnowledgeBases").getGenaiKnowledgeBasesOutput;
export { GetGenaiOpenaiApiKeyArgs, GetGenaiOpenaiApiKeyResult, GetGenaiOpenaiApiKeyOutputArgs } from "./getGenaiOpenaiApiKey";
export declare const getGenaiOpenaiApiKey: typeof import("./getGenaiOpenaiApiKey").getGenaiOpenaiApiKey;
export declare const getGenaiOpenaiApiKeyOutput: typeof import("./getGenaiOpenaiApiKey").getGenaiOpenaiApiKeyOutput;
export { GetGenaiOpenaiApiKeysArgs, GetGenaiOpenaiApiKeysResult, GetGenaiOpenaiApiKeysOutputArgs } from "./getGenaiOpenaiApiKeys";
export declare const getGenaiOpenaiApiKeys: typeof import("./getGenaiOpenaiApiKeys").getGenaiOpenaiApiKeys;
export declare const getGenaiOpenaiApiKeysOutput: typeof import("./getGenaiOpenaiApiKeys").getGenaiOpenaiApiKeysOutput;
export { GetImageArgs, GetImageResult, GetImageOutputArgs } from "./getImage";
export declare const getImage: typeof import("./getImage").getImage;
export declare const getImageOutput: typeof import("./getImage").getImageOutput;
export { GetImagesArgs, GetImagesResult, GetImagesOutputArgs } from "./getImages";
export declare const getImages: typeof import("./getImages").getImages;
export declare const getImagesOutput: typeof import("./getImages").getImagesOutput;
export { GetKubernetesClusterArgs, GetKubernetesClusterResult, GetKubernetesClusterOutputArgs } from "./getKubernetesCluster";
export declare const getKubernetesCluster: typeof import("./getKubernetesCluster").getKubernetesCluster;
export declare const getKubernetesClusterOutput: typeof import("./getKubernetesCluster").getKubernetesClusterOutput;
export { GetKubernetesVersionsArgs, GetKubernetesVersionsResult, GetKubernetesVersionsOutputArgs } from "./getKubernetesVersions";
export declare const getKubernetesVersions: typeof import("./getKubernetesVersions").getKubernetesVersions;
export declare const getKubernetesVersionsOutput: typeof import("./getKubernetesVersions").getKubernetesVersionsOutput;
export { GetLoadBalancerArgs, GetLoadBalancerResult, GetLoadBalancerOutputArgs } from "./getLoadBalancer";
export declare const getLoadBalancer: typeof import("./getLoadBalancer").getLoadBalancer;
export declare const getLoadBalancerOutput: typeof import("./getLoadBalancer").getLoadBalancerOutput;
export { GetPartnerAttachmentArgs, GetPartnerAttachmentResult, GetPartnerAttachmentOutputArgs } from "./getPartnerAttachment";
export declare const getPartnerAttachment: typeof import("./getPartnerAttachment").getPartnerAttachment;
export declare const getPartnerAttachmentOutput: typeof import("./getPartnerAttachment").getPartnerAttachmentOutput;
export { GetPartnerAttachmentServiceKeyArgs, GetPartnerAttachmentServiceKeyResult, GetPartnerAttachmentServiceKeyOutputArgs } from "./getPartnerAttachmentServiceKey";
export declare const getPartnerAttachmentServiceKey: typeof import("./getPartnerAttachmentServiceKey").getPartnerAttachmentServiceKey;
export declare const getPartnerAttachmentServiceKeyOutput: typeof import("./getPartnerAttachmentServiceKey").getPartnerAttachmentServiceKeyOutput;
export { GetProjectArgs, GetProjectResult, GetProjectOutputArgs } from "./getProject";
export declare const getProject: typeof import("./getProject").getProject;
export declare const getProjectOutput: typeof import("./getProject").getProjectOutput;
export { GetProjectsArgs, GetProjectsResult, GetProjectsOutputArgs } from "./getProjects";
export declare const getProjects: typeof import("./getProjects").getProjects;
export declare const getProjectsOutput: typeof import("./getProjects").getProjectsOutput;
export { GetRecordArgs, GetRecordResult, GetRecordOutputArgs } from "./getRecord";
export declare const getRecord: typeof import("./getRecord").getRecord;
export declare const getRecordOutput: typeof import("./getRecord").getRecordOutput;
export { GetRecordsArgs, GetRecordsResult, GetRecordsOutputArgs } from "./getRecords";
export declare const getRecords: typeof import("./getRecords").getRecords;
export declare const getRecordsOutput: typeof import("./getRecords").getRecordsOutput;
export { GetRegionArgs, GetRegionResult, GetRegionOutputArgs } from "./getRegion";
export declare const getRegion: typeof import("./getRegion").getRegion;
export declare const getRegionOutput: typeof import("./getRegion").getRegionOutput;
export { GetRegionsArgs, GetRegionsResult, GetRegionsOutputArgs } from "./getRegions";
export declare const getRegions: typeof import("./getRegions").getRegions;
export declare const getRegionsOutput: typeof import("./getRegions").getRegionsOutput;
export { GetReservedIpArgs, GetReservedIpResult, GetReservedIpOutputArgs } from "./getReservedIp";
export declare const getReservedIp: typeof import("./getReservedIp").getReservedIp;
export declare const getReservedIpOutput: typeof import("./getReservedIp").getReservedIpOutput;
export { GetReservedIpv6Args, GetReservedIpv6Result, GetReservedIpv6OutputArgs } from "./getReservedIpv6";
export declare const getReservedIpv6: typeof import("./getReservedIpv6").getReservedIpv6;
export declare const getReservedIpv6Output: typeof import("./getReservedIpv6").getReservedIpv6Output;
export { GetSizesArgs, GetSizesResult, GetSizesOutputArgs } from "./getSizes";
export declare const getSizes: typeof import("./getSizes").getSizes;
export declare const getSizesOutput: typeof import("./getSizes").getSizesOutput;
export { GetSpacesBucketArgs, GetSpacesBucketResult, GetSpacesBucketOutputArgs } from "./getSpacesBucket";
export declare const getSpacesBucket: typeof import("./getSpacesBucket").getSpacesBucket;
export declare const getSpacesBucketOutput: typeof import("./getSpacesBucket").getSpacesBucketOutput;
export { GetSpacesBucketObjectArgs, GetSpacesBucketObjectResult, GetSpacesBucketObjectOutputArgs } from "./getSpacesBucketObject";
export declare const getSpacesBucketObject: typeof import("./getSpacesBucketObject").getSpacesBucketObject;
export declare const getSpacesBucketObjectOutput: typeof import("./getSpacesBucketObject").getSpacesBucketObjectOutput;
export { GetSpacesBucketObjectsArgs, GetSpacesBucketObjectsResult, GetSpacesBucketObjectsOutputArgs } from "./getSpacesBucketObjects";
export declare const getSpacesBucketObjects: typeof import("./getSpacesBucketObjects").getSpacesBucketObjects;
export declare const getSpacesBucketObjectsOutput: typeof import("./getSpacesBucketObjects").getSpacesBucketObjectsOutput;
export { GetSpacesBucketsArgs, GetSpacesBucketsResult, GetSpacesBucketsOutputArgs } from "./getSpacesBuckets";
export declare const getSpacesBuckets: typeof import("./getSpacesBuckets").getSpacesBuckets;
export declare const getSpacesBucketsOutput: typeof import("./getSpacesBuckets").getSpacesBucketsOutput;
export { GetSpacesKeyArgs, GetSpacesKeyResult, GetSpacesKeyOutputArgs } from "./getSpacesKey";
export declare const getSpacesKey: typeof import("./getSpacesKey").getSpacesKey;
export declare const getSpacesKeyOutput: typeof import("./getSpacesKey").getSpacesKeyOutput;
export { GetSshKeyArgs, GetSshKeyResult, GetSshKeyOutputArgs } from "./getSshKey";
export declare const getSshKey: typeof import("./getSshKey").getSshKey;
export declare const getSshKeyOutput: typeof import("./getSshKey").getSshKeyOutput;
export { GetSshKeysArgs, GetSshKeysResult, GetSshKeysOutputArgs } from "./getSshKeys";
export declare const getSshKeys: typeof import("./getSshKeys").getSshKeys;
export declare const getSshKeysOutput: typeof import("./getSshKeys").getSshKeysOutput;
export { GetTagArgs, GetTagResult, GetTagOutputArgs } from "./getTag";
export declare const getTag: typeof import("./getTag").getTag;
export declare const getTagOutput: typeof import("./getTag").getTagOutput;
export { GetTagsArgs, GetTagsResult, GetTagsOutputArgs } from "./getTags";
export declare const getTags: typeof import("./getTags").getTags;
export declare const getTagsOutput: typeof import("./getTags").getTagsOutput;
export { GetVolumeArgs, GetVolumeResult, GetVolumeOutputArgs } from "./getVolume";
export declare const getVolume: typeof import("./getVolume").getVolume;
export declare const getVolumeOutput: typeof import("./getVolume").getVolumeOutput;
export { GetVolumeSnapshotArgs, GetVolumeSnapshotResult, GetVolumeSnapshotOutputArgs } from "./getVolumeSnapshot";
export declare const getVolumeSnapshot: typeof import("./getVolumeSnapshot").getVolumeSnapshot;
export declare const getVolumeSnapshotOutput: typeof import("./getVolumeSnapshot").getVolumeSnapshotOutput;
export { GetVpcArgs, GetVpcResult, GetVpcOutputArgs } from "./getVpc";
export declare const getVpc: typeof import("./getVpc").getVpc;
export declare const getVpcOutput: typeof import("./getVpc").getVpcOutput;
export { GetVpcNatGatewayArgs, GetVpcNatGatewayResult, GetVpcNatGatewayOutputArgs } from "./getVpcNatGateway";
export declare const getVpcNatGateway: typeof import("./getVpcNatGateway").getVpcNatGateway;
export declare const getVpcNatGatewayOutput: typeof import("./getVpcNatGateway").getVpcNatGatewayOutput;
export { GetVpcPeeringArgs, GetVpcPeeringResult, GetVpcPeeringOutputArgs } from "./getVpcPeering";
export declare const getVpcPeering: typeof import("./getVpcPeering").getVpcPeering;
export declare const getVpcPeeringOutput: typeof import("./getVpcPeering").getVpcPeeringOutput;
export { KubernetesClusterArgs, KubernetesClusterState } from "./kubernetesCluster";
export type KubernetesCluster = import("./kubernetesCluster").KubernetesCluster;
export declare const KubernetesCluster: typeof import("./kubernetesCluster").KubernetesCluster;
export { KubernetesNodePoolArgs, KubernetesNodePoolState } from "./kubernetesNodePool";
export type KubernetesNodePool = import("./kubernetesNodePool").KubernetesNodePool;
export declare const KubernetesNodePool: typeof import("./kubernetesNodePool").KubernetesNodePool;
export { LoadBalancerArgs, LoadBalancerState } from "./loadBalancer";
export type LoadBalancer = import("./loadBalancer").LoadBalancer;
export declare const LoadBalancer: typeof import("./loadBalancer").LoadBalancer;
export { MonitorAlertArgs, MonitorAlertState } from "./monitorAlert";
export type MonitorAlert = import("./monitorAlert").MonitorAlert;
export declare const MonitorAlert: typeof import("./monitorAlert").MonitorAlert;
export { PartnerAttachmentArgs, PartnerAttachmentState } from "./partnerAttachment";
export type PartnerAttachment = import("./partnerAttachment").PartnerAttachment;
export declare const PartnerAttachment: typeof import("./partnerAttachment").PartnerAttachment;
export { ProjectArgs, ProjectState } from "./project";
export type Project = import("./project").Project;
export declare const Project: typeof import("./project").Project;
export { ProjectResourcesArgs, ProjectResourcesState } from "./projectResources";
export type ProjectResources = import("./projectResources").ProjectResources;
export declare const ProjectResources: typeof import("./projectResources").ProjectResources;
export * from "./provider";
export { ReservedIpArgs, ReservedIpState } from "./reservedIp";
export type ReservedIp = import("./reservedIp").ReservedIp;
export declare const ReservedIp: typeof import("./reservedIp").ReservedIp;
export { ReservedIpAssignmentArgs, ReservedIpAssignmentState } from "./reservedIpAssignment";
export type ReservedIpAssignment = import("./reservedIpAssignment").ReservedIpAssignment;
export declare const ReservedIpAssignment: typeof import("./reservedIpAssignment").ReservedIpAssignment;
export { ReservedIpv6Args, ReservedIpv6State } from "./reservedIpv6";
export type ReservedIpv6 = import("./reservedIpv6").ReservedIpv6;
export declare const ReservedIpv6: typeof import("./reservedIpv6").ReservedIpv6;
export { ReservedIpv6AssignmentArgs, ReservedIpv6AssignmentState } from "./reservedIpv6Assignment";
export type ReservedIpv6Assignment = import("./reservedIpv6Assignment").ReservedIpv6Assignment;
export declare const ReservedIpv6Assignment: typeof import("./reservedIpv6Assignment").ReservedIpv6Assignment;
export { SpacesBucketArgs, SpacesBucketState } from "./spacesBucket";
export type SpacesBucket = import("./spacesBucket").SpacesBucket;
export declare const SpacesBucket: typeof import("./spacesBucket").SpacesBucket;
export { SpacesBucketCorsConfigurationArgs, SpacesBucketCorsConfigurationState } from "./spacesBucketCorsConfiguration";
export type SpacesBucketCorsConfiguration = import("./spacesBucketCorsConfiguration").SpacesBucketCorsConfiguration;
export declare const SpacesBucketCorsConfiguration: typeof import("./spacesBucketCorsConfiguration").SpacesBucketCorsConfiguration;
export { SpacesBucketLoggingArgs, SpacesBucketLoggingState } from "./spacesBucketLogging";
export type SpacesBucketLogging = import("./spacesBucketLogging").SpacesBucketLogging;
export declare const SpacesBucketLogging: typeof import("./spacesBucketLogging").SpacesBucketLogging;
export { SpacesBucketObjectArgs, SpacesBucketObjectState } from "./spacesBucketObject";
export type SpacesBucketObject = import("./spacesBucketObject").SpacesBucketObject;
export declare const SpacesBucketObject: typeof import("./spacesBucketObject").SpacesBucketObject;
export { SpacesBucketPolicyArgs, SpacesBucketPolicyState } from "./spacesBucketPolicy";
export type SpacesBucketPolicy = import("./spacesBucketPolicy").SpacesBucketPolicy;
export declare const SpacesBucketPolicy: typeof import("./spacesBucketPolicy").SpacesBucketPolicy;
export { SpacesKeyArgs, SpacesKeyState } from "./spacesKey";
export type SpacesKey = import("./spacesKey").SpacesKey;
export declare const SpacesKey: typeof import("./spacesKey").SpacesKey;
export { SshKeyArgs, SshKeyState } from "./sshKey";
export type SshKey = import("./sshKey").SshKey;
export declare const SshKey: typeof import("./sshKey").SshKey;
export { TagArgs, TagState } from "./tag";
export type Tag = import("./tag").Tag;
export declare const Tag: typeof import("./tag").Tag;
export { UptimeAlertArgs, UptimeAlertState } from "./uptimeAlert";
export type UptimeAlert = import("./uptimeAlert").UptimeAlert;
export declare const UptimeAlert: typeof import("./uptimeAlert").UptimeAlert;
export { UptimeCheckArgs, UptimeCheckState } from "./uptimeCheck";
export type UptimeCheck = import("./uptimeCheck").UptimeCheck;
export declare const UptimeCheck: typeof import("./uptimeCheck").UptimeCheck;
export { VolumeArgs, VolumeState } from "./volume";
export type Volume = import("./volume").Volume;
export declare const Volume: typeof import("./volume").Volume;
export { VolumeAttachmentArgs, VolumeAttachmentState } from "./volumeAttachment";
export type VolumeAttachment = import("./volumeAttachment").VolumeAttachment;
export declare const VolumeAttachment: typeof import("./volumeAttachment").VolumeAttachment;
export { VolumeSnapshotArgs, VolumeSnapshotState } from "./volumeSnapshot";
export type VolumeSnapshot = import("./volumeSnapshot").VolumeSnapshot;
export declare const VolumeSnapshot: typeof import("./volumeSnapshot").VolumeSnapshot;
export { VpcArgs, VpcState } from "./vpc";
export type Vpc = import("./vpc").Vpc;
export declare const Vpc: typeof import("./vpc").Vpc;
export { VpcNatGatewayArgs, VpcNatGatewayState } from "./vpcNatGateway";
export type VpcNatGateway = import("./vpcNatGateway").VpcNatGateway;
export declare const VpcNatGateway: typeof import("./vpcNatGateway").VpcNatGateway;
export { VpcPeeringArgs, VpcPeeringState } from "./vpcPeering";
export type VpcPeering = import("./vpcPeering").VpcPeering;
export declare const VpcPeering: typeof import("./vpcPeering").VpcPeering;
export * from "./types/enums";
import * as config from "./config";
import * as types from "./types";
export { config, types, };
