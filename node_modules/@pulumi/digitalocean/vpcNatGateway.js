"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcNatGateway = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a DigitalOcean VPC NAT Gateway resource. This can be used to create, modify,
 * read and delete VPC NAT Gateways.
 *
 * NOTE: VPC NAT Gateway is currently in Private Preview.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const my_vpc = new digitalocean.Vpc("my-vpc", {
 *     name: "terraform-example",
 *     region: "nyc3",
 * });
 * const my_vpc_nat_gateway = new digitalocean.VpcNatGateway("my-vpc-nat-gateway", {
 *     name: "terraform-example",
 *     type: "PUBLIC",
 *     region: "nyc3",
 *     size: 1,
 *     vpcs: [{
 *         vpcUuid: my_vpc.id,
 *     }],
 *     udpTimeoutSeconds: 30,
 *     icmpTimeoutSeconds: 30,
 *     tcpTimeoutSeconds: 30,
 * });
 * ```
 *
 * ## Import
 *
 * VPC NAT Gateways can be imported using their `id`, e.g.
 *
 * ```sh
 * $ pulumi import digitalocean:index/vpcNatGateway:VpcNatGateway my-vpc-nat-gateway-id 38e66834-d741-47ec-88e7-c70cbdcz0445
 * ```
 */
class VpcNatGateway extends pulumi.CustomResource {
    /**
     * Get an existing VpcNatGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VpcNatGateway(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VpcNatGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcNatGateway.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["egresses"] = state ? state.egresses : undefined;
            resourceInputs["icmpTimeoutSeconds"] = state ? state.icmpTimeoutSeconds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tcpTimeoutSeconds"] = state ? state.tcpTimeoutSeconds : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["udpTimeoutSeconds"] = state ? state.udpTimeoutSeconds : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["vpcs"] = state ? state.vpcs : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.vpcs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcs'");
            }
            resourceInputs["icmpTimeoutSeconds"] = args ? args.icmpTimeoutSeconds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["tcpTimeoutSeconds"] = args ? args.tcpTimeoutSeconds : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["udpTimeoutSeconds"] = args ? args.udpTimeoutSeconds : undefined;
            resourceInputs["vpcs"] = args ? args.vpcs : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["egresses"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcNatGateway.__pulumiType, name, resourceInputs, opts);
    }
}
exports.VpcNatGateway = VpcNatGateway;
/** @internal */
VpcNatGateway.__pulumiType = 'digitalocean:index/vpcNatGateway:VpcNatGateway';
//# sourceMappingURL=vpcNatGateway.js.map