import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
export declare class GenaiKnowledgeBaseDataSource extends pulumi.CustomResource {
    /**
     * Get an existing GenaiKnowledgeBaseDataSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GenaiKnowledgeBaseDataSourceState, opts?: pulumi.CustomResourceOptions): GenaiKnowledgeBaseDataSource;
    /**
     * Returns true if the given object is an instance of GenaiKnowledgeBaseDataSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GenaiKnowledgeBaseDataSource;
    /**
     * UUID of the Knowledge Base
     */
    readonly knowledgeBaseUuid: pulumi.Output<string>;
    readonly spacesDataSource: pulumi.Output<outputs.GenaiKnowledgeBaseDataSourceSpacesDataSource | undefined>;
    readonly webCrawlerDataSource: pulumi.Output<outputs.GenaiKnowledgeBaseDataSourceWebCrawlerDataSource | undefined>;
    /**
     * Create a GenaiKnowledgeBaseDataSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GenaiKnowledgeBaseDataSourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GenaiKnowledgeBaseDataSource resources.
 */
export interface GenaiKnowledgeBaseDataSourceState {
    /**
     * UUID of the Knowledge Base
     */
    knowledgeBaseUuid?: pulumi.Input<string>;
    spacesDataSource?: pulumi.Input<inputs.GenaiKnowledgeBaseDataSourceSpacesDataSource>;
    webCrawlerDataSource?: pulumi.Input<inputs.GenaiKnowledgeBaseDataSourceWebCrawlerDataSource>;
}
/**
 * The set of arguments for constructing a GenaiKnowledgeBaseDataSource resource.
 */
export interface GenaiKnowledgeBaseDataSourceArgs {
    /**
     * UUID of the Knowledge Base
     */
    knowledgeBaseUuid: pulumi.Input<string>;
    spacesDataSource?: pulumi.Input<inputs.GenaiKnowledgeBaseDataSourceSpacesDataSource>;
    webCrawlerDataSource?: pulumi.Input<inputs.GenaiKnowledgeBaseDataSourceWebCrawlerDataSource>;
}
